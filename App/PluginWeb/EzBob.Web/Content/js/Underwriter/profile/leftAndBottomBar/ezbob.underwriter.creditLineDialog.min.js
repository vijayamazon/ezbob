(function(){var n,t={}.hasOwnProperty,i=function(n,i){function u(){this.constructor=n}for(var r in i)t.call(i,r)&&(n[r]=i[r]);return u.prototype=i.prototype,n.prototype=new u,n.__super__=i.prototype,n};n=typeof exports!="undefined"&&exports!==null?exports:this;n.EzBob=n.EzBob||{};EzBob.Underwriter=EzBob.Underwriter||{};EzBob.Underwriter.CreditLineDialog=function(n){function t(){return t.__super__.constructor.apply(this,arguments)}return i(t,n),t.prototype.template="#credit-line-dialog-template",t.prototype.initialize=function(){return this.cloneModel=this.model.clone(),this.modelBinder=new Backbone.ModelBinder,this.bindTo(this.cloneModel,"change:StartingFromDate",this.onChangeStartingDate,this)},t.prototype.events={"click .btnOk":"save","change #loan-type ":"onChangeLoanType","click #isLoanTypeSelectionAllowed":"onChangeLoanTypeSelectionAllowed","change #isLoanTypeSelectionAllowed":"onChangeLoanTypeSelectionAllowed"},t.prototype.ui={form:"form"},t.prototype.jqoptions=function(){return{modal:!0,resizable:!1,title:"Credit Line",position:"center",draggable:!1,width:"73%",height:Math.max(window.innerHeight*.9,600),dialogClass:"creditline-popup"}},t.prototype.onChangeLoanTypeSelectionAllowed=function(){var n,t;if(n="#loan-type, #repaymentPeriod",(t=this.cloneModel.get("IsLoanTypeSelectionAllowed"))===1||t==="1"){if(this.$el.find(n).attr("disabled","disabled"),this.cloneModel.get("LoanTypeId")!==1)return this.cloneModel.set("LoanTypeId",1)}else return this.$el.find(n).removeAttr("disabled")},t.prototype.onChangeStartingDate=function(){var t,n;return n=moment.utc(this.cloneModel.get("StartingFromDate"),"DD/MM/YYYY"),n!==null?(t=n.add("hours",this.cloneModel.get("OfferValidForHours")),this.cloneModel.set("OfferValidateUntil",t.format("DD/MM/YYYY"))):void 0},t.prototype.onChangeLoanType=function(){var t,n;if(n=+this.$el.find("#loan-type option:selected").val(),t=_.find(this.cloneModel.get("LoanTypes"),function(t){return t.Id===n}),n!=null)return this.cloneModel.set("RepaymentPerion",t.RepaymentPeriod),this},t.prototype.save=function(){var n,t,i,r=this;if(this.ui.form.valid())return i=this.getPostData(),n=""+window.gRootPath+"Underwriter/ApplicationInfo/ChangeCreditLine",t=$.post(n,i),t.done(function(){return r.model.fetch()}),this.close()},t.prototype.getPostData=function(){var n;return n=this.cloneModel.toJSON(),{id:n.CashRequestId,loanType:n.LoanTypeId,discountPlan:n.DiscountPlanId,amount:n.amount,interestRate:n.InterestRate,repaymentPeriod:n.RepaymentPerion,offerStart:n.StartingFromDate,offerValidUntil:n.OfferValidateUntil,useSetupFee:n.UseSetupFee,allowSendingEmail:n.AllowSendingEmail,isLoanTypeSelectionAllowed:n.IsLoanTypeSelectionAllowed}},t.prototype.bindings={InterestRate:{selector:"input[name='interestRate']",converter:EzBob.BindingConverters.percentsFormat},RepaymentPerion:{selector:"input[name='repaymentPeriod']",converter:EzBob.BindingConverters.notNull},StartingFromDate:{selector:"input[name='startingFromDate']"},OfferValidateUntil:{selector:"input[name='offerValidUntil']"},UseSetupFee:{selector:"input[name='enableSetupFee']"},AllowSendingEmail:{selector:"input[name='allowSendingEmail']"},IsLoanTypeSelectionAllowed:{selector:"select[name='isLoanTypeSelectionAllowed']"},DiscountPlanId:"select[name='discount-plan']",LoanTypeId:"select[name='loan-type']",amount:{selector:"#offeredCreditLine",converter:EzBob.BindingConverters.moneyFormat}},t.prototype.onRender=function(){return this.modelBinder.bind(this.cloneModel,this.el,this.bindings),this.$el.find("#startingFromDate, #offerValidUntil").mask("99/99/9999").datepicker({autoclose:!0,format:"dd/mm/yyyy"}),this.$el.find("#offeredCreditLine").autoNumeric(EzBob.moneyFormat),this.$el.find("#offeredCreditLine").val()==="-"&&this.$el.find("#offeredCreditLine").val(""),this.$el.find("#interestRate").autoNumeric(EzBob.percentFormat),this.$el.find("#repaymentPeriod").numericOnly(),this.setValidator()},t.prototype.setValidator=function(){return this.ui.form.validate({rules:{offeredCreditLine:{required:!0,autonumericMin:EzBob.Config.XMinLoan,autonumericMax:EzBob.Config.MaxLoan},repaymentPeriod:{required:!0,autonumericMin:1},interestRate:{required:!0,autonumericMin:1,autonumericMax:100},startingFromDate:{required:!0,dateCheck:!0},offerValidUntil:{required:!0,dateCheck:!0}},messages:{interestRate:{autonumericMin:"Interest Rate is below limit.",autonumericMax:"Interest Rate is above limit."},repaymentPeriod:{autonumericMin:"Repayment Period is below limit."},startingFromDate:{dateCheck:"Incorrect Date, please insert date in format DD/MM/YYYY, for example 21/06/2012"},offerValidUntil:{dateCheck:"Incorrect Date, please insert date in format DD/MM/YYYY, for example 21/06/2012"}},errorPlacement:EzBob.Validation.errorPlacement,unhighlight:EzBob.Validation.unhighlight})},t}(Backbone.Marionette.ItemView)}).call(this)