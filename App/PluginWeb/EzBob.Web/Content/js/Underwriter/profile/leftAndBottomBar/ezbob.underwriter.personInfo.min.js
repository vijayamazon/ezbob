(function(){var n,i={}.hasOwnProperty,t=function(n,t){function u(){this.constructor=n}for(var r in t)i.call(t,r)&&(n[r]=t[r]);return u.prototype=t.prototype,n.prototype=new u,n.__super__=t.prototype,n};n=typeof exports!="undefined"&&exports!==null?exports:this;n.EzBob=n.EzBob||{};EzBob.Underwriter=EzBob.Underwriter||{};EzBob.Underwriter.PersonInfoView=function(n){function i(){return i.__super__.constructor.apply(this,arguments)}return t(i,n),i.prototype.template="#profile-person-info-template",i.prototype.initialize=function(){return this.bindTo(this.model,"change sync",this.render,this)},i.prototype.onRender=function(){var n;this.model.get("BrokerID")&&this.$el.find("#with-broker").addClass("with-broker");this.$el.find(".tltp").tooltip();this.$el.find(".tltp-left").tooltip({placement:"left"});this.model.get("IsWizardComplete")&&this.$el.find("#ForceFinishWizard").addClass("hide");n=this;this.$el.find(".cciMarkSwitch").bootstrapSwitch();this.$el.find(".cciMarkSwitch").bootstrapSwitch("setState",this.model.get("IsCciMarkInAlertMode"));this.$el.find(".cciMarkSwitch").on("switch-change",function(t,i){return n.toggleCciMark(t,i)});this.$el.find(".testUserSwitch").bootstrapSwitch();this.$el.find(".testUserSwitch").bootstrapSwitch("setState",this.model.get("IsTestInAlertMode"));return this.$el.find(".testUserSwitch").on("switch-change",function(t,i){return n.toggleIsTest(t,i)})},i.prototype.toggleCciMark=function(){var n,t=this;return n=this.model.get("Id"),BlockUi(),$.post(window.gRootPath+"Underwriter/ApplicationInfo/ToggleCciMark",{id:n}).done(function(n){return n.error?EzBob.App.trigger("error",n.error):(t.setAlertStatus(n.mark,".cci-mark-td"),t.model.set("IsCciMarkInAlertMode",n.mark))}).always(function(){return UnBlockUi()})},i.prototype.toggleIsTest=function(){var n,t=this;return n=this.model.get("Id"),BlockUi(),$.post(window.gRootPath+"Underwriter/ApplicationInfo/ToggleIsTest",{id:n}).done(function(n){return n.error?EzBob.App.trigger("error",n.error):(t.setAlertStatus(n.isTest,".is-test-td"),t.model.set("IsTestInAlertMode",n.isTest))}).always(function(){return UnBlockUi()})},i.prototype.setAlertStatus=function(n,t){var i;return i=this.$el.find(t),n?i.addClass("red_cell"):i.removeClass("red_cell")},i.prototype.events={'click button[name="changeDisabledState"]':"changeDisabledState",'click button[name="editEmail"]':"editEmail",'click [name="avoidAutomaticDecisionButton"]':"avoidAutomaticDecisionButton",'click [name="changeFraudStatusManualy"]':"changeFraudStatusManualyClicked",'click [name="TrustPilotStatusUpdate"]':"updateTrustPilotStatus","click #MainStrategyHidden":"activateMainStratgey","click #ForceFinishWizard":"activateFinishWizard"},i.prototype.activateMainStratgey=function(){return $.post(""+window.gRootPath+"Underwriter/ApplicationInfo/ActivateMainStrategy",{customerId:this.model.get("Id")})},i.prototype.activateFinishWizard=function(){return $.post(""+window.gRootPath+"Underwriter/ApplicationInfo/ActivateFinishWizard",{customerId:this.model.get("Id")})},i.prototype.updateTrustPilotStatus=function(){var n,t=this;n=new EzBob.Dialogs.ComboEdit({model:this.model,propertyName:"TrustPilotStatusName",title:"Trust Pilot Status",width:500,postValueName:"status",comboValues:this.model.get("TrustPilotStatusList"),url:"Underwriter/ApplicationInfo/UpdateTrustPilotStatus",data:{id:this.model.get("Id")}});n.render();n.on("done",function(){return t.model.fetch()})},i.prototype.changeFraudStatusManualyClicked=function(){var n,t,i,r=this;return n=new EzBob.Underwriter.FraudStatusModel({customerId:this.model.get("Id"),currentStatus:this.model.get("FraudCheckStatusId")}),BlockUi("on"),t=this,i=n.fetch(),i.done(function(){var i;i=new EzBob.Underwriter.FraudStatusLayout({model:n});i.render();EzBob.App.jqmodal.show(i);BlockUi("off");return i.on("saved",function(){var i;return i=n.get("currentStatus"),r.model.set("FraudCheckStatusId",i),r.model.set("FraudCheckStatus",n.get("currentStatusText")),t.setAlertStatus(i!==0,".fraud-status",".fraud-status-td")})})},i.prototype.templateHelpers={getIcon:function(){return this.EmailState==="Confirmed"||this.EmailState==="ManuallyConfirmed"?"icon-ok":"icon-question-sign"}},i.prototype.serializeData=function(){var n;return n=this.model.toJSON(),{data:n,getIcon:this.templateHelpers.getIcon}},i.prototype.changeDisabledState=function(){var n,i,r,t,u=this;return n=new EzBob.Underwriter.CollectionStatusModel({customerId:this.model.get("Id"),currentStatus:this.model.get("CustomerStatusId")}),r=this.model.get("CustomerStatusId"),i=this.model.get("Id"),BlockUi("on"),t=n.fetch(),t.done(function(){var f;f=new EzBob.Underwriter.CollectionStatusLayout({model:n});f.render();EzBob.App.jqmodal.show(f);BlockUi("off");return f.on("saved",function(){var f,e;return f=n.get("currentStatus"),e=u,t=$.post(""+window.gRootPath+"Underwriter/ApplicationInfo/GetIsStatusWarning",{status:f}),t.done(function(n){var u,t;return BlockUi("on"),u=n,e.model.fetch(),t=$.post(""+window.gRootPath+"Underwriter/ApplicationInfo/LogStatusChange",{newStatus:f,prevStatus:r,customerId:i}),t.done(function(){return BlockUi("off")})})})})},i.prototype.avoidAutomaticDecisionButton=function(){var n;n=new EzBob.Dialogs.CheckBoxEdit({model:this.model,propertyName:"IsAvoid",title:"Manual Decision",width:350,postValueName:"enbaled",checkboxName:"Enable Manual Decision",url:"Underwriter/ApplicationInfo/AvoidAutomaticDecision",data:{id:this.model.get("Id")}});n.render()},i.prototype.editEmail=function(){var n;n=new EzBob.EmailEditView({model:this.model});EzBob.App.jqmodal.show(n);n.on("showed",function(){return n.$el.find("input").focus()});return!1},i}(Backbone.Marionette.ItemView);EzBob.Underwriter.PersonalInfoModel=function(n){function i(){return i.__super__.constructor.apply(this,arguments)}return t(i,n),i.prototype.idAttribute="Id",i.prototype.urlRoot=window.gRootPath+"Underwriter/CustomerInfo/Index",i.prototype.initialize=function(){var t,n,u,i,r;this.on("change:FraudCheckStatusId",this.changeFraudCheckStatus,this);for(this.changeFraudCheckStatus(),this.StatusesArr===void 0&&(this.statuses=EzBob.Underwriter.StaticData.CollectionStatuses),this.StatusesArr={},i=this.statuses.models,r=[],n=0,u=i.length;n<u;n++)t=i[n],r.push(this.StatusesArr[t.get("Id")]=t.get("Name"));return r},i.prototype.changeFraudCheckStatus=function(){var t,n;t=this.get("FraudCheckStatusId");n="";switch(t){case 2:n="red_cell"}return this.set("FraudHighlightCss",n)},i}(Backbone.Model)}).call(this)