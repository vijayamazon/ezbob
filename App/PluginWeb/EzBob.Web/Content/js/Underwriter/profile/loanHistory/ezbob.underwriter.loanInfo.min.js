(function(){var t,n,i=function(n,t){return function(){return n.apply(t,arguments)}},u={}.hasOwnProperty,r=function(n,t){function r(){this.constructor=n}for(var i in t)u.call(t,i)&&(n[i]=t[i]);return r.prototype=t.prototype,n.prototype=new r,n.__super__=t.prototype,n};n=typeof exports!="undefined"&&exports!==null?exports:this;n.EzBob=n.EzBob||{};EzBob.Underwriter=EzBob.Underwriter||{};EzBob.Underwriter.LoanInfoView=function(n){function u(){return this.LoanTypeSelectionAllowedChanged=i(this.LoanTypeSelectionAllowedChanged,this),u.__super__.constructor.apply(this,arguments)}return r(u,n),u.prototype.template="#profile-loan-info-template",u.prototype.initialize=function(n){this.bindTo(this.model,"change reset sync",this.render,this);this.personalInfo=n.personalInfo;this.bindTo(this.personalInfo,"change",this.UpdateNewCreditLineState,this);this.bindTo(this.personalInfo,"change:CreditResult",this.changeCreditResult,this);EzBob.App.vent.on("newCreditLine:done",this.showCreditLineDialog,this);EzBob.App.vent.on("newCreditLine:error",this.showErrorDialog,this);EzBob.App.vent.on("newCreditLine:pass",this.showNothing,this);return this.parentView=n.parentView},u.prototype.events={"click [name='startingDateChangeButton']":"editStartingDate","click [name='offerValidUntilDateChangeButton']":"editOfferValidUntilDate","click [name='repaymentPeriodChangeButton']":"editRepaymentPeriod","click [name='interestRateChangeButton']":"editInterestRate","click [name='openCreditLineChangeButton']":"editOfferedCreditLine","click [name='openPacnetManualButton']":"openPacnetManual","click [name='clearPacnetManualButton']":"clearPacnetManual","click [name='editDetails']":"editDetails","click [name='manualSetupFeeEditAmountButton']":"editManualSetupFeeAmount","click [name='manualSetupFeeEditPercentButton']":"editManualSetupFeePercent","click [name='newCreditLineBtn']":"runNewCreditLine",'click [name="loanType"]':"loanType",'click [name="isLoanTypeSelectionAllowed"]':"isLoanTypeSelectionAllowed",'click [name="discountPlan"]':"discountPlan",'click [name="loanSource"]':"loanSource","click .create-loan-hidden-toggle":"toggleCreateLoanHidden","click #create-loan-hidden-btn":"createLoanHidden"},u.prototype.toggleCreateLoanHidden=function(n){if(n.ctrlKey)return this.$el.find("#create-loan-hidden").toggleClass("hide")},u.prototype.createLoanHidden=function(){var n,u,t,i,r=this;if(u=this.model.get("CustomerId"),n=parseInt(this.$el.find("#create-loan-hidden-amount").val(),10)||0,i=this.$el.find("#create-loan-hidden-date").val(),n<=0){EzBob.ShowMessageTimeout("Amount not specified.","Cannot create loan",2);return}if(!/^\d\d\d\d-\d\d-\d\d$/.test(i)){EzBob.ShowMessageTimeout("Date not specified.","Cannot create loan",2);return}return t=$.post(window.gRootPath+"Underwriter/ApplicationInfo/CreateLoanHidden",{nCustomerID:u,nAmount:n,sDate:i}),t.done(function(n){return n.success&&(r.$el.find("#create-loan-hidden-amount").val(""),r.$el.find("#create-loan-hidden-date").val(""),r.$el.find("#create-loan-hidden").addClass("hide"),EzBob.ShowMessageTimeout("A loan has been created.","Loan created",2)),n.error?EzBob.ShowMessage(n.error,"Cannot create loan"):EzBob.ShowMessage("Failed to create loan.","Cannot create loan")}),t.fail(function(){return EzBob.ShowMessage("Failed to create loan.","Cannot create loan")})},u.prototype.editOfferValidUntilDate=function(){var n;n=new EzBob.Dialogs.DateEdit({model:this.model,propertyName:"OfferValidateUntil",title:"Offer valid until edit",width:370,postValueName:"date",url:"Underwriter/ApplicationInfo/ChangeOferValid",data:{id:this.model.get("CustomerId")}});n.render()},u.prototype.editStartingDate=function(){var n,t;t=this;n=new EzBob.Dialogs.DateEdit({model:this.model,propertyName:"StartingFromDate",title:"Starting date edit",width:400,postValueName:"date",url:"Underwriter/ApplicationInfo/ChangeStartingDate",data:{id:this.model.get("CustomerId")}});n.render();n.on("done",function(){return t.model.fetch()})},u.prototype.editRepaymentPeriod=function(){var n;n=new EzBob.Dialogs.IntegerEdit({model:this.model,propertyName:"RepaymentPerion",title:"Repayment period edit",width:400,postValueName:"period",url:"Underwriter/ApplicationInfo/ChangeCashRequestRepaymentPeriod",data:{id:this.model.get("CashRequestId")},required:!0});n.render()},u.prototype.editOfferedCreditLine=function(){var t,n;t=this;n=new EzBob.Underwriter.CreditLineEditDialog({model:this.model});EzBob.App.jqmodal.show(n);n.on("showed",function(){return n.$el.find("input").focus()});n.on("done",function(){return t.model.fetch()})},u.prototype.openPacnetManual=function(){var n,t;t=this;n=new EzBob.Dialogs.PacentManual({model:this.model,title:"Pacnet Balance - Add Manual Funds",width:400,postValueName:"amount",url:"Underwriter/ApplicationInfo/SavePacnetManual",data:{limit:EzBob.Config.PacnetBalanceMaxManualChange},min:EzBob.Config.PacnetBalanceMaxManualChange*-1,max:EzBob.Config.PacnetBalanceMaxManualChange,required:!0});n.render();n.on("done",function(){return t.model.fetch()})},u.prototype.clearPacnetManual=function(){var n,t;t=this;n=new EzBob.Dialogs.CheckBoxEdit({model:this.model,propertyName:"UseSetupFee",title:"Pacnet Balance - Clear Manual Funds",width:400,checkboxName:"I am sure",postValueName:"isSure",url:"Underwriter/ApplicationInfo/DisableTodaysPacnetManual",data:{isSure:this.model.get("IsSure")}});n.render();n.on("done",function(){return t.model.fetch()})},u.prototype.editInterestRate=function(){var n;n=new EzBob.Dialogs.PercentsEdit({model:this.model,propertyName:"InterestRate",title:"Interest rate edit",width:400,postValueName:"interestRate",url:"Underwriter/ApplicationInfo/ChangeCashRequestInterestRate",data:{id:this.model.get("CashRequestId")},required:!0});n.render()},u.prototype.editDetails=function(){var n;n=new EzBob.Dialogs.TextEdit({model:this.model,propertyName:"Details",title:"Details edit",width:400,postValueName:"details",url:"Underwriter/ApplicationInfo/SaveDetails",data:{id:this.model.get("CustomerId")}});n.render()},u.prototype.editManualSetupFeeAmount=function(){var n;n=new EzBob.Dialogs.PoundsNoDecimalsEdit({model:this.model,propertyName:"ManualSetupFeeAmount",title:"Manual setup fee amount edit",width:400,postValueName:"manualAmount",url:"Underwriter/ApplicationInfo/ChangeManualSetupFeeAmount",data:{id:this.model.get("CashRequestId")},required:!1});n.render()},u.prototype.editManualSetupFeePercent=function(){var n;n=new EzBob.Dialogs.PercentsEdit({model:this.model,propertyName:"ManualSetupFeePercent",title:"Manual setup fee percent edit",width:400,postValueName:"manualPercent",url:"Underwriter/ApplicationInfo/ChangeManualSetupFeePercent",data:{id:this.model.get("CashRequestId")},required:!1});n.render()},u.prototype.runNewCreditLine=function(n){var t,i=this;return $(n.currentTarget).hasClass("disabled")?!1:(t=$("<select/>").css("height","30px").css("width","270px").append("<option value='1'>Skip everything, go to manual decision<\/option>").append("<option value='2'>Update everything except of MP's and go to manual decisions<\/option>").append("<option value='3'>Update everything and apply auto rules<\/option>").append("<option value='4'>Update everything and go to manual decision<\/option>"),EzBob.ShowMessage(t,"New Credit Line Option",function(){return i.RunCustomerCheck(t.val())},"OK",null,"Cancel"),!1)},u.prototype.RunCustomerCheck=function(n){var i,r=this;return i=this,BlockUi("on"),$.post(window.gRootPath+"Underwriter/ApplicationInfo/RunNewCreditLine",{Id:this.model.get("CustomerId"),NewCreditLineOption:n}).done(function(u){var f;return u.Message==="Go to new mode"?$.post(window.gRootPath+"Underwriter/ApplicationInfo/RunNewCreditLineNewMode1",{Id:i.model.get("CustomerId"),NewCreditLineOption:n}).done(function(){return $.post(window.gRootPath+"Underwriter/ApplicationInfo/RunNewCreditLineNewMode2",{Id:i.model.get("CustomerId"),NewCreditLineOption:n}).done(function(){return i.personalInfo.fetch().done(function(){if(BlockUi("off"),i.personalInfo.get("CreditResult")!=="WaitingForDecision"){EzBob.App.vent.trigger("newCreditLine:pass");return}return i.personalInfo.get("StrategyError")!==null&&i.personalInfo.get("StrategyError")!==""?EzBob.App.vent.trigger("newCreditLine:error",i.personalInfo.get("StrategyError")):EzBob.App.vent.trigger("newCreditLine:done")})})}):(f=new t(r.personalInfo,"IsMainStratFinished"),f.start())}).fail(function(n){return console.error(n.responseText)})},u.prototype.isLoanTypeSelectionAllowed=function(){var n,t=this;n=new EzBob.Dialogs.ComboEdit({model:this.model,propertyName:"IsLoanTypeSelectionAllowed",title:"Customer selection",width:400,postValueName:"loanTypeSelection",comboValues:[{value:0,text:"Disabled"},{value:1,text:"Enabled"}],url:"Underwriter/ApplicationInfo/IsLoanTypeSelectionAllowed",data:{id:this.model.get("CashRequestId")}});n.render();n.on("done",function(){return t.LoanTypeSelectionAllowedChanged()})},u.prototype.LoanTypeSelectionAllowedChanged=function(){var n,t,i;return(t=this.model.get("LoanSource")||{},n=t.IsCustomerRepaymentPeriodSelectionAllowed,n&&(i=this.model.get("IsLoanTypeSelectionAllowed"))!==1&&i!=="1")?this.$el.find("button[name=loanType], button[name=repaymentPeriodChangeButton]").removeAttr("disabled"):(this.$el.find("button[name=loanType], button[name=repaymentPeriodChangeButton]").attr("disabled","disabled"),this.model.get("LoanTypeId")!==1)?this.model.set("LoanTypeId",1):void 0},u.prototype.loanType=function(){var n,t=this;n=new EzBob.Dialogs.ComboEdit({model:this.model,propertyName:"LoanTypeId",title:"Loan type",width:400,comboValues:this.model.get("LoanTypes"),postValueName:"LoanType",url:"Underwriter/ApplicationInfo/LoanType",data:{id:this.model.get("CashRequestId")}});n.render();n.on("done",function(){return t.model.fetch()})},u.prototype.loanSource=function(){var n,t=this;n=new EzBob.Dialogs.ComboEdit({model:this.model,propertyName:"LoanSource.LoanSourceID",title:"Loan source",width:400,comboValues:_.map(this.model.get("AllLoanSources"),function(n){return{value:n.Id,text:n.Name}}),postValueName:"LoanSourceID",url:"Underwriter/ApplicationInfo/LoanSource",data:{id:this.model.get("CashRequestId")}});n.render();n.on("done",function(){return t.model.fetch()})},u.prototype.validateLoanSourceRelated=function(){var n,t,r,i;return n=this.model.get("LoanSource")||{},this.validateInterestVsSource(n.MaxInterest),n.DefaultRepaymentPeriod===-1?this.$el.find("button[name=repaymentPeriodChangeButton]").removeAttr("disabled"):this.$el.find("button[name=repaymentPeriodChangeButton]").attr("disabled","disabled"),this.parentView.clearDecisionNotes(),n.MaxEmployeeCount!==-1&&(i=this.model.get("EmployeeCount"),i>=0&&i>n.MaxEmployeeCount&&this.parentView.appendDecisionNote("<div class=red>Employee count ("+i+") is greater than max employee count ("+n.MaxEmployeeCount+") for this loan source.<\/div>")),n.MaxAnnualTurnover!==-1&&(t=this.model.get("AnnualTurnover"),t>=0&&t>n.MaxAnnualTurnover&&this.parentView.appendDecisionNote("<div class=red>Annual turnover ("+EzBob.formatPoundsNoDecimals(t)+") is greater than max annual turnover ("+EzBob.formatPoundsNoDecimals(n.MaxAnnualTurnover)+") for this loan source.<\/div>")),n.AlertOnCustomerReasonType!==-1&&(r=this.model.get("CustomerReasonType"),n.AlertOnCustomerReasonType===r)?this.parentView.appendDecisionNote('<div class=red>Please note customer reason: "'+this.model.get("CustomerReason")+'".<\/div>'):void 0},u.prototype.validateInterestVsSource=function(n){var r,e,o,s,h,t,u,i,c,f;if(n!==-1&&(this.$el.find(".interest-exceeds-max-by-loan-source").toggleClass("hide",this.model.get("InterestRate")<=n),this.$el.find(".discount-exceeds-max-by-loan-source").addClass("hide"),u=this.model.get("DiscountPlanPercents"),u!=null)){for(e=this.model.get("InterestRate"),r=u.split(","),f=[],i=0,c=r.length;i<c;i++)if(t=r[i],t[0]==="("&&(t=t.substr(1)),s=parseFloat(t),o=100+s,h=e*o/100,h>n){this.$el.find(".discount-exceeds-max-by-loan-source").removeClass("hide");break}else f.push(void 0);return f}},u.prototype.discountPlan=function(){var n,t=this;n=new EzBob.Dialogs.ComboEdit({model:this.model,propertyName:"DiscountPlanId",title:"Discount Plan",width:400,comboValues:_.map(this.model.get("DiscountPlans"),function(n){return{value:n.Id,text:n.Name}}),postValueName:"DiscountPlanId",url:"Underwriter/ApplicationInfo/DiscountPlan",data:{id:this.model.get("CashRequestId")}});n.render();n.on("done",function(){return t.model.fetch()})},u.prototype.UpdateNewCreditLineState=function(){var n,t;return t=this.personalInfo.get("CreditResult")==="WaitingForDecision",n=t||!this.personalInfo.get("IsCustomerInEnabledStatus"),$("input[name='newCreditLineBtn']").toggleClass("disabled",n),$("#newCreditLineLnkId").toggleClass("disabled",n)},u.prototype.statuses={},u.prototype.serializeData=function(){return{m:this.model.toJSON()}},u.prototype.onRender=function(){var n;return this.$el.find(".tltp").tooltip(),this.$el.find(".tltp-left").tooltip({placement:"left"}),this.UpdateNewCreditLineState(),this.LoanTypeSelectionAllowedChanged(),this.initSwitch(".brokerCommisionSwitch","UseBrokerSetupFee",this.toggleValue,"ChangeBrokerSetupFee"),this.initSwitch(".setupFeeSwitch","UseSetupFee",this.toggleValue,"ChangeSetupFee"),this.initSwitch(".sendEmailsSwitch","AllowSendingEmail",this.toggleValue,"AllowSendingEmails"),(n=this.model.get("IsLoanTypeSelectionAllowed"))===2||n==="2"?this.$el.find("button[name=isLoanTypeSelectionAllowed]").attr("disabled","disabled"):this.$el.find("button[name=isLoanTypeSelectionAllowed]").removeAttr("disabled"),this.validateLoanSourceRelated()},u.prototype.initSwitch=function(n,t,i,r){var u,f;f=this;u=this.model.get(t);this.$el.find(n).bootstrapSwitch();this.$el.find(n).bootstrapSwitch("setState",u);return this.$el.find(n).on("switch-change",function(n,u){return i.call(f,n,u,r,t)})},u.prototype.toggleValue=function(n,t,i,r){var u,f=this;return u=this.model.get("CashRequestId"),BlockUi(),$.post(window.gRootPath+"Underwriter/ApplicationInfo/"+i,{id:u,enabled:t.value}).done(function(n){return n.error?EzBob.App.trigger("error",n.error):f.model.set(r,n.status),isNaN(n.setupFee)?void 0:f.model.set("SetupFee",n.setupFee)}).always(function(){return UnBlockUi()})},u.prototype.changeCreditResult=function(){return this.model.fetch(),this.personalInfo.fetch()},u.prototype.showCreditLineDialog=function(){var n,t=this;return n=this.model.fetch(),n.done(function(){var n;return n=new EzBob.Underwriter.CreditLineDialog({model:t.model}),EzBob.App.jqmodal.show(n)})},u.prototype.showErrorDialog=function(n){return EzBob.ShowMessage(n,"Something went wrong")},u.prototype.showNothing=function(){return this},u}(Backbone.Marionette.ItemView);t=function(){function n(n,t){this.model=n;this.property=t;this.start=i(this.start,this)}return n.prototype.start=function(){var n,t=this;return n=this.model.fetch(),n.done(function(){return t.check()})},n.prototype.check=function(){if(Convert.toBool(this.model.get(this.property))){if(BlockUi("off"),this.model.get("CreditResult")!=="WaitingForDecision"){EzBob.App.vent.trigger("newCreditLine:pass");return}this.model.get("StrategyError")!==null?EzBob.App.vent.trigger("newCreditLine:error",this.model.get("StrategyError")):EzBob.App.vent.trigger("newCreditLine:done");return}return setTimeout(this.start,1e3),this},n}();EzBob.Underwriter.LoanInfoModel=function(n){function t(){return t.__super__.constructor.apply(this,arguments)}return r(t,n),t.prototype.idAttribute="Id",t.prototype.urlRoot=""+window.gRootPath+"Underwriter/ApplicationInfo/Index",t.prototype.initialize=function(){this.on("change:OfferValidateUntil",this.offerChanged,this);return this.on("change:LoanTypeId",this.loanTypeChanged,this)},t.prototype.offerChanged=function(){var n,t;return t=moment(this.get("OfferValidateUntil"),"DD/MM/YYYY"),n=moment(),this.set({OfferExpired:t<n})},t.prototype.loanTypeChanged=function(){var t,n,i;return i=this.get("LoanTypes"),t=parseInt(this.get("LoanTypeId"),10),n=_.find(i,function(n){return n.value===t}),n?this.set("LoanType",n.text):void 0},t}(Backbone.Model)}).call(this)