@using System
@using System.Collections.Generic
@using System.Web
@using EzBob.Web.Infrastructure.Html
@using EZBob.DatabaseLib.Model.Database
@using Integration.ChannelGrabberConfig
@model dynamic
@{
	var origin = ViewBag.CustomerOrigin.GetOrigin();
}

@foreach (KeyValuePair<string, VendorInfo> vip in Configuration.Instance.PureVendors)
{
    VendorInfo vi = vip.Value;

    var sTemplateID = new HtmlString(vi.Name + "AccountInfoTemplate");
    var sFormID = new HtmlString(vi.Name.ToLower() + "Account");

    <script id="@sTemplateID" type="text/template">
        <div class="row-fluid">
            <div class="wizard-top-notification">
                <h2 class="form_start">Please enter your @vi.DisplayName credentials</h2>
            </div>
			
			@if (origin == CustomerOriginEnum.everline) {
				WriteLiteral(string.Join("", vi.ClientSide.LinkForm.Notes));
			}
			
            <form id="@sFormID" class="cg-link-account-form">
                <div class="clearfix">
                    @foreach (FieldInfo fi in vi.ClientSide.LinkForm.Fields)
                    {
                        switch (fi.Type)
                        {
                            case "Text":
								@EzForm.InputTextWizard(
									new EzInputBuilder(
											vi.Name.ToLower() + "_" + fi.PropertyName.ToLower(),
											fi.Caption,
                                           
											cls: "form_field",
											isRequired: true, statusIcon: true, 
											uiEventControlID: "link-account:cg_account_property"), 
									origin: origin)
                                break;

                            case "Password":
								@EzForm.InputTextWizard(
									new EzInputBuilder(
											vi.Name.ToLower() + "_" + fi.PropertyName.ToLower(), fi.Caption,
											type: "password", 
											cls: "form_field", 
											isRequired: true, 
											statusIcon: true, 
											uiEventControlID: "link-account:cg_account_password"), 
									origin: origin)
                                break;

                            default:
                                throw new Exception("Unsupported field type: " + fi.Type);
                        } // switch
                    }

					@EzForm.WizardButton(
						new List<EzButtonModel>{
							new EzButtonModel(
								vi.Name.ToLower() + "_link_account_button", 
								"Link Account", 
								cls: "button btn-green disabled connect-account ev-btn-org", 
								uiEventControlID: "link-account:cg_connect", 
								buttonType: EzButtonType.link, 
								href: "#"),
							new EzButtonModel(
								vi.Name.ToLower() + "_back_button", 
								"Cancel", 
								cls: "back button btn-grey clean-btn", 
								uiEventControlID: "link-account:cg_back", 
								buttonType: EzButtonType.link, 
								href: "#")
						}, 
						origin: origin)

                    @if(origin != CustomerOriginEnum.everline) {
						WriteLiteral(string.Join("", vi.ClientSide.LinkForm.Notes)); 
					}
                </div>
            </form>
        </div>
    </script>
}