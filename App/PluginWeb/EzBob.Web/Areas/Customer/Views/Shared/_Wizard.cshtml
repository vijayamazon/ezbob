@using EzBob.Web.Infrastructure
@using EZBob.DatabaseLib.Model.Database
@model dynamic
		   
@{
	CustomerOriginEnum origin = ViewBag.CustomerOrigin.GetOrigin();
	var privacyPolicy = origin == CustomerOriginEnum.everline ? "/privacy-and-cookie-policy/" : "/privacy-and-cookies/";
	var privacyPolicyLink = ViewBag.CustomerOrigin.FrontendSite + privacyPolicy;
}
<script type="text/template" id="wizard-template">
    <div class="wizard-progress"></div>
    <div class="inner">
		<section id="content">
			<div class="wizard-wrap">
				<div class="wizard-inner-wrap">
					<div class="row-fluid notifications"></div>
					<div class='pages'></div>
				</div>
			</div>
		</section>
        
        <aside class="customer-sidebar wizard">
            @{ Html.RenderPartial("~/Areas/Customer/Views/Shared/SideBars/_Sidebar.cshtml", new ViewDataDictionary(ViewData)); }
        </aside>
        
    </div>
    <div class="clear" ></div>
</script>

<script type="text/template" id="progress-indicator">
    <div class="side-strip">

    </div>
    <div class="wizard-steps">
        @if (ViewBag.CustomerOrigin.GetOrigin() == CustomerOriginEnum.everline)
        {
            <div class="progress-time">
                <%-caption%>
            </div>


        }
        else
        {
            
            <div class="progress-time">
                <span>Just <span class="progress-time-remainig"><%=progress%> minutes</span> to complete your application</span>
            </div>
        }
        <div class="steps-wrap">
            <div class="stripe"></div>
            <div class="progress-bar">
                <div class="green-line">

                </div>
                <div class="grey-line">

                </div>
            </div>
            <ul class="application_steps">
                <%(function() {
                var last = steps.length - 1;

                _.each(steps, function(step, i) {
                var css = '';
                var lastcss = '';
                var circleType = 'center-circle';
                if (i == current) css += 'current';

                if (i < current) css += 'complete';

                if (i == last) {
                lastcss = 'last';
                circleType = 'last-circle';
                }
                if ( i == 0 ) {
                lastcss='first';
                circleType = 'first-circle';
                }
                %>
                <li class="<%- css %> <%-lastcss%> <%-circleType%>" data-step-num="<%= step.num %>">
                    <div class="progress-circle">
                        <div class="inner-circle <%-css%>"><div class="percent"><%=(i+1)%></div></div>

                    </div>
                    <div class="progress-line"></div>
                    <div class="progress-line-<%-css%>"></div>
                    <span class="step_label"><% print(step.title) %></span>
                </li>
                <%}); // for each step
                })(); // inline function - local scope
                %>
            </ul>
        </div>
    </div>
    @{
        var blm = new WizardBrokerLeadModel(Session);

        if (blm.BrokerFillsForCustomer)
        {
            <div class="broker-finish-wizard-later">
                <div class="broker-finish-inner">
                    <div>Dear Broker,</div>
                    <div>
                        You are filling the loan application forms for your customer, @blm.FirstName @blm.LastName.
                    </div>
                    <div class="button-container">
                        For any assistance, please contact us.
                        <button class="button btn-green" title="Click to finish sign up process later and return to dashboard.">Finish later</button>
                    </div>
                </div>
            </div>
        }
    }
	
	<%if(current == 0) {%>
	<div class="wizard-top">
		@{ Html.RenderPartial("~/Areas/Customer/Views/Shared/SideBars/_SecurityIcons.cshtml"); }
		<h2>Apply in just 10 minutes</h2>
		<p>It's quick and easy to apply for a business loan. We just need a few details before we can make a loan decision.</p>
		<p>
			To start the process we need you to first register to create a Customer Account. If you would like to know more about how we collect and use your data, please see our
			<a href="@privacyPolicyLink" target="_blank">Privacy Policy</a>
		</p>
	</div>
	<%}%>
</script>

<script type="text/template" id="vip-template">
    <div id="vipImage" class="vip-image" ui-event-control-id="vip:request-callback-image">
        <div class="vip-button">
            <button type="button" class="button btn-green vip-req-button vip_help" id="vipRequestBtn" ui-event-control-id="vip:request-callback">Request VIP</button>
        </div>

        <div class="hide">
            <div id="vip_help" class="help_window">
                <h2>Enter your contact info</h2>
                <br />
                <form id="vip-form">
                    @EzForm.InputText("VipFullName", "Full name", cls: "form_field", isRequired: true, statusIcon: true, uiEventControlID: "vip:fullname", maxLength: 50)
                    @EzForm.InputText("VipEmail", "Email", cls: "form_field", isRequired: true, statusIcon: true, uiEventControlID: "vip:email", type: "email", maxLength: 300)
                    @EzForm.InputText("VipPhone", "Phone", cls: "form_field", isRequired: true, statusIcon: true, uiEventControlID: "vip:phone", maxLength: 11)
                </form>
                <div class="form_buttons_container">
                    <div class="attardi-button">
						<button class="button btn-green" id="requestVipBtn" ui-event-control-id="vip:continue" onclick="EzBob.App.trigger('wizard:vipRequest');">Continue</button>
						<a href="#" class="button btn-grey" id="cancelVipBtn" onclick="$.colorbox.close();" ui-event-control-id="vip:cancel">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>
