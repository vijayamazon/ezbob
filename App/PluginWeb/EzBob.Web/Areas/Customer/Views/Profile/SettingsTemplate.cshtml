@using System
@using System.Collections.Generic
@using System.Linq
@using EzBob.Web.Infrastructure.Html
@using EZBob.DatabaseLib.Model.Database
@using EZBob.DatabaseLib.Model.Database.UserManagement
@model dynamic
@{
	List<Tuple<string, string>> securityQuestions = (ViewData["Questions"] as List<SecurityQuestion>)
		.Select(x => new Tuple<string, string>(x.Id.ToString(), x.Name))
		.ToList();

	CustomerOriginEnum origin = ViewBag.CustomerOrigin.GetOrigin();
}
<script id="settings-main-template" type="text/template">
	<div class="settings-form">
		<%
		var questionName = null;
		
		if (settings.SecurityQuestions && settings.SecurityQuestions.get(settings.SecurityQuestionId))
			 questionName = settings.SecurityQuestions.get(settings.SecurityQuestionId).get('Name');
		%>
		
		@EzForm.InputTextWizard(new EzInputBuilder(null, "Password", 
			cls: "form_field_left_side form_field",
			value: "**********",
			uiEventControlID: "setting:password",
			specialAttributes: new Dictionary<string, string> { {"readonly", "readonly"}},
			button: new EzButtonModel(null, "Edit",
				"btn-details button btn-green edit-password clean-btn",
				"setting:edit-password", 
				buttonType: EzButtonType.link,
				href:"#")
		), origin: origin)
		
		@EzForm.InputTextWizard(new EzInputBuilder(null, "Security Question",
			cls: "form_field_left_side form_field",
			value: "<%- questionName %>",
			uiEventControlID: "settings:question",
			specialAttributes: new Dictionary<string, string> { { "readonly", "readonly" } },
			button: new EzButtonModel(null, "Edit",
				"btn-details button btn-green edit-question clean-btn",
				"settings:edit-question",
				buttonType: EzButtonType.link,
				href: "#")
		), origin: origin)
	</div>
</script>

<script id="settings-password-template" type="text/template">
	<form id="change-password" action="" method="POST">
			<h2>Select your new password</h2>
			
			@EzForm.InputTextWizard(
				new EzInputBuilder(
						"password", "Current password",
						type: "password",
						cls: "form_field",
						isRequired: true,
						statusIcon: true,
						specialAttributes: new Dictionary<string, string> { { "autocomplete", "off" } },
						uiEventControlID: "settings:current-password"),
				origin: origin)

			@EzForm.InputTextWizard(
				new EzInputBuilder(
						"new_password",
						"New password",
						type: "password",
						cls: "form_field",
						isRequired: true,
						statusIcon: true,
						specialAttributes: new Dictionary<string, string> { { "autocomplete", "off" } },
						uiEventControlID: "settings:new-password"),
				origin: origin)
		
			@EzForm.InputTextWizard(
				new EzInputBuilder(
						"new_password2",
						"Confirm password",
						type: "password",
						cls: "form_field",
						isRequired: true,
						statusIcon: true,
						specialAttributes: new Dictionary<string, string> { { "autocomplete", "off" } },
						uiEventControlID: "settings:new-password-confirm"),
				origin: origin)

			@EzForm.WizardButton(
				new List<EzButtonModel>{
					new EzButtonModel(
						null,
						"Submit",
						cls: "btn-continue button btn-green submit ev-btn-org",
						uiEventControlID: "settings:submit-password",
						buttonType: EzButtonType.link,
						href: "#"),
					new EzButtonModel(
						null,
						"Back",
						cls: "btn-back button btn-grey back ev-btn-org",
						uiEventControlID: "settings:password-back",
						buttonType: EzButtonType.link,
						href: "#")
				},
				origin: origin)
	</form>
</script>

<script id="settings-question-template" type="text/template">
	<form id="change-question">
			<h2>Security question</h2>
				@EzForm.InputTextWizard(
					new EzInputBuilder(
							"currentPassword", "Current password",
							name: "password",
							type: "password",
							cls: "form_field",
							isRequired: true,
							statusIcon: true,
							specialAttributes: new Dictionary<string, string> { { "autocomplete", "off" } },
							uiEventControlID: "settings:question-current-password"),
					origin: origin)
		
				@EzForm.SelectWizard(new EzSelectModel("securityQuestion", "Question", 
					cls: "form_field", 
					listItems: securityQuestions,
					isRequired: true, 
					statusIcon: true, 
					hasEmpty: false,
					uiEventControlID: "settings:question"),
					origin: origin)
				
				@EzForm.InputTextWizard(new EzInputBuilder("SecurityAnswer", "Answer", 
					cls: "form_field",
					name: "answer",
					isRequired: true,
					statusIcon: true,
					uiEventControlID: "settings:question-answer"), 
					origin: origin)

				@EzForm.WizardButton(
				new List<EzButtonModel>{
					new EzButtonModel(
						null,
						"Submit",
						cls: "btn-continue button btn-green submit disabled ev-btn-org",
						uiEventControlID: "settings:submit-question",
						buttonType: EzButtonType.link,
						href: "#"),
					new EzButtonModel(
						null,
						"Back",
						cls: "btn-back back button btn-grey ev-btn-org",
						uiEventControlID: "settings:question-back",
						buttonType: EzButtonType.link,
						href: "#")
				},
				origin: origin)
	</form>
</script>