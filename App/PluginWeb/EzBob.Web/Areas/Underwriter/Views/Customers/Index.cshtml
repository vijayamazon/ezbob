@model EzBob.Web.Areas.Underwriter.Models.LoansGrids
@{
    ViewBag.Title = "Underwriter";
}
<div id="customers-view" style="display: none;">
    <div class="tabbable tabs-left" id="applications-tabs">
        <ul class="nav nav-tabs ui-state-default left-underwriter-menu">
            <li class="active"><a href="#customers/waiting" data-target="#waiting" data-toggle="tab">Waiting for decision</a></li>
            @if (Model.Escalated != null)
            {
                <li><a href="#customers/escalated" data-target="#escalated" data-toggle="tab">Escalated</a></li>
            }
            <li><a href="#customers/pending" data-target="#pending" data-toggle="tab">Pending</a></li>
            <li><a href="#customers/approved" data-target="#approved" data-toggle="tab">Approved</a></li>
            <li><a href="#customers/loans" data-target="#loans" data-toggle="tab">Loans</a></li>
            <li><a href="#customers/late" data-target="#late" data-toggle="tab">Late</a></li>
            <li><a href="#customers/rejected" data-target="#rejected" data-toggle="tab">Rejected</a></li>
            <li><a href="#customers/all" data-target="#all" data-toggle="tab">All customers</a></li>
            <li><a href="#customers/RegisteredCustomers" data-target="#RegisteredCustomers" data-toggle="tab">Registered customers</a></li>
        </ul>
        <div class="tab-content customer-grids">
            <div class="tab-pane active" id="waiting"></div>
            @if (Model.Escalated != null)
            {
                <div class="tab-pane" id="escalated"></div>
            }
            <div class="tab-pane" id="pending"></div>
            <div class="tab-pane" id="approved"></div>
            <div class="tab-pane" id="late"></div>
            <div class="tab-pane" id="rejected"></div>
            <div class="tab-pane" id="all"></div>
            <div class="tab-pane" id="RegisteredCustomers"></div>
            <div class="tab-pane" id="loans"></div>
        </div>
    </div>
</div>
<div id="profile-view" style="display: none;"></div>

@{
    Html.RenderPartial("_ProfileTemplateMain");
}
@{
    Html.RenderPartial("_CustomersPopupTemplate");
}
@section Js{
    <script type="text/javascript">
        $(function() {

            EzBob.Config.MinLoan = @Model.Config.MinLoan;
            EzBob.Config.MaxLoan = @Model.MaxLoan;
            EzBob.Config.XMinLoan = @Model.Config.XMinLoan;
            EzBob.Config.HideAlertsTab = @Model.Config.HideAlertsTab.ToString().ToLower();
            EzBob.Config.HidePassedAlertsTab = @Model.Config.HidePassedAlertsTab.ToString().ToLower();

            var customersOptions = {
                el: $('#customers-view'),
                grids: [
                    { el: '#waiting', url: '@Url.Action(@Model.WaitingForDecision.Action, new {Area = "Underwriter"})', model: @Model.WaitingForDecision.ColModel, names: @Model.WaitingForDecision.ColNames }
                    @if (Model.Escalated != null)
                    {
                    <text>
                    ,
                    { el: '#escalated', url: '@Url.Action(@Model.Escalated.Action, new {Area = "Underwriter"})', model: @Model.Escalated.ColModel, names: @Model.Escalated.ColNames}
                    </text>
                    },
                    { el: '#pending', url: '@Url.Action(@Model.Pending.Action, new {Area = "Underwriter"})', model: @Model.Pending.ColModel, names: @Model.Pending.ColNames },
                    { el: '#approved', url: '@Url.Action(@Model.Approved.Action, new {Area = "Underwriter"})', model: @Model.Approved.ColModel, names: @Model.Approved.ColNames },
                    { el: '#late', url: '@Url.Action(@Model.Late.Action, new {Area = "Underwriter"})', model: @Model.Late.ColModel, names: @Model.Late.ColNames },
                    { el: '#rejected', url: '@Url.Action(@Model.Rejected.Action, new {Area = "Underwriter"})', model: @Model.Rejected.ColModel, names: @Model.Rejected.ColNames },
                    { el: '#all', url: '@Url.Action(@Model.All.Action, new {Area = "Underwriter"})', model: @Model.All.ColModel, names: @Model.All.ColNames },
                    { el: '#RegisteredCustomers', url: '@Url.Action(@Model.RegisteredCustomers.Action, new {Area = "Underwriter"})', model: @Model.RegisteredCustomers.ColModel, names: @Model.RegisteredCustomers.ColNames },
                    { el: '#loans', url: '@Url.Action(@Model.Loans.Action, new {Area = "Underwriter"})', model: @Model.Loans.ColModel, names: @Model.Loans.ColNames },
                ]
            };

            var customersView = new EzBob.Underwriter.CustomersView(customersOptions);
            var profileView = new EzBob.Underwriter.ProfileView({ el: $('#profile-view') });

            var underwriterRouter = Backbone.Router.extend({
                initialize: function() {
                    this.isCustomersRendered = false;
                    this.isProfileRendered = false;
                },
                routes: {
                    "": "customers",
                    "customers/:type": "customers",
                    "profile/:id": "profile",
                    "profile/:id/:type": "profilePopup"
                },
                customers: function(type) {
                    if (!this.isCustomersRendered) {
                        this.isCustomersRendered = true;
                        customersView.render();
                    }
                    customersView.show(type);
                    profileView.hide();
                    EzBob.App.vent.trigger('uw:grids:refresh');
                    profileView.showed = false;
                },
                profile: function(id, type) {
                    if (!this.isProfileRendered) {
                        this.isProfileRendered = true;
                        profileView.render();
                    }
                    customersView.hide();
                    profileView.show(id, type);
                    profileView.showed = true;
                },
                profilePopup: function(id, type) {
                    var profilePopupView = new EzBob.Underwriter.ProfilePopupView({ customerId : id });
                    profilePopupView.modalOptions = { show: true, keyboard: false, width: 650 };
                    
                    var that = this;
                    profilePopupView.on("close", function() {
                        that.navigate("#customers/RegisteredCustomers");
                    });
                    EzBob.App.modal.show(profilePopupView);
                }
            });
            profileView.router =  new underwriterRouter();
            Backbone.history.start();

            if (window.location.hash != "") {
                $('a[href="' + window.location.hash + '"]').tab('show');
            }

            var getCustomerId = function() {
                var res = prompt("Customer ID?");
                if (!EzBob.isNullOrEmpty(res)) {
                    profileView.router.navigate("profile/" + res, { trigger: true, replace: true });
                }
            };
            
            $("#liClient > a").on("click", function() {
                getCustomerId();
                return false;
            });
            Mousetrap.bind("ctrl+g", getCustomerId);
        });
        
        @if (Model.Escalated != null)
        {
            <text>  var escalatedFlag = 1;  </text>
        } else 
        {
            <text>  var escalatedFlag = 0;  </text>
        }
    </script>
}