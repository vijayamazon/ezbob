<script id="company-score-template" type="text/template">
<% (function(response, onAfterRender) {
	function DrawFormatted(sValue, sValueTitle, sTableID) {
		if ((sTableID == 'DLB5') && (sValueTitle == 'Issue company')) {
			var sFormID = 'frm' + (new Date()).getTime() + 'x' + Math.floor(Math.random() * 1000000000);

			while (window[sFormID])
				sFormID += Math.floor(Math.random() * 1000);

			%><form id="<%- sFormID %>" style="display: none;" action="http://wck2.companieshouse.gov.uk/companysearch" method="post" target="_blank">
				<input name="cname" type="text" value="">
				<input name="cnumb" type="text" value="<%- sValue %>">
				<input name="stype" type="radio" value="A" checked="">
				<input name="live" type="checkbox" checked="">
				<input name="dissolved" type="checkbox">
				<input name="former" type="checkbox">
				<input name="proposed" type="checkbox">
				<input name="cosearch" type="image">
				<input name="cosearch" type="hidden" value="1">
			</form><a href="javascript:document.getElementById('<%- sFormID %>').submit()" title="Search this company at Companies House"><%- sValue %></a><%
			return;
		} // if

		%><%- sValue %><%;
	} // DrawFormatted

	// console.log('serialised:', response);

	if (response.result != 'ok') {
		print(response.result);
		return;
	} // if

	for (var i in response.dataset) {
		var aryData = response.dataset[i].Data;
		
		if (aryData.length > 0) {
			var oMetaData = response.dataset[i].MetaData || {};

			// console.log('i =', i, 'aryData =', aryData, 'meta =', oMetaData);

			var sTableWidthClass = oMetaData.UnlimitedWidth ? 'unlimited-width' : 'table';

			if (oMetaData.ID == 'DL41') {
				%><table class="<%- sTableWidthClass %> table-striped blue-header table-bordered">
					<thead><tr><th colspan=4><%- i %></th></tr><tr><th></th><th>Company</th><th>Industry</th><th></th></thead>
					<tbody><%
						var aryCompany = {};
						var aryIndustry = {};

						var sSupplierPaymentPattern = '';

						var obj = aryData[0];

						for (var fld in obj) {
							if (fld == 'Supplier Payment Pattern') {
								sSupplierPaymentPattern = obj[fld];
								continue;
							} // if

							var nFirstSpace = fld.indexOf(' ');

							var aryTarget = (fld.substr(0, nFirstSpace) == 'Company') ? aryCompany : aryIndustry;

							var sSuffix = fld.substr(nFirstSpace + 1);

							if (sSuffix == 'Payment Pattern') {
								aryTarget[sSuffix] = obj[fld];
								continue;
							} // if

							var bIsAverage = (sSuffix.substr(0, 3) == '- A');

							var sKey, sNeedle, sNeedleLen;

							if (bIsAverage) {
								sKey = 'Average DBT';
								sNeedle = ' - ';
								sNeedleLen = 3;
							}
							else {
								sKey = 'Number of DBT';
								sNeedle = '(';
								sNeedleLen = 0;
							} // if

							if (!aryTarget[sKey])
								aryTarget[sKey] = {};

							aryTarget[sKey][sSuffix.substr(sSuffix.indexOf(sNeedle) + sNeedleLen)] = obj[fld];
						} // for each field

						var sGroup = 'Average DBT';

						%><tr><th class=narrow-as-possible>Payment Pattern</th>
							<td class=narrow-as-possible><%- aryCompany['Payment Pattern'] || '' %></td>
							<td class=narrow-as-possible><%- aryIndustry['Payment Pattern'] || '' %></td>
							<td></td>
						</tr>
						<tr>
							<th colspan=3 class=narrow-as-possible><%- sGroup %></th>
							<td></td>
						</tr><%

						var aryMonths = [ 12, 6, 3 ];
						aryMonths.sort(function(a, b) { return b - a; });
						
						var aryOutput = [];
						var aryLast = null;

						for (var j = 0; j < aryMonths.length; j++) {
							var sKey = aryMonths[j] + ' Months';
						
							var bHasCompany  = aryCompany[sGroup]  && (typeof aryCompany[sGroup][sKey] !== 'undefined');
							var bHasIndustry = aryIndustry[sGroup] && (typeof aryIndustry[sGroup][sKey] !== 'undefined');

							var aryThis = {
								caption: sKey,

								has_company: bHasCompany,
								company: (bHasCompany  ? aryCompany[sGroup][sKey]  : ''),

								has_industry: bHasIndustry,
								industry: (bHasIndustry ? aryIndustry[sGroup][sKey] : ''),

								company_trend: '',
								company_to_industry_trend: '',
								industry_trend: ''
							};
						
							if (bHasCompany && bHasIndustry)
								aryThis.company_to_industry_trend = aryThis.company <= aryThis.industry ? 'positive-trend' : 'negative-trend';

							aryOutput.push(aryThis);

							if (aryLast == null) {
								aryLast = aryThis;
								continue;
							} // if

							if (bHasCompany && aryLast.has_company)
								aryThis.company_trend = aryThis.company <= aryLast.company ? 'positive-trend' : 'negative-trend';

							if (bHasIndustry && aryLast.has_industry)
								aryThis.industry_trend = aryThis.industry <= aryLast.industry ? 'positive-trend' : 'negative-trend';
						} // for

						for (var j = aryOutput.length - 1; j >= 0; j--) {
							var oCurrent = aryOutput[j];

							%><tr><td class=narrow-as-possible><%- oCurrent.caption %></td>
							<td class=narrow-as-possible><%- oCurrent.company %><div class="trend-container">
								<span class="<%- oCurrent.company_trend %>"><%- oCurrent.company_trend ? '[self]' : '' %></span>
								<span class="<%- oCurrent.company_to_industry_trend %>"><%- oCurrent.company_to_industry_trend ? '[industry]' : '' %></span>
							</div></td>
							<td class="narrow-as-possible <%- oCurrent.industry_trend %>"><%- oCurrent.industry %></td>
							<td></td>
						</tr><%
						} // for

						sGroup = 'Number of DBT';

						%><tr>
							<th colspan=3 class=narrow-as-possible><%- sGroup %></th>
							<td></td>
						</tr><%

						var aryIntervals = {};

						if (aryCompany[sGroup])
							for (var j in aryCompany[sGroup])
								aryIntervals[j] = 0;

						if (aryIndustry[sGroup])
							for (var j in aryIndustry[sGroup])
								aryIntervals[j] = 0;

						var arySortedIntervals = [];

						for (var j in aryIntervals)
							arySortedIntervals.push(j);

						arySortedIntervals.sort();

						for (var j = 0; j < arySortedIntervals.length; j++) {
							var sKey = arySortedIntervals[j];
							%><tr><td class=narrow-as-possible><%- sKey.substr(1, sKey.length - 2) %></th>
							<td class=narrow-as-possible><%- aryCompany[sGroup]  ? (aryCompany[sGroup][sKey] || '') : '' %></td>
							<td class=narrow-as-possible><%- aryIndustry[sGroup] ? (aryIndustry[sGroup][sKey] || '') : '' %></td>
							<td></td>
						</tr><%
						} // for
					%></tbody></table>
					<tfoot><tr><th class=narrow-as-possible>Supplier Payment Pattern</th>
						<td colspan=2 class=narrow-as-possible><%- sSupplierPaymentPattern || '' %></td>
						<td></td>
					</tr></tfoot><%
				%></table><%
			}
			else if (oMetaData.ID == 'DL99') {
				aryData.sort(function(a, b) {
					var oA = Date.parse(a['ticks-Accounts Date']);
					var oB = Date.parse(b['ticks-Accounts Date']);
					return oA - oB;
				});

				var oChartData = [];
				var oSeriesKeys = {};
				var nSeriesKeyCount = 1;

				var sDivChartID = 'chart' + oMetaData.ID;
				var sParentDivChartID = 'parent_' + sDivChartID;

				%><table class="<%- sTableWidthClass %> table-striped blue-header table-fixed">
					<thead><tr><th><%- i %></th></tr></thead>
					<tbody><tr><td id="<%- sParentDivChartID %>"></td></tr></tbody>
				</table><%

				for (var j = 0; j < aryData.length; j++) {
					var obj = aryData[j];
	
					var oDataItem = { tick: null, data: {} };

					for (var k in obj) {
						if (k.indexOf('ticks-') == 0)
							oDataItem.tick = obj[k];
						else if (k.indexOf('chart-') == 0) {
							var sKey = k.substr(6);
							oDataItem.data[sKey] = EzBob.poundToInt(obj[k]);
							if (!oSeriesKeys[sKey]) {
								oSeriesKeys[sKey] = nSeriesKeyCount;
								nSeriesKeyCount++;
							} // if
						} // if
					} // for

					oChartData.push(oDataItem);
				} // for each group output
	
				$('body').append(
					$('<div></div>').attr('id', sDivChartID).css({ width: '1200px', height: '600px', display: 'block' })
				);

				onAfterRender.push(function() {
					var aryLabels = [];
					for (var sSeriesName in oSeriesKeys)
						aryLabels[oSeriesKeys[sSeriesName] - 1] = { label: sSeriesName };

					var aryTicks = [];
					var arySeries = [];

					for (var i = 0; i < oChartData.length; i++) {
						var oItem = oChartData[i];

						aryTicks[i] = oItem.tick;

						for (var sSeriesName in oSeriesKeys) {
							var nSeriesIdx = oSeriesKeys[sSeriesName] - 1;

							if (!arySeries[nSeriesIdx])
								arySeries[nSeriesIdx] = [];

							if (!isNaN(oItem.data[sSeriesName]))
								arySeries[nSeriesIdx][i] = oItem.data[sSeriesName];
						} // for
					} // for each chart data item

					$.jqplot(sDivChartID, arySeries, {
						seriesDefaults:{
							renderer:$.jqplot.BarRenderer,
							rendererOptions: {fillToZero: true}
						},
						series: aryLabels,
						legend: {
							show: true,
							location: 'n',
							renderer: $.jqplot.EnhancedLegendRenderer,
							rendererOptions: {
								numberRows: 1,
								numberColumns: null
							},
							placement: 'outsideGrid'
						},
						axes: {
							xaxis: {
								show: true,
								Label: 'Date',
								labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
								renderer: $.jqplot.CategoryAxisRenderer,
								tickRenderer: $.jqplot.CanvasAxisTickRenderer,
								ticks: aryTicks
							},
							yaxis: {
								show: true,
								pad: 1.05,
								tickOptions: { formatString: "£ %'d" }
							}
						}
					}); // jqplot
	
					$('#' + sDivChartID).appendTo('#' + sParentDivChartID);
				});
			}
			else if (oMetaData.DisplayDirection == 'horizontal') {
				%><table class="<%- sTableWidthClass %> table-striped blue-header table-bordered table-fixed"><%
				var nColumnCount = 0;
			
				var obj = aryData[0];

				for (var fld in obj)
					nColumnCount++;

				%><thead><tr><th colspan=<%= nColumnCount %>><%= i %></th></tr><tr><%
				for (var fld in obj) {
					%><th><%- fld %></th><%
				}
				%></tr></thead><tbody><%
				for (var j = 0; j < aryData.length; j++) {
					var obj = aryData[j];

					print('<tr>');

					for (var fld in obj) {
						%><td><% DrawFormatted(obj[fld], fld, oMetaData.ID) %></td><%
					} // for each field

					print('</tr>');
				} // for each group output
				%></tbody></table><%
			}
			else {
				%><table class="<%- sTableWidthClass %> table-striped blue-header">
				<thead><tr><th colspan=2><%= i %></th></tr></thead>
				<tbody><%
				for (var j = 0; j < aryData.length; j++) {
					var obj = aryData[j];

					for (var fld in obj) {
						%><tr><td class=narrow-as-possible><%- fld %></td><td><% DrawFormatted(obj[fld], fld, oMetaData.ID) %></td></tr><%
					} // for each field
				} // for each group output
				%></tbody></table><%
			}
		} // if
	} // for
})(companyScoreData, onAfterRender);
%>
</script>
