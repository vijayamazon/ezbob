@using EzBob.Web.Infrastructure
@using EzBob.Web.Infrastructure.Html
@using EZBob.DatabaseLib.Model.Database
@model EzBob.Web.Models.CreatePasswordModel

@{
	UiCustomerOrigin.Set(ViewBag);
	ViewBag.Title = " Create a password for your " + ViewBag.CustomerOrigin.Name + " Account";
	var origin = ViewBag.CustomerOrigin.GetOrigin();
}

@section head
{
	<meta name="description" content="@string.Format("Create a password for your " + ViewBag.CustomerOrigin.Name + " online business loan account.")" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
}

@section css{
	@BundleHelper.RenderLoginCss()
}

<div class="row-fluid">
	<div class="inner">
		<div class="wizard-wrap">
			<div class="wizard-inner-wrap">
				<div class="createPasswordTemplate"></div>
			</div>
		</div>
	</div>
</div>

<script id="customer-create-password-template" type="text/template">
	@using (Html.BeginForm("CustomerCreatePassword", "Account", new { Area = "" }, FormMethod.Post, new { @class = "simple-create-password" })) {
		<input type="hidden" name="RawToken" id="RawToken" value="@Model.Token.ToString("N")" />
		<input type="hidden" name="UserName" id="UserName" value="@Model.UserName" />
		<input type="hidden" name="BrokerLeadStr" id="BrokerLeadStr" value="@Model.BrokerLeadStr" />

		<section id="content">
			<div class="notifications"></div>
			<section class="pages create-password">
				<h1>Create password</h1>
				<h2>Welcome @Model.FullName!</h2>
				
				@EzForm.InputTextWizard(new EzInputBuilder("Password", "Password",
					type: "password",
					cls: "form_field",
					isRequired: true,
					statusIcon: true,
					uiEventControlID: "create-password:password1",
					tabIndex: 1), origin: origin)
				
				@EzForm.InputTextWizard(new EzInputBuilder("signupPass2", "Confirm password",
					type: "password",
					cls: "form_field",
					isRequired: true,
					statusIcon: true,
					uiEventControlID: "create-password:password2",
					tabIndex: 2), origin: origin)	
				
				@{
					 var specialAttributes = new Dictionary<string, string>();
					 specialAttributes["data-val"] = "true";
					 specialAttributes["data-val-required"] = "The Remember me? field is required.";
					 EzInputBuilder checkbox1 = new EzInputBuilder("RememberMe", "Remember me",
								value: @Model.RememberMe.ToString().ToLowerInvariant(),
								type: "checkbox",
								cls: "",
								isRequired: false,
								statusIcon: false,
								specialAttributes: specialAttributes,
								labelClass: "soft-label",
								uiEventControlID: "login:remember_me");

					 List<EzInputBuilder> checkboxesList = new List<EzInputBuilder> {
								checkbox1
								 };

					 var checkboxes = new EzClickInputModel(
						 name: "RememberMe",
						 caption: "",
						 errorImgClass: "",
						 inputWrapperClass: "",
						 containerClass: "",
						 isRequired: false,
						 statusIcon: false,
						 inputButtons: checkboxesList);
				}

				@EzForm.ClickableInputWizard(checkboxes, origin: origin)					
				
				@EzForm.WizardButton(
					new EzButtonModel("createPasswordSubmit", "Login",
						"button btn-green create-password-btn disabled ev-btn-org",
						"create-password:submit",
						buttonType: EzButtonType.submit),
					origin: origin)
				
			</section>
		</section>
		<div class="clear"></div>
	}
</script>

@section Js{
	@BundleHelper.RenderCreatePasswordJs()

	<script type="text/javascript">
		$(function() {
			var loginPage = new EzBob.CustomerCreatePasswordView({ el: $('.createPasswordTemplate') });
			loginPage.render();

			var notifications = new EzBob.NotificationsView({ el: $('.notifications') });
		});
	</script>
}
