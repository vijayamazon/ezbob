@using EzBob.Web.Infrastructure
@using EzBob.Web.Infrastructure.Html
@using EZBob.DatabaseLib.Model.Database
@model string

@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	ViewBag.Title = "PayPoint: Fill Debit Card Details";
	string baseUrl = string.Empty;
	var origin = ViewBag.CustomerOrigin.GetOrigin();
}

@section head{
	@switch (Model) {
	case "Prod":
		baseUrl = "https://app." + origin + ".com";
		break;
	case "Qa":
		baseUrl = "https://test." + origin + ".com";
		break;
	case "Dev":
		baseUrl = "https://test." + origin +".com:44300";
		break;
	default:
		baseUrl = "https://app." + origin + ".com";
		break;
	}

	<base href="@baseUrl" />

	<script type="text/javascript">
		var EzBob = EzBob || {};
		EzBob.Config = EzBob.Config || {};
	</script>
}

@section css {
	@BundleHelper.RenderPaypointTemplateCss()
}

<div class="row-fluid">
	<div class="dashboard-header wizard-steps-wrapper" style="display: none;">
		<div class="side-strip"></div>
		<div class="dashboard-steps wizard-steps">
			<div class="progress-time">Debit card details</div>
			<div class="steps-wrap">
				<div class="stripe"></div>
				<div class="progress-bar">
					<div class="green-line" style="width: 46%;"></div>
					<div class="grey-line"></div>
				</div>
				<ul class="application_steps">
					<li class="complete first-circle" data-step-num="0">
						<div class="progress-circle">
							<div class="inner-circle complete">
								<div class="percent">1</div>
							</div>
						</div>
						<div class="progress-line"></div>
						<div class="progress-line-complete"></div>
						<span class="step_label step_label_1">Choose Loan Term</span>
					</li>
					<li class="current center-circle" data-step-num="1">
						<div class="progress-circle current">
							<div class="inner-circle current">
								<div class="percent">2</div>
							</div>
						</div>
						<div class="progress-line"></div>
						<div class="progress-line-current"></div>
						<span class="step_label step_label_2">Enter Bank & Debit</span>
					</li>
					<li class="last last-circle" data-step-num="2">
						<div class="progress-circle ">
							<div class="inner-circle">
								<div class="percent">3</div>
							</div>
						</div>
						<div class="progress-line"></div>
						<span class="step_label step_label_3">Get Cash</span>
					</li>
				</ul>
			</div>
		</div>
	</div>
	<div class="inner">
		<div class="row-fluid">
			<div class="pages">
				<div class="wizard-wrap">
					<div class="wizard-inner-wrap">
						<div class="PayPointHeader">
							<h2>Enter your debit card details</h2>
							<h3>For automatic loan repayment</h3>
						</div>
						<div class="error">
							${error_table}
						</div>
						<div class="bank-account">
							<form class="paypont-form" action="https://www.secpay.com/java-bin/ValCard" method="POST" autocomplete="off" style="margin-top: 40px;">

								@EzForm.InputTextWizard(new EzInputBuilder("customer", "${customer_Text:=Name of Cardholder}",
								   value: "${customer}",
								   type: "text",
								   cls: "form_field",
								   isRequired: true,
								   statusIcon: true,
								   tabIndex: 1),
								   origin: origin)

								${start_card_type}
								@if (origin != CustomerOriginEnum.everline) {
									<div class="form_field_container control-group controls">
										<label class="attardi-input">
											<span>${card_type_Text:=Card Type}</span>
											<select name="card_type" class="selectheight form_field" tabindex="2">
												<option></option>
												<option value="Visa" ${card_type="Visa" }>${Visa_Text:=Visa}</option>
												<option value="Debit Master Card" ${card_type="Debit" master="" card="" }>${Debit_Master_Card_Text:=Debit Master Card}</option>
												<option value="Delta" ${card_type="Delta" }>${Delta_Text:=Visa Debit Delta or Connect}</option>
												${StartIssue}
												<option value="Maestro" ${card_type="Maestro" }>${Maestro_Text:=Maestro}</option>
												<option value="Solo" ${card_type="Solo" }>${Solo_Text:=Solo}</option>
												${EndIssue}
												${card_types}
											</select>
											<img id="card_typeImage" class="field_status required" />
										</label>
									</div>
								} else {
									<div class="form_field_container">
										<label class="input-title" for="card_type">${card_type_Text:=Card Type}</label>
										<div class="input-wrapper attardi-input">
											<div class="select ">
												<select name="card_type" class="selectheight form_field" tabindex="2">
													<option></option>
													<option value="Visa" ${card_type="Visa" }>${Visa_Text:=Visa}</option>
													<option value="Debit Master Card" ${card_type="Debit" master="" card="" }>${Debit_Master_Card_Text:=Debit Master Card}</option>
													<option value="Delta" ${card_type="Delta" }>${Delta_Text:=Visa Debit Delta or Connect}</option>
													${StartIssue}
													<option value="Maestro" ${card_type="Maestro" }>${Maestro_Text:=Maestro}</option>
													<option value="Solo" ${card_type="Solo" }>${Solo_Text:=Solo}</option>
													${EndIssue}
													${card_types}
												</select>
												<div class="error-wrap"></div>
											</div>
										</div>
									</div>
								}
								${end_card_type}

								@EzForm.InputTextWizard(new EzInputBuilder("card_no", "${card_no_Text:=Card Number}",
									value: "${card_no}",
									type: "text",
									cls: "form_field",
									isRequired: true,
									statusIcon: true,
									tabIndex: 3,
									maxLength: 16),
									origin: origin)

								@EzForm.InputTextWizard(new EzInputBuilder("expiry", "${expiry_Text:=Expiry Date (MM/YY)}",
								   value: "${expiry}",
								   type: "text",
								   cls: "form_field",
								   isRequired: true,
								   statusIcon: true,
								   tabIndex: 4,
								   maxLength: 5),
								   origin: origin)

								@EzForm.InputTextWizard(new EzInputBuilder("cv2", "${cv2_Text:=CV2 (security code)}",
								   value: "${cv2}",
								   type: "password",
								   cls: "form_field",
								   isRequired: true,
								   statusIcon: true,
								   tabIndex: 5,
								   maxLength: 4),
								   origin: origin)

								<div id="amount-group" class="control-group form_field_container" style="display: none">
									<label class="input-title control-label" for="amount">Amount</label>
									<div class="controls input-wrapper attardi-input">
										<label class="control-label" id="amount">&pound;${amount}</label>
									</div>
								</div>

								<div class="form_buttons_container form_field_container">
									@if (origin == CustomerOriginEnum.everline) {
										<label class="input-title">&nbsp;</label>
									}
									<div class="attardi-button input-wrapper">
										<input type="submit"
											   name="accept"
											   value="Confirm"
											   id="paypoint-submit"
											   class="submit pull-right button btn-green disabled confirm ev-btn-org" tabindex="6" />
										<input action="action"
											   type="button"
											   value="Back"
											   class="button btn-grey pull-right back clean-btn"
											   onclick="window.history.back(); window.close(); return false;" />
									</div>
								</div>

								@Hiddens()

</form>
						</div>
						<div id="buttons" align="center" class="span7">
							${other_pay}<br>
						</div>
						<div class="row">
							<div class="span7" align="center">
								${3ds}
								<br>
							</div>
						</div>
					

						<div class="row-fluid">
							<div class="span12">
								<hr>
								${paypal:=<table id="paypal_table">
									<tr>
										<td id="paypal_text">
											<p>Pay with PayPal</p>
										</td>
										<td id="paypal_link">
											<a href="javascript:PPHelp()">What is PayPal?</a>
										</td>
										<td id="paypal_button">
											<input type="image" src="https://www.paypal.com/en_GB/i/btn/btn_xpressCheckout_nosub.gif" value="PayByPayPal" name="paypal_transaction">
										</td>
									</tr>
								</table>
								<hr id="paypal_line">
								}
								<div id="secure">
									<table border="0" width="100%" class="secure_table">
										<tbody>
											<tr>
												<td style="text-align: center; width: 150px;">
													<a href="https://www.paypoint.net/" target="_blank" title="PayPoint.net">
														<img src="https://www.secpay.com/users/small_logo.gif" width="125" height="22" alt="PayPoint.net logo" title="PayPoint.net logo" style="border: 0;" />
													</a>
												</td>
												<td valign="top" rowspan="2">
													${wait_Text:=You have now entered a secure transaction environment. Your personal
													information will be encrypted before transmission. Please check that the address
													bar of your browser is visible and that the address begins with <b>https://</b>.
													For your re-assurance, this page is loaded from <b>https://www.secpay.com</b>. PayPoint.net
													incorporates the SECPay service.}
												</td>
											</tr>
											<tr>
												<td style="text-align: center;">
													Secure Payment<br>
													<img src="https://www.secpay.com/users/lock.png" alt="The secure padlock" width="16" height="16">
												</td>
											</tr>
										</tbody>
									</table>
								</div>
							</div>
				</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Js{
	<script type="text/javascript">
		function PPHelp() {
			helpwindow = window.open('https://www.paypal.com/uk/cgi-bin/webscr?cmd=xpt/Marketing/popup/OLCWhatIsPayPal-outside', 'olcwhatispaypal', 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=yes, resizable=yes, width=400, height=350');
		}

		$(document).ready(function () {
			var oFieldStatusIcons = $('img.field_status');
			oFieldStatusIcons.filter('.required').field_status({ required: true });
			oFieldStatusIcons.not('.required').field_status({ required: false });
		});

		EzBob.Config.HeartBeatEnabled = false;
		EzBob.Config.SessionTimeout = -1;

		function submitPaypointForm() {
			$('form').data("validator").cancelSubmit = true;
			$('form').submit();
		}

		function getCallbackValue(key) {
			var uri = new Uri(decodeURIComponent(new Uri(document.location).getQueryParamValue('callback')));
			return uri.getQueryParamValue(key);
		}

		function getOptionsValue() {
			var uri = new Uri(document.location);
			return decodeURIComponent(uri.getQueryParamValue('options'));
		}

		var uri = new Uri(decodeURIComponent(new Uri(document.location).getQueryParamValue('options')));

		function inputChanged(validator) {
			var isValid = EzBob.Validation.checkForm(validator);
			return $('.submit').toggleClass('disabled', !isValid);
		}

		$(function () {
			$('.header-info').show();
			$('.header-info-text').text("MY ACCOUNT");
			$('form').attr('action', document.location.href);

			var isPayEarly = decodeURIComponent(getCallbackValue('payEarly') || "") == "True";
			var cardMinExpiryDate;

			if (isPayEarly) {
				cardMinExpiryDate = moment();
				$('.PayPointHeader h3').hide();
			}
			else {
				var param = decodeURIComponent(getCallbackValue('cardMinExpiryDate') || "");
				cardMinExpiryDate = moment(param || moment().add("months", 3), "DD/MM/YYYY");
			}

			var origin = decodeURIComponent(getCallbackValue('origin') || "ezbob");
			EzBob.Config.Origin = origin;

			var hideSteps = decodeURIComponent(getCallbackValue('hideSteps') || "");
			if (hideSteps != 'True') {
				if (origin == 'everline') {
					$('.step_label_1').text('Loan term');
					$('.step_label_2').text('Bank details');
					$('.step_label_3').text('Receive funds');
				}
				$(".wizard-steps-wrapper").show();
			} else {
				$('#amount-group').show();
			}
			var isTest = getOptionsValue().indexOf('test_status=true') != -1;

			//set user email in top bar
			$('#logoff-li').show().tooltip({ placement: 'bottom', title: decodeURIComponent(getCallbackValue('username') || "") }).tooltip("enable").tooltip('fixTitle');
			$('#user-menu .login_btn, .signup_btn').hide();

			if (!isTest) {
				$("select option[value='Visa']").remove();
			}
			$("#expiry").mask("99/99");
			$("#card_no").mask("9999999999999999");

			$('li[rel]').popover({ placement: 'left' });

			$('input[type="submit"]').click(function (e) {
				if ($('#paypoint-submit').hasClass('disabled')) {
					return false;
				}
				$('#paypoint-submit').attr('disabled', 'disabled').addClass('disabled');

				if (EzBob.Validation.checkForm(validator)) {
					submitPaypointForm();
				}
				else {
					validator.form();
				}

				setTimeout(function () {
					$('#paypoint-submit').prop('disabled', false).removeClass('disabled');
				}, 10000);

				return false;
			});
			
			var validator = $('.paypont-form').validate({
				rules: {
					customer: { required: true, minlength: 2 },
					card_no: { required: true, digits: true, maxlength: 16, minlength: 16 },
					cv2: { required: true, minlength: 3 },
					expiry: { required: true, validateCardMinExpiryDate: cardMinExpiryDate, regex: "^(0[1-9]|1[012])/\([0-9]{2})" },
					card_type: { required: true }
				},
				messages: {
					card_no: { digits: "Please enter a valid credit card number" }
				},
				errorPlacement: EzBob.Validation.errorPlacement,
				unhighlight: EzBob.Validation.unhighlightFS,
				highlight: EzBob.Validation.highlightFS
			});

			$('input[type="text"]').change(function (e) {
				return inputChanged(validator);
			});
			$('input[type="text"]').keyup(function (e) {
				return inputChanged(validator);
			});
			$('input[type="password"]').change(function (e) {
				return inputChanged(validator);
			});
			$('input[type="password"]').keyup(function (e) {
				return inputChanged(validator);
			});
			$('select').change(function (e) {
				return inputChanged(validator);
			});
			$('select').keyup(function (e) {
				return inputChanged(validator);
			});
			$('select').click(function (e) {
				return inputChanged(validator);
			});

			$.validator.addMethod(
                "validateCardMinExpiryDate", function (value, element, date) {
                	date = $.browser.msie ? date._d : date;
                	var expirydate = moment(value, "MM/YY");
                	var res = expirydate >= date;
                	return res;
                }, "Debit card expires too soon. Please use another card."
            );
		});
	</script>
}


@helper Hiddens() {
	<text><input type="hidden" name="merchant" value="${merchant}">
		<input type="hidden" name="trans_id" value="${trans_id}">
		<input type="hidden" name="callback" value="${callback}">
		<input type="hidden" name="backcallback" value="${backcallback}">
		<input type="hidden" name="order" value="${order}">
		<input type="hidden" name="shipping" value="${shipping}">
		<input type="hidden" name="billing" value="${billing}">
		<input type="hidden" name="template" value="${template}">
		<input type="hidden" name="err_template" value="${err_template}">
		<input type="hidden" name="options" value="${options}">
		<input type="hidden" class="amount" name="amount" value="${amount}">
		<input type="hidden" name="currency" value="${currency}">
		<input type="hidden" name="cb_list" value="${cb_list}">
		<input type="hidden" name="cb_flds" value="${cb_flds}">
		<input type="hidden" name="map_flds" value="${map_flds}">
		<input type="hidden" name="md_flds" value="${md_flds}">
		<input type="hidden" name="background" value="${background}">
		<input type="hidden" name="bgcolor" value="${bgcolor}">
		<input type="hidden" name="font_face" value="${font_face}">
		<input type="hidden" name="font_color" value="${font_color}">
		<input type="hidden" name="font_size" value="${font_size}">
		<input type="hidden" name="branding" value="${branding}">
		<input type="hidden" name="mail_message" value="${mail_message}">
		<input type="hidden" name="cb_message" value="${cb_message}">
		<input type="hidden" name="cb_fail_message" value="${cb_fail_message}">
		<input type="hidden" name="mandatory_Text" value="${mandatory_Text}">
		<input type="hidden" name="customer_Text" value="${customer_Text}">
		<input type="hidden" name="card_type_Text" value="${card_type_Text}">
		<input type="hidden" name="card_no_Text" value="${card_no_Text}">
		<input type="hidden" name="expiry_Text" value="${expiry_Text}">
		<input type="hidden" name="issue_Text" value="${issue_Text}">
		<input type="hidden" name="start_date_Text" value="${start_date_Text}">
		<input type="hidden" name="authorise_Text" value="${authorise_Text}">
		<input type="hidden" name="wait_Text" value="${wait_Text}">
		<input type="hidden" name="error_table_Text" value="${error_table_Text}">
		<input type="hidden" name="Master_Card_Text" value="${Master_Card_Text}">
		<input type="hidden" name="Delta_Text" value="${Delta_Text}">
		<input type="hidden" name="Visa_Text" value="${Visa_Text}">
		<input type="hidden" name="JCB_Text" value="${JCB_Text}">
		<input type="hidden" name="Solo_Text" value="${Solo_Text}">
		<input type="hidden" name="Switch_Text" value="${Switch_Text}">
		<input type="hidden" name="Maestro_Text" value="${Maestro_Text}">
		<input type="hidden" name="American_Express_Text" value="${American_Express_Text}">
		<input type="hidden" name="Diners_Club_Text" value="${Diners_Club_Text}">
		<input type="hidden" name="cv2_Text" value="${cv2_Text}">
		<input type="hidden" name="start_date_Error" value="${start_date_Error}">
		<input type="hidden" name="card_no_Error" value="${card_no_Error}">
		<input type="hidden" name="card_type_Error" value="${card_type_Error}">
		<input type="hidden" name="customer_name_Error" value="${customer_name_Error}">
		<input type="hidden" name="expiry_date_Error" value="${expiry_date_Error}">
		<input type="hidden" name="issue_Error" value="${issue_Error}">
		<input type="hidden" name="email_Error" value="${email_Error}">
		<input type="hidden" name="cv2_Error" value="${cv2_Error}">
		<input type="hidden" name="save_other_pay" value="${save_other_pay}">
		<input type="hidden" name="usercallback" value="${usercallback}">
		<input type="hidden" name="token" value="${token}">
		<input type="hidden" name="error_table">
		<input type="hidden" name="error_list">
	</text>
}

@section customJs{
	@BundleHelper.RenderPaypointTemplateJs()
}
