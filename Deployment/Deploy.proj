<Project ToolsVersion="4.0" DefaultTargets="StartBuild" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<Target Name="Build">
		<Message Text="Build started" />
		<Message Text="$(Src)" />
        <MSBuild Projects="@(ProjectToBuild)" Properties="Configuration=$(BuildConfiguration)" Targets="Clean"/>
		<MSBuild Projects="@(ProjectToBuild)" Properties="Configuration=$(BuildConfiguration)" Targets="Build"/>
    </Target>
	
	<Target Name="LogOffSessions">
		<Exec Command="logoff 1" IgnoreExitCode="true"/>
		<Exec Command="logoff 2" IgnoreExitCode="true"/>
		<Exec Command="logoff 3" IgnoreExitCode="true"/>
		<Exec Command="logoff 4" IgnoreExitCode="true"/>
		<Exec Command="logoff 5" IgnoreExitCode="true"/>
		<Exec Command="logoff 6" IgnoreExitCode="true"/>
		<Exec Command="logoff 7" IgnoreExitCode="true"/>
		<Exec Command="logoff 8" IgnoreExitCode="true"/>
		<Exec Command="logoff 9" IgnoreExitCode="true"/>
		<Exec Command="logoff 10" IgnoreExitCode="true"/>
	</Target>

	<Target Name="BinaryCreate">
		<RemoveDir Directories="$(BuildBin)"/>
		<!-- Exec Command="unlocker.exe $(BuildBin) /D /S" WorkingDirectory="C:\Program Files\Unlocker\" Condition="Exists('C:\Program Files\Unlocker\Unlocker.exe')" IgnoreExitCode="true"/-->
		
		<AppCopy CopyFrom="$(Src)\App\Clients\Administrator" CopyTo="$(BuildBin)\%(Edition.Identity)\Clients\Administrator"/>
		<AppCopy CopyFrom="$(Src)\App\web" CopyTo="$(BuildBin)\%(Edition.Identity)\web\"/> 
		
		<WebCopy CopyFrom="$(Src)\App\pluginweb\EzBob.Web\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\EzBob.Web\"/>
		
		<AppCopy CopyFrom="$(Src)\Tools\LogViewer\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\LogViewer\"/>
		<AppCopy CopyFrom="$(Src)\Tools\EnvironmentConfigValidation\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\EnvironmentConfigValidation\"/>

		<Copy SourceFiles="$(Src)\Lib\Scorto.Core\DBSQLServer.dll" DestinationFolder="$(BuildBin)\%(Edition.Identity)\libs\"/>
		
		<MultiCopy CopyFrom="$(Src)\sql\current\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\current\" />
		<MultiCopy CopyFrom="$(Src)\sql\SPs\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\SPs\" />
		<MultiCopy CopyFrom="$(Src)\sql\Views\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\Views\" />
		<MultiCopy CopyFrom="$(Src)\sql\Views_2\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\Views_2\" />
		<MultiCopy CopyFrom="$(Src)\sql\Triggers\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\Triggers\" />
		<MultiCopy CopyFrom="$(Src)\sql\Functions\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\Functions\" />
		<MultiCopy CopyFrom="$(Src)\sql\Functions_2\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\Functions_2\" />
		<MultiCopy CopyFrom="$(Src)\sql\Bash\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\Bash\" />
		
		<MultiCopy CopyFrom="$(Src)\Backend\StrategiesActivator\bin\debug\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ServicesFolder)\StrategiesActivator\" />
		<MultiCopy CopyFrom="$(Src)\App\EzService\EzServiceHost\bin\Debug\" CopyTo="$(BuildBin)\%(Edition.Identity)\EzServiceHost\" />
		
		<ItemGroup><SqlRelatedFiles Include="$(Src)\sql\*.*"/></ItemGroup>
		<Copy SourceFiles="@(SqlRelatedFiles)" DestinationFolder="$(BuildBin)\%(Edition.Identity)\$(Database)\sql\" SkipUnchangedFiles="true" />

		<MultiCopy CopyFrom="$(Src)\App\ezmanage\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\ezmanage\" />
		
		<Copy SourceFiles="$(Src)\Build\sc-build\EnvironmentTemplate.xml" DestinationFolder="$(BuildBin)\%(Edition.Identity)\"/>
		<Copy SourceFiles="$(Src)\Integration\ChannelGrabberConfig\channelgrabber.json" DestinationFolder="$(BuildBin)\%(Edition.Identity)\"/>
				
		<MultiCopy CopyFrom="$(Src)\Integration\Amazon\AmazonStandaloneApp\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\Amazon\"/>
		<MultiCopy CopyFrom="$(Src)\Integration\eBay\TeraPeakStandaloneApp\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\eBay\"/>
		<MultiCopy CopyFrom="$(Src)\Integration\Payment\ManualPacnetApp\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\Pacnet\"/>
		<MultiCopy CopyFrom="$(Src)\Integration\ExperianStandAlone\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\Experian\"/>
		<MultiCopy CopyFrom="$(Src)\App\EzAutoResponder\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\EzAutoreponder\"/>
		<MultiCopy CopyFrom="$(Src)\Backend\StrategiesTestTool\bin\$(BuildConfiguration)\" CopyTo="$(BuildBin)\%(Edition.Identity)\$(ToolsFolder)\ScoringModelTestTool\"/>
		
		<WriteLinesToFile ContinueOnError="true" File="$(BuildBin)\%(Edition.Identity)\label=$(CCNetLabel).txt" Lines="Build label is $(CCNetLabel)" Overwrite="true"/>
	</Target>
	
	<Target Name="Deploy">
		<Message Text="Deleting old deploy folder..." Importance="high"/>
		
		<RemoveDir Directories="$(ServerBaseFolder)/Clients" />
		<RemoveDir Directories="$(ServerBaseFolder)/Database" />
		<RemoveDir Directories="$(ServerBaseFolder)/Items" />
		<RemoveDir Directories="$(ServerBaseFolder)/libs" />
		<RemoveDir Directories="$(ServerBaseFolder)/service" />
		<RemoveDir Directories="$(ServerBaseFolder)/tools" />
		<RemoveDir Directories="$(ServerBaseFolder)/web" />

		<!--Exec Command="rd $(ServerBaseFolder) /s/q"/-->
		<!-- Exec Command="unlocker.exe $(ServerBaseFolder) /D /S" WorkingDirectory="C:\Program Files\Unlocker\" Condition="Exists('C:\Program Files\Unlocker\Unlocker.exe')" IgnoreExitCode="true"/-->
		<Message Text="Copy files to deploy folder..." Importance="high"/>
		<Exec Command="xcopy %22$(BuildBin)\$(UsedEdition)%22 $(ServerBaseFolder) /E /C /I /Q /R /Y"/>
		<Copy SourceFiles="$(BuildBin)\$(UsedEdition)\channelgrabber.json" DestinationFolder="C:\Program Files\EZBOB\"/>
		<Copy SourceFiles="$(BuildBin)\$(UsedEdition)\channelgrabber.json" DestinationFolder="C:\Program Files (x86)\EZBOB\"/>
	</Target>

	<Target Name="DeleteOldBinary">
		<Message Text="Deleting old binary folder..." Importance="high"/>
		<RemoveDir Directories="$(BuildBin)" />		
	</Target>

	<Target Name="SCStop">
		<Message Text="ScortoStopEnvironment" Importance="high"/>
		<Message Text="Stoping service..."/>
		<Exec Command="net stop $(ServiceName)" ContinueOnError="true"/>
	</Target>

	<Target Name="WEBStop">
		<Message Text="Stoping sites..."/>
		<Exec Command="iisreset /stop" ContinueOnError="true"/>
		<Message Text="Stoping share server..."/>
		<Exec Command="net stop server /y" ContinueOnError="true"/>
	</Target>
	
	<Target Name="SCStart">
		<Message Text="ScortoStartEnvironment" Importance="high"/>
		<Message Text="Starting service..."/>
		<Exec Command="net start $(ServiceName)" ContinueOnError="true"/>
	</Target>

	<Target Name="WEBStart">
		<Message Text="Starting sites..."/>
		<Exec Command="iisreset /start" ContinueOnError="true"/>
		<Message Text="Starting share server..."/>
		<Exec Command="net start server /y" ContinueOnError="true"/>
	</Target>

	<Target Name="RestartMssql">
		<Message Text="Restarting mssql..."/>
		<Exec Command="net stop mssqlserver" ContinueOnError="true"/>
		<Exec Command="net start mssqlserver" ContinueOnError="true"/>
	</Target>

	<Target Name="ReCreateDB">
		<Exec Command="DropCreateLoad.bat $(DatabaseString)" WorkingDirectory="$(ServerBaseFolder)\$(Database)\$(DatabaseDeployFolder)" />
		<Message Text="Deleting old app states folder..." Importance="high"/>
		<Exec Command="rd $(TempStatesPath) /s/q" ContinueOnError="true"/>
	</Target>

	<Target Name="IncrementalUpdateDB">
		<Message Text="Incremental update database..." Importance="high"/>
		<!-- <Exec Command="UpgradeDatabase.exe" WorkingDirectory="$(ServerBaseFolder)\$(ToolsFolder)\IncrementalUpdate\" /> -->
		<Exec Command="run.cmd" WorkingDirectory="$(ServerBaseFolder)\$(Database)\sql\" />
	</Target>
	
	<Target Name="ConfigureClients">
				<!-- Maven AppConfig setting -->
		<XmlUpdate 
		  XPath="/configuration/applicationSettings/SpecificSettings/ConnectionProfiles/add/@Address"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Maven\Maven.exe.config"
		  Value="$(WebBaseUrl)/MavenServer/Service.asmx"/>
		<XmlUpdate
		  XPath="/configuration/applicationSettings/StrategyBuilder.Properties.Settings/setting[@name='AppCulture']/value"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Maven\Maven.exe.config"
		  Value="$(Culture)"/>

		<!-- Master AppConfig setting -->
		<XmlUpdate
		  XPath="/configuration/applicationSettings/SpecificSettings/ConnectionProfiles/add/@Address"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Master\Master.exe.config"
		  Value="$(WebBaseUrl)/MasterServer/Service.asmx"/>
		<XmlUpdate
		  XPath="/configuration/applicationSettings/Patron.Properties.Settings/setting[@name='AppCulture']/value"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Master\Master.exe.config"
		  Value="$(Culture)"/>

		<!-- Admin AppConfig setting -->
		<XmlUpdate
		  XPath="/configuration/applicationSettings/SpecificSettings/ConnectionProfiles/add/@Address"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Administrator\Admin.exe.config"
		  Value="$(WebBaseUrl)/AdminServer/Service.asmx"/>
		<XmlUpdate
		  XPath="/configuration/applicationSettings/Admin.Properties.Settings/setting[@name='AppCulture']/value"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Administrator\Admin.exe.config"
		  Value="$(Culture)"/>
		  
		  <!-- EzManage AppConfig setting -->
		<XmlUpdate
		  XPath="/configuration/appSettings/add/@value"
		  FilePath="$(ServerBaseFolder)\$(ToolsFolder)\ezmanage\ezmanage.exe.config"
		  Value="$(EMConnection)"/>

		<!-- Auditor AppConfig setting -->
		<XmlUpdate
		  XPath="/configuration/applicationSettings/SpecificSettings/ConnectionProfiles/add/@Address"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Auditor\Auditor.exe.config"
		  Value="$(WebBaseUrl)/AuditorServer/Service.asmx"/>
		<XmlUpdate
		  XPath="/configuration/applicationSettings/AuditorApplication.Properties.Settings/setting[@name='AppCulture']/value"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\Auditor\Auditor.exe.config"
		  Value="$(Culture)"/>
		  
		<!-- FD AppConfig setting -->
		<XmlUpdate
		  XPath="/configuration/applicationSettings/SpecificSettings/ConnectionProfiles/add/@Address"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\FormsDesigner\FormsDesigner.exe.config"
		  Value="$(WebBaseUrl)/FormsDesignerServer/Service.asmx"/>
		<XmlUpdate
		  XPath="/configuration/applicationSettings/NodeDesigner.Properties.Settings/setting[@name='AppCulture']/value"
		  FilePath="$(ServerBaseFolder)\$(ClientsFolder)\FormsDesigner\FormsDesigner.exe.config"
		  Value="$(Culture)"/>
		
	</Target>

	<Target Name="EnvironmentConfigure">
			<PropertyGroup>
				<EnvConfigXml><![CDATA[<data>
						<culture>$(Culture)</culture>
						<serverBaseFolder>$(ServerBaseFolder)</serverBaseFolder>
						<serviceDeployFolder>$(ServerBaseFolder)\$(ServicesFolder)\agent\</serviceDeployFolder>
						<clientDeployFolder>$(ServerBaseFolder)\$(ClientsFolder)\</clientDeployFolder>
						<webDeployFolder>$(ServerBaseFolder)\$(WebFolder)\</webDeployFolder>      
						<serviceName>$(serviceName)</serviceName>      
						<url>$(WebBaseUrl)</url>
						<environmentId>$(EnvId)</environmentId>
						<messageQueuePath></messageQueuePath>
						<culture>$(Culture)</culture>
						<connectionString>$(MainConnectionString)</connectionString>
						<connectionStringWarehouse>$(WarehouseConnectionString)</connectionStringWarehouse>
						<securityDefaultLibPath>$(ServerBaseFolder)\libs\</securityDefaultLibPath>
						<tempDBPath>$(TempStatesPath)</tempDBPath>
						<tempReportsPath>$(ServerBaseFolder)\TempResults\Reports</tempReportsPath>
						<HibernateId>NHibernateConfig_$(DbPrefix)</HibernateId>
						<sessionConnectionString>$(SessionConnectionString)</sessionConnectionString>
						<ToolsFolder>$(ServerBaseFolder)\$(ToolsFolder)</ToolsFolder>
						<DatabaseDir>$(ServerBaseFolder)\$(Database)</DatabaseDir>
						<MailSubject>$(MailSubject)</MailSubject>
						<MandrillConfig>$(MandrillConfig)</MandrillConfig>
				</data>]]></EnvConfigXml>
		</PropertyGroup>
		<TemplateTask TemplatePath = "$(ServerBaseFolder)\EnvironmentTemplate.xml" OutPath = "$(EnvFilePath)"
                               DataXml = "$(EnvConfigXml)" OutXpath="//environment[@id='$(EnvId)']" /> 
	</Target>
	
	<Target Name="ReleaseCopy">
			<RemoveDir Directories="c:\Release\Clients"/>
			<RemoveDir Directories="c:\Release\Database"/>
			<RemoveDir Directories="c:\Release\Items"/>
			<RemoveDir Directories="c:\Release\libs"/>
			<RemoveDir Directories="c:\Release\service"/>
			<RemoveDir Directories="c:\Release\tools"/>
			<RemoveDir Directories="c:\Release\web"/>
			<MultiCopy CopyFrom="$(PathFrom)\clients\" CopyTo="c:\Release\Clients\"/>
			<MultiCopy CopyFrom="$(PathFrom)\Database\" CopyTo="c:\Release\Database\"/>
			<MultiCopy CopyFrom="$(PathFrom)\Items\" CopyTo="c:\Release\Items\"/>			
			<MultiCopy CopyFrom="$(PathFrom)\libs\" CopyTo="c:\Release\libs\"/>
			<MultiCopy CopyFrom="$(PathFrom)\service\" CopyTo="c:\Release\service\"/>
			<MultiCopy CopyFrom="$(PathFrom)\tools\" CopyTo="c:\Release\tools\"/>
			<MultiCopy CopyFrom="$(PathFrom)\web\" CopyTo="c:\Release\web\"/>
	</Target>
	
	<Target Name="XLSUpdate">
			<XLSUpdate FilePath="c:\Release\Items\TestData.xls" EmailFrom="ezbob@ezbob.com" Port="587" 
			SMTPServer="smtp.gmail.com" Auth="1" userName="ezbob@ezbob.com" Pass="ezbob2012" Encrypt="SSL"/>
	</Target>

	<Target Name="ArchRelease">
			<Exec Command="C:\7-Zip\7z a -mx7 c:\Release\release.7z C:\release\" ContinueOnError="false"/>
	</Target>
	
	<Target Name="SetGITLabel">
			<Exec Command='C:\cygwin\bin\git tag -a -m "CCNet Build" ezbob/builds/v$(CCNetLabel)' ContinueOnError="true"/>
			<Exec Command='C:\cygwin\bin\git push origin tag ezbob/builds/v$(CCNetLabel)' ContinueOnError="true"/>
	</Target>
	
	<Target Name="BeforeBuild">
		<CallTarget Targets="AssemblyInfoUpdate" />
	</Target>
	
	<Target Name="AfterBuild">
		<CallTarget Targets="ClearCommonInfo" />
	</Target>	
	
	<PropertyGroup>
		<t><![CDATA[<data>
			<culture>$(SDKFolder)</culture>
			<environmentId>mssql2008</environmentId>
		</data>]]></t>
	</PropertyGroup>
	<Target Name="Test">
		<TemplateTask TemplatePath = "e:\src\SC\Build\CCNET\EnvironmentTemplate.xml" OutPath = "e:\out.xml"
                               DataXml = "$(t)" /> 
	</Target>
	
	<Target Name="AssemblyInfoUpdate" DependsOnTargets="GenerateClearCCNetLabel" >
		<Copy SourceFiles="$(Src)\Common\CommonAssemblyInfo.cs" DestinationFiles="$(Src)\Common\CommonAssemblyInfo.cs.bak" />
		<File  TaskAction="Replace" RegexPattern="[\d]+\.[\d]+\.[\d]+\.[\d]+" Files="$(Src)\Common\CommonAssemblyInfo.cs" Replacement="$(ClearedCCNetLabel)" />
	</Target>
	
	<Target Name="GenerateClearCCNetLabel">
		<DynamicExecute TaskAction="Run" Outputs="string result" UsingNamespaces="System.Text.RegularExpressions" Code='Match match = Regex.Match("$(CCNetLabel)", "[\\d]+\\.[\\d]+\\.[\\d]+\\.[\\d]+"); if (match.Success) result = match.Value; else result="$(CCNetLabel)";'>
				<Output TaskParameter="Output1" PropertyName="ClearedCCNetLabel"/>
			</DynamicExecute>
	</Target>
	
	
	<Target Name="ClearCommonInfo">
		<Copy SourceFiles="$(Src)\Common\CommonAssemblyInfo.cs.bak" DestinationFiles="$(Src)\Common\CommonAssemblyInfo.cs" />
		<Delete Files="$(Src)\Common\CommonAssemblyInfo.cs.bak" />
	</Target>
	
	<Target Name="UpdateWebConfig">	  
       <XmlUpdate FilePath="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\AdminServer\Web.config" Xpath="/configuration/system.web/compilation/@debug" Value="false" />
       <XmlUpdate FilePath="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\AuditorServer\Web.config" Xpath="/configuration/system.web/compilation/@debug" Value="false" />
       <XmlUpdate FilePath="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\MavenServer\Web.config" Xpath="/configuration/system.web/compilation/@debug" Value="false" />
       <XmlUpdate FilePath="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\MasterServer\Web.config" Xpath="/configuration/system.web/compilation/@debug" Value="false" />
       <XmlUpdate FilePath="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\FormsDesignerServer\Web.config" Xpath="/configuration/system.web/compilation/@debug" Value="false" />
       <XmlUpdate FilePath="$(BuildBin)\%(Edition.Identity)\$(WebFolder)\EzBob.Web\Web.config" Xpath="/configuration/system.web/compilation/@debug" Value="false" />
    </Target>

	<Target Name="TfsUpdate">
		<UpdateWIs TeamFoundationServerUrl="$(TfsUrl)" BuildId="$(CCNetLabel)" GlobalListName="Builds - $(TfsProject)" Query="SELECT [System.Id], [System.WorkItemType], [System.AssignedTo], [System.Reason], [Microsoft.VSTS.Common.Priority], [System.Title] FROM WorkItems WHERE [System.TeamProject] = '$(TfsProject)'  AND  [System.WorkItemType] = 'Defect'  AND  [System.State] = 'Resolved' ORDER BY [Microsoft.VSTS.Common.Priority], [System.Id]" ContinueOnError="true"/>
    </Target>
	
	<Target Name="CopyStableToDc">
		<Message Text="Copy release to dc..." Importance="high"/>
		<Exec Command="xcopy %22$(ServerBaseFolder)%22 \\dc\Releases\ScortoScoringSolutions\InProgress_SSS\$(CCNetLabel) /E /C /I /Q /R /Y" ContinueOnError="true"/>
	</Target>
	
	<!-- Use cmd line utility to run test for the list of assemblies --> 
	<Target Name="UnitTest">
		<RemoveDir Directories="$(NunitLogs)" />
		<ScortoNunit AsmDirectory="$(Src)" Command="$(Src)\Lib\3rdparty\NUnit\nunit-console-x86.exe /nologo " LogsDir="$(NunitLogs)" />
	</Target>

	<PropertyGroup>

		<Configuration Condition=" '$(Configuration)' == '' ">
			Debug
		</Configuration>

	</PropertyGroup>
	
	<!--
		<ItemGroup>
			<TestAssemblies Include="$(Src)\App\pluginweb\EzBob.Tests\bin\Debug\EzBob.Tests.dll"/>
			<TestAssemblies Include="$(Src)\Integration\ExperianLib\bin\debug\ExperianLib.dll"/>
		</ItemGroup>
	-->

	<Target Name="RunUnitTests" >
		<!-- <RemoveDir Directories="$(NunitLogs)" /> -->
		<Exec Command="$(Src)\lib\3rdparty\NUnit\nunit-console-x86.exe $(Src)\App\pluginweb\EzBob.Tests\bin\Debug\EzBob.Tests.dll $(Src)\Integration\ExperianLib\bin\debug\ExperianLib.dll $(Src)\Integration\MailApi\bin\debug\MailApi.dll $(Src)\Integration\TeraPeak\TeraPeakServiceLib\bin\debug\TeraPeakServiceLib.dll /xml=$(NunitLogs)/NUnitReport.xml"/>
		<!-- 
			<Exec Command="$(Src)\lib\3rdparty\NUnit\nunit-console-x86.exe $(TestAssemblies) /xml=$(NunitLogs)/NUnitReport.xml"/> 
			<NUnit ToolPath="$(Src)\lib\3rdparty\NUnit\" DisableShadowCopy="true" Assemblies="@(TestAssemblies)" Force32Bit="True" OutputXmlFile="$(NunitLogs)/NUnitReport.xml" />
		-->
	</Target>
	
	
	
	<Import Project="libs\Scorto.BuildTasks.tasks"/>
	<Import Project="libs\MSBuild.ExtensionPack.tasks"/>

	<!-- build properties-->
	<PropertyGroup>
		<BuildConfiguration>Debug</BuildConfiguration>
		<ClientsFolder>clients</ClientsFolder>
		<ServicesFolder>services</ServicesFolder>
		<WebFolder>websites</WebFolder>
		<ConfigFolder>configtemplates</ConfigFolder>
		<ToolsFolder>Tools</ToolsFolder>
		<SDKFolder>SDK</SDKFolder>
		<Database>Database</Database>
	</PropertyGroup>
	
	<ItemGroup>
		<Edition Include="Standard"><FullName>Standard edition</FullName></Edition>
	</ItemGroup>	
	
	<Target Name="ProjectToBuildConfig" >
		<ItemGroup>
			<ProjectToBuild Include="$(Src)\ezbob.sln"/>
			<ProjectToBuild Include="$(Src)\App\EzAutoResponder\EzAutoResponder.sln"/>
		</ItemGroup>
	</Target>
	
	<!-- 	rd1 stable  -->
	<Target Name="StableBuildConfig" >
		<PropertyGroup>
			<Src>c:\build\compilation\sc_stable\Sources</Src>
			<BuildBin>c:\build\compilation\sc_stable\Binaries</BuildBin>
		</PropertyGroup>
	</Target>

	<Target Name="StableBuild" DependsOnTargets="StableBuildConfig;CompilationScenario" />
	<!-- 	rd1 trunk  -->
	<Target Name="TrunkBuildConfig" >
		<PropertyGroup>
			<Src>c:\build\compilation\sc_trunk\Sources</Src>
			<BuildBin>c:\build\compilation\sc_trunk\Binaries</BuildBin>
		</PropertyGroup>
	</Target>

	<Target Name="TrunkBuild" DependsOnTargets="TrunkBuildConfig;CompilationScenario" />

	<!-- 	sss-build trunk continious -->
	<Target Name="TrunkBuildContiniousConfig" >
		<PropertyGroup>
			<Src>c:\build\Continious-trunk\Sources</Src>
			<NunitLogs>c:\build\Continious-trunk\Nunitlog</NunitLogs>
		</PropertyGroup>
	</Target>

	<Target Name="TrunkBuildContinious" DependsOnTargets="TrunkBuildContiniousConfig;ContiniousScenario" />

	<!-- 	compilation  -->
	<Target Name="CompilationScenario" DependsOnTargets="ProjectToBuildConfig;BeforeBuild;Build;AfterBuild"/>
	<Target Name="ContiniousScenario" DependsOnTargets="ProjectToBuildConfig;BeforeBuild;Build;AfterBuild"/>

</Project>