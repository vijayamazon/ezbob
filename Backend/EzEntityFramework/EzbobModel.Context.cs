//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EzEntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ezbobEntities : DbContext
    {
        public ezbobEntities()
            : base("name=ezbobEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<AllowedEmail> AllowedEmails { get; set; }
        public DbSet<AmlResult> AmlResults { get; set; }
        public DbSet<AmlResultsHighRiskRule> AmlResultsHighRiskRules { get; set; }
        public DbSet<ApprovalsWithoutAML> ApprovalsWithoutAMLs { get; set; }
        public DbSet<AutoDecisionHistory> AutoDecisionHistories { get; set; }
        public DbSet<AutoDecisionHistoryCondition> AutoDecisionHistoryConditions { get; set; }
        public DbSet<AutoDecisionType> AutoDecisionTypes { get; set; }
        public DbSet<AutoresponderLog> AutoresponderLogs { get; set; }
        public DbSet<BasicInterestRate> BasicInterestRates { get; set; }
        public DbSet<Broker> Brokers { get; set; }
        public DbSet<BrokerInstantOfferRequest> BrokerInstantOfferRequests { get; set; }
        public DbSet<BrokerInstantOfferResponse> BrokerInstantOfferResponses { get; set; }
        public DbSet<BrokerLeadAddMode> BrokerLeadAddModes { get; set; }
        public DbSet<BrokerLeadDeletedReason> BrokerLeadDeletedReasons { get; set; }
        public DbSet<BrokerLead> BrokerLeads { get; set; }
        public DbSet<BrokerLeadToken> BrokerLeadTokens { get; set; }
        public DbSet<BrokerMarketingFile> BrokerMarketingFiles { get; set; }
        public DbSet<BrokerSetupFeeMap> BrokerSetupFeeMaps { get; set; }
        public DbSet<BrokerTerm> BrokerTerms { get; set; }
        public DbSet<BrowserVersion> BrowserVersions { get; set; }
        public DbSet<Bug> Bugs { get; set; }
        public DbSet<Business> Businesses { get; set; }
        public DbSet<CaisFlag> CaisFlags { get; set; }
        public DbSet<CaisReportsHistory> CaisReportsHistories { get; set; }
        public DbSet<Campaign> Campaigns { get; set; }
        public DbSet<CampaignClient> CampaignClients { get; set; }
        public DbSet<CampaignMail> CampaignMails { get; set; }
        public DbSet<CampaignType> CampaignTypes { get; set; }
        public DbSet<CardInfo> CardInfoes { get; set; }
        public DbSet<CashRequest> CashRequests { get; set; }
        public DbSet<CciHistory> CciHistories { get; set; }
        public DbSet<Company> Companies { get; set; }
        public DbSet<CompanyEmployeeCount> CompanyEmployeeCounts { get; set; }
        public DbSet<ConfigurationVariable> ConfigurationVariables { get; set; }
        public DbSet<CreatePasswordToken> CreatePasswordTokens { get; set; }
        public DbSet<CRMAction> CRMActions { get; set; }
        public DbSet<CRMRank> CRMRanks { get; set; }
        public DbSet<CRMStatus> CRMStatuses { get; set; }
        public DbSet<CRMStatusGroup> CRMStatusGroups { get; set; }
        public DbSet<Customer> Customers { get; set; }
        public DbSet<CustomerAddress> CustomerAddresses { get; set; }
        public DbSet<CustomerAnalyticsCompany> CustomerAnalyticsCompanies { get; set; }
        public DbSet<CustomerAnalyticsDirector> CustomerAnalyticsDirectors { get; set; }
        public DbSet<CustomerAnalyticsLocalData> CustomerAnalyticsLocalDatas { get; set; }
        public DbSet<CustomerAnalyticsPersonal> CustomerAnalyticsPersonals { get; set; }
        public DbSet<CustomerBrokerHistory> CustomerBrokerHistories { get; set; }
        public DbSet<CustomerCompanyHistory> CustomerCompanyHistories { get; set; }
        public DbSet<CustomerInviteFriend> CustomerInviteFriends { get; set; }
        public DbSet<CustomerLoyaltyProgram> CustomerLoyaltyPrograms { get; set; }
        public DbSet<CustomerPhone> CustomerPhones { get; set; }
        public DbSet<CustomerPropertyStatus> CustomerPropertyStatuses { get; set; }
        public DbSet<CustomerPropertyStatusGroup> CustomerPropertyStatusGroups { get; set; }
        public DbSet<CustomerReason> CustomerReasons { get; set; }
        public DbSet<CustomerRelationFollowUp> CustomerRelationFollowUps { get; set; }
        public DbSet<CustomerRelation> CustomerRelations { get; set; }
        public DbSet<CustomerRelationState> CustomerRelationStates { get; set; }
        public DbSet<CustomerRequestedLoan> CustomerRequestedLoans { get; set; }
        public DbSet<CustomerScoringResult> CustomerScoringResults { get; set; }
        public DbSet<CustomerSession> CustomerSessions { get; set; }
        public DbSet<CustomerSourceOfRepayment> CustomerSourceOfRepayments { get; set; }
        public DbSet<CustomerStatus> CustomerStatuses { get; set; }
        public DbSet<CustomerStatusHistory> CustomerStatusHistories { get; set; }
        public DbSet<DbString> DbStrings { get; set; }
        public DbSet<DecisionHistory> DecisionHistories { get; set; }
        public DbSet<DecisionHistoryRejectReason> DecisionHistoryRejectReasons { get; set; }
        public DbSet<DefaultRateCompany> DefaultRateCompanies { get; set; }
        public DbSet<DefaultRateCustomer> DefaultRateCustomers { get; set; }
        public DbSet<Director> Directors { get; set; }
        public DbSet<DiscountPlan> DiscountPlans { get; set; }
        public DbSet<EmailConfirmationRequest> EmailConfirmationRequests { get; set; }
        public DbSet<EmailConfirmationState> EmailConfirmationStates { get; set; }
        public DbSet<EsignAgreementEventType> EsignAgreementEventTypes { get; set; }
        public DbSet<EsignAgreementStatu> EsignAgreementStatus { get; set; }
        public DbSet<EsignatureHistory> EsignatureHistories { get; set; }
        public DbSet<Esignature> Esignatures { get; set; }
        public DbSet<Esigner> Esigners { get; set; }
        public DbSet<EsignTemplate> EsignTemplates { get; set; }
        public DbSet<EsignTemplateType> EsignTemplateTypes { get; set; }
        public DbSet<EsignUserAgreementStatu> EsignUserAgreementStatus { get; set; }
        public DbSet<EuLoanMonthlyInterest> EuLoanMonthlyInterests { get; set; }
        public DbSet<ExperianAccountStatus> ExperianAccountStatuses { get; set; }
        public DbSet<ExperianAccountType> ExperianAccountTypes { get; set; }
        public DbSet<ExperianConsentAgreement> ExperianConsentAgreements { get; set; }
        public DbSet<ExperianConsumerData> ExperianConsumerDatas { get; set; }
        public DbSet<ExperianConsumerDataApplicant> ExperianConsumerDataApplicants { get; set; }
        public DbSet<ExperianConsumerDataCai> ExperianConsumerDataCais { get; set; }
        public DbSet<ExperianConsumerDataCaisBalance> ExperianConsumerDataCaisBalances { get; set; }
        public DbSet<ExperianConsumerDataCaisCardHistory> ExperianConsumerDataCaisCardHistories { get; set; }
        public DbSet<ExperianConsumerDataLocation> ExperianConsumerDataLocations { get; set; }
        public DbSet<ExperianConsumerDataNoc> ExperianConsumerDataNocs { get; set; }
        public DbSet<ExperianConsumerDataResidency> ExperianConsumerDataResidencies { get; set; }
        public DbSet<ExperianDefaultAccount> ExperianDefaultAccounts { get; set; }
        public DbSet<ExperianDirector> ExperianDirectors { get; set; }
        public DbSet<ExperianLtd> ExperianLtds { get; set; }
        public DbSet<ExperianLtdCaisMonthly> ExperianLtdCaisMonthlies { get; set; }
        public DbSet<ExperianLtdCreditSummary> ExperianLtdCreditSummaries { get; set; }
        public DbSet<ExperianLtdDL48> ExperianLtdDL48 { get; set; }
        public DbSet<ExperianLtdDL52> ExperianLtdDL52 { get; set; }
        public DbSet<ExperianLtdDL65> ExperianLtdDL65 { get; set; }
        public DbSet<ExperianLtdDL68> ExperianLtdDL68 { get; set; }
        public DbSet<ExperianLtdDL72> ExperianLtdDL72 { get; set; }
        public DbSet<ExperianLtdDL97> ExperianLtdDL97 { get; set; }
        public DbSet<ExperianLtdDL99> ExperianLtdDL99 { get; set; }
        public DbSet<ExperianLtdDLA2> ExperianLtdDLA2 { get; set; }
        public DbSet<ExperianLtdDLB5> ExperianLtdDLB5 { get; set; }
        public DbSet<ExperianLtdError> ExperianLtdErrors { get; set; }
        public DbSet<ExperianLtdLenderDetail> ExperianLtdLenderDetails { get; set; }
        public DbSet<ExperianLtdPrevCompanyName> ExperianLtdPrevCompanyNames { get; set; }
        public DbSet<ExperianLtdShareholder> ExperianLtdShareholders { get; set; }
        public DbSet<ExperianNonLimitedResultBankruptcyDetail> ExperianNonLimitedResultBankruptcyDetails { get; set; }
        public DbSet<ExperianNonLimitedResultCcjDetail> ExperianNonLimitedResultCcjDetails { get; set; }
        public DbSet<ExperianNonLimitedResultCcjRegisteredAgainst> ExperianNonLimitedResultCcjRegisteredAgainsts { get; set; }
        public DbSet<ExperianNonLimitedResultCcjTradingName> ExperianNonLimitedResultCcjTradingNames { get; set; }
        public DbSet<ExperianNonLimitedResultPaymentPerformanceDetail> ExperianNonLimitedResultPaymentPerformanceDetails { get; set; }
        public DbSet<ExperianNonLimitedResultPreviousSearch> ExperianNonLimitedResultPreviousSearches { get; set; }
        public DbSet<ExperianNonLimitedResult> ExperianNonLimitedResults { get; set; }
        public DbSet<ExperianNonLimitedResultScoreHistory> ExperianNonLimitedResultScoreHistories { get; set; }
        public DbSet<ExperianNonLimitedResultSicCode> ExperianNonLimitedResultSicCodes { get; set; }
        public DbSet<ExperianNonLimitedResultsScoreHistory> ExperianNonLimitedResultsScoreHistories { get; set; }
        public DbSet<Export_Results> Export_Results { get; set; }
        public DbSet<EzbobMailNodeAttachRelation> EzbobMailNodeAttachRelations { get; set; }
        public DbSet<EzServiceActionHistory> EzServiceActionHistories { get; set; }
        public DbSet<EzServiceActionName> EzServiceActionNames { get; set; }
        public DbSet<EzServiceActionStatu> EzServiceActionStatus { get; set; }
        public DbSet<EzServiceCronjobArgument> EzServiceCronjobArguments { get; set; }
        public DbSet<EzServiceCronjobArgumentType> EzServiceCronjobArgumentTypes { get; set; }
        public DbSet<EzServiceCronjobLog> EzServiceCronjobLogs { get; set; }
        public DbSet<EzServiceCronjobLogArgument> EzServiceCronjobLogArguments { get; set; }
        public DbSet<EzServiceCronjobRepetitionType> EzServiceCronjobRepetitionTypes { get; set; }
        public DbSet<EzServiceCrontab> EzServiceCrontabs { get; set; }
        public DbSet<EzServiceDefaultInstance> EzServiceDefaultInstances { get; set; }
        public DbSet<EzServiceInstance> EzServiceInstances { get; set; }
        public DbSet<FraudAddress> FraudAddresses { get; set; }
        public DbSet<FraudBankAccount> FraudBankAccounts { get; set; }
        public DbSet<FraudCompany> FraudCompanies { get; set; }
        public DbSet<FraudDetection> FraudDetections { get; set; }
        public DbSet<FraudEmail> FraudEmails { get; set; }
        public DbSet<FraudEmailDomain> FraudEmailDomains { get; set; }
        public DbSet<FraudPhone> FraudPhones { get; set; }
        public DbSet<FraudRequest> FraudRequests { get; set; }
        public DbSet<FraudShop> FraudShops { get; set; }
        public DbSet<FraudUser> FraudUsers { get; set; }
        public DbSet<FrequentActionItem> FrequentActionItems { get; set; }
        public DbSet<FrequentActionItemsForCustomer> FrequentActionItemsForCustomers { get; set; }
        public DbSet<LandRegistry> LandRegistries { get; set; }
        public DbSet<LandRegistryOwner> LandRegistryOwners { get; set; }
        public DbSet<Loan> Loans { get; set; }
        public DbSet<LoanAgreement> LoanAgreements { get; set; }
        public DbSet<LoanAgreementTemplate> LoanAgreementTemplates { get; set; }
        public DbSet<LoanChangesHistory> LoanChangesHistories { get; set; }
        public DbSet<LoanCharge> LoanCharges { get; set; }
        public DbSet<LoanHistory> LoanHistories { get; set; }
        public DbSet<LoanInterestFreeze> LoanInterestFreezes { get; set; }
        public DbSet<LoanLegal> LoanLegals { get; set; }
        public DbSet<LoanLien> LoanLiens { get; set; }
        public DbSet<LoanOfferMultiplier> LoanOfferMultipliers { get; set; }
        public DbSet<LoanOption> LoanOptions { get; set; }
        public DbSet<LoanSchedule> LoanSchedules { get; set; }
        public DbSet<LoanScheduleTransaction> LoanScheduleTransactions { get; set; }
        public DbSet<LoanScheduleTransactionBackFilled> LoanScheduleTransactionBackFilleds { get; set; }
        public DbSet<LoanSource> LoanSources { get; set; }
        public DbSet<LoanTransaction> LoanTransactions { get; set; }
        public DbSet<LoanTransactionMethod> LoanTransactionMethods { get; set; }
        public DbSet<LoanType> LoanTypes { get; set; }
        public DbSet<Logbook> Logbooks { get; set; }
        public DbSet<LogbookEntryType> LogbookEntryTypes { get; set; }
        public DbSet<LoyaltyProgramAction> LoyaltyProgramActions { get; set; }
        public DbSet<LoyaltyProgramActionType> LoyaltyProgramActionTypes { get; set; }
        public DbSet<MC_CampaignClicks> MC_CampaignClicks { get; set; }
        public DbSet<MedalCoefficient> MedalCoefficients { get; set; }
        public DbSet<Medal> Medals { get; set; }
        public DbSet<MobileCode> MobileCodes { get; set; }
        public DbSet<MP_AlertDocument> MP_AlertDocument { get; set; }
        public DbSet<MP_AmazonFeedback> MP_AmazonFeedback { get; set; }
        public DbSet<MP_AmazonFeedbackItem> MP_AmazonFeedbackItem { get; set; }
        public DbSet<MP_AmazonMarketplaceType> MP_AmazonMarketplaceType { get; set; }
        public DbSet<MP_AmazonOrder> MP_AmazonOrder { get; set; }
        public DbSet<MP_AmazonOrderItem> MP_AmazonOrderItem { get; set; }
        public DbSet<MP_AmazonOrderItemDetail> MP_AmazonOrderItemDetail { get; set; }
        public DbSet<MP_AmazonOrderItemDetailCatgory> MP_AmazonOrderItemDetailCatgory { get; set; }
        public DbSet<MP_AmazonOrderItemPayment> MP_AmazonOrderItemPayment { get; set; }
        public DbSet<MP_AnalyisisFunction> MP_AnalyisisFunction { get; set; }
        public DbSet<MP_AnalyisisFunctionValues> MP_AnalyisisFunctionValues { get; set; }
        public DbSet<MP_AnalysisFunctionTimePeriod> MP_AnalysisFunctionTimePeriod { get; set; }
        public DbSet<MP_ChannelGrabberOrder> MP_ChannelGrabberOrder { get; set; }
        public DbSet<MP_ChannelGrabberOrderItem> MP_ChannelGrabberOrderItem { get; set; }
        public DbSet<MP_CompanyFilesMetaData> MP_CompanyFilesMetaData { get; set; }
        public DbSet<MP_Currency> MP_Currency { get; set; }
        public DbSet<MP_CurrencyRateHistory> MP_CurrencyRateHistory { get; set; }
        public DbSet<MP_CustomerMarketPlace> MP_CustomerMarketPlace { get; set; }
        public DbSet<MP_CustomerMarketplaceUpdatingActionLog> MP_CustomerMarketplaceUpdatingActionLog { get; set; }
        public DbSet<MP_CustomerMarketplaceUpdatingCounter> MP_CustomerMarketplaceUpdatingCounter { get; set; }
        public DbSet<MP_CustomerMarketPlaceUpdatingHistory> MP_CustomerMarketPlaceUpdatingHistory { get; set; }
        public DbSet<MP_EbayAmazonCategory> MP_EbayAmazonCategory { get; set; }
        public DbSet<MP_EbayExternalTransaction> MP_EbayExternalTransaction { get; set; }
        public DbSet<MP_EbayFeedback> MP_EbayFeedback { get; set; }
        public DbSet<MP_EbayFeedbackItem> MP_EbayFeedbackItem { get; set; }
        public DbSet<MP_EbayOrder> MP_EbayOrder { get; set; }
        public DbSet<MP_EbayOrderItem> MP_EbayOrderItem { get; set; }
        public DbSet<MP_EBayOrderItemDetail> MP_EBayOrderItemDetail { get; set; }
        public DbSet<MP_EbayRaitingItem> MP_EbayRaitingItem { get; set; }
        public DbSet<MP_EbayTransaction> MP_EbayTransaction { get; set; }
        public DbSet<MP_EbayUserAccountData> MP_EbayUserAccountData { get; set; }
        public DbSet<MP_EbayUserAdditionalAccountData> MP_EbayUserAdditionalAccountData { get; set; }
        public DbSet<MP_EbayUserAddressData> MP_EbayUserAddressData { get; set; }
        public DbSet<MP_EbayUserData> MP_EbayUserData { get; set; }
        public DbSet<MP_EkmOrder> MP_EkmOrder { get; set; }
        public DbSet<MP_EkmOrderItem> MP_EkmOrderItem { get; set; }
        public DbSet<MP_ExperianBankCache> MP_ExperianBankCache { get; set; }
        public DbSet<MP_ExperianDataCache> MP_ExperianDataCache { get; set; }
        public DbSet<MP_ExperianHistory> MP_ExperianHistory { get; set; }
        public DbSet<MP_ExperianParentCompanyMap> MP_ExperianParentCompanyMap { get; set; }
        public DbSet<MP_FreeAgentCompany> MP_FreeAgentCompany { get; set; }
        public DbSet<MP_FreeAgentExpense> MP_FreeAgentExpense { get; set; }
        public DbSet<MP_FreeAgentExpenseCategory> MP_FreeAgentExpenseCategory { get; set; }
        public DbSet<MP_FreeAgentInvoice> MP_FreeAgentInvoice { get; set; }
        public DbSet<MP_FreeAgentInvoiceItem> MP_FreeAgentInvoiceItem { get; set; }
        public DbSet<MP_FreeAgentRequest> MP_FreeAgentRequest { get; set; }
        public DbSet<MP_FreeAgentUsers> MP_FreeAgentUsers { get; set; }
        public DbSet<MP_MarketplaceGroup> MP_MarketplaceGroup { get; set; }
        public DbSet<MP_MarketplaceType> MP_MarketplaceType { get; set; }
        public DbSet<MP_PayPalAggregationFormula> MP_PayPalAggregationFormula { get; set; }
        public DbSet<MP_PayPalPersonalInfo> MP_PayPalPersonalInfo { get; set; }
        public DbSet<MP_PayPalTransaction> MP_PayPalTransaction { get; set; }
        public DbSet<MP_PayPalTransactionItem2> MP_PayPalTransactionItem2 { get; set; }
        public DbSet<MP_PayPointOrder> MP_PayPointOrder { get; set; }
        public DbSet<MP_PayPointOrderItem> MP_PayPointOrderItem { get; set; }
        public DbSet<MP_PlayOrder> MP_PlayOrder { get; set; }
        public DbSet<MP_PlayOrderItem> MP_PlayOrderItem { get; set; }
        public DbSet<MP_RtiTaxMonthEntries> MP_RtiTaxMonthEntries { get; set; }
        public DbSet<MP_RtiTaxMonthRecords> MP_RtiTaxMonthRecords { get; set; }
        public DbSet<MP_SageExpenditure> MP_SageExpenditure { get; set; }
        public DbSet<MP_SageIncome> MP_SageIncome { get; set; }
        public DbSet<MP_SagePaymentStatus> MP_SagePaymentStatus { get; set; }
        public DbSet<MP_SagePurchaseInvoice> MP_SagePurchaseInvoice { get; set; }
        public DbSet<MP_SagePurchaseInvoiceItem> MP_SagePurchaseInvoiceItem { get; set; }
        public DbSet<MP_SageRequest> MP_SageRequest { get; set; }
        public DbSet<MP_SageSalesInvoice> MP_SageSalesInvoice { get; set; }
        public DbSet<MP_SageSalesInvoiceItem> MP_SageSalesInvoiceItem { get; set; }
        public DbSet<MP_ServiceLog> MP_ServiceLog { get; set; }
        public DbSet<MP_TeraPeakCategory> MP_TeraPeakCategory { get; set; }
        public DbSet<MP_TeraPeakCategoryStatistics> MP_TeraPeakCategoryStatistics { get; set; }
        public DbSet<MP_TeraPeakOrder> MP_TeraPeakOrder { get; set; }
        public DbSet<MP_TeraPeakOrderItem> MP_TeraPeakOrderItem { get; set; }
        public DbSet<MP_ValueType> MP_ValueType { get; set; }
        public DbSet<MP_VatReturnEntries> MP_VatReturnEntries { get; set; }
        public DbSet<MP_VatReturnEntryNames> MP_VatReturnEntryNames { get; set; }
        public DbSet<MP_VatReturnRecordDeleteHistory> MP_VatReturnRecordDeleteHistory { get; set; }
        public DbSet<MP_VatReturnRecordDeleteReason> MP_VatReturnRecordDeleteReason { get; set; }
        public DbSet<MP_VatReturnRecords> MP_VatReturnRecords { get; set; }
        public DbSet<MP_VatReturnSummary> MP_VatReturnSummary { get; set; }
        public DbSet<MP_VatReturnSummaryPeriods> MP_VatReturnSummaryPeriods { get; set; }
        public DbSet<MP_VolusionOrder> MP_VolusionOrder { get; set; }
        public DbSet<MP_VolusionOrderItem> MP_VolusionOrderItem { get; set; }
        public DbSet<MP_WhiteList> MP_WhiteList { get; set; }
        public DbSet<MP_YodleeGroup> MP_YodleeGroup { get; set; }
        public DbSet<MP_YodleeGroupRuleMap> MP_YodleeGroupRuleMap { get; set; }
        public DbSet<MP_YodleeOrder> MP_YodleeOrder { get; set; }
        public DbSet<MP_YodleeOrderItem> MP_YodleeOrderItem { get; set; }
        public DbSet<MP_YodleeOrderItemBankTransaction> MP_YodleeOrderItemBankTransaction { get; set; }
        public DbSet<MP_YodleeRule> MP_YodleeRule { get; set; }
        public DbSet<MP_YodleeSearchWords> MP_YodleeSearchWords { get; set; }
        public DbSet<MP_YodleeTransactionCategories> MP_YodleeTransactionCategories { get; set; }
        public DbSet<NewMedalComparison1> NewMedalComparison1 { get; set; }
        public DbSet<NewMedalComparison2> NewMedalComparison2 { get; set; }
        public DbSet<OfflineScoring> OfflineScorings { get; set; }
        public DbSet<PacnetAgentConfig> PacnetAgentConfigs { get; set; }
        public DbSet<PacNetBalance> PacNetBalances { get; set; }
        public DbSet<PacNetManualBalance> PacNetManualBalances { get; set; }
        public DbSet<PacnetPaypointServiceLog> PacnetPaypointServiceLogs { get; set; }
        public DbSet<PaymentRollover> PaymentRollovers { get; set; }
        public DbSet<PayPointBalance> PayPointBalances { get; set; }
        public DbSet<PayPointCard> PayPointCards { get; set; }
        public DbSet<Perk> Perks { get; set; }
        public DbSet<PersonalInfoHistory> PersonalInfoHistories { get; set; }
        public DbSet<PostcodeServiceLog> PostcodeServiceLogs { get; set; }
        public DbSet<QuickOffer> QuickOffers { get; set; }
        public DbSet<QuickOfferConfiguration> QuickOfferConfigurations { get; set; }
        public DbSet<RejectReason> RejectReasons { get; set; }
        public DbSet<ReportArgumentName> ReportArgumentNames { get; set; }
        public DbSet<ReportArgument> ReportArguments { get; set; }
        public DbSet<ReportScheduler> ReportSchedulers { get; set; }
        public DbSet<ReportsUsersMap> ReportsUsersMaps { get; set; }
        public DbSet<ReportUser> ReportUsers { get; set; }
        public DbSet<Security_Permission> Security_Permission { get; set; }
        public DbSet<Security_Question> Security_Question { get; set; }
        public DbSet<Security_Role> Security_Role { get; set; }
        public DbSet<Security_RolePermissionRel> Security_RolePermissionRel { get; set; }
        public DbSet<Security_Session> Security_Session { get; set; }
        public DbSet<Security_User> Security_User { get; set; }
        public DbSet<SicNaceCodeMap> SicNaceCodeMaps { get; set; }
        public DbSet<SiteAnalytic> SiteAnalytics { get; set; }
        public DbSet<SiteAnalyticsCode> SiteAnalyticsCodes { get; set; }
        public DbSet<SmsMessage> SmsMessages { get; set; }
        public DbSet<SourceRefHistory> SourceRefHistories { get; set; }
        public DbSet<SpecialPayer> SpecialPayers { get; set; }
        public DbSet<SuggestedAmount> SuggestedAmounts { get; set; }
        public DbSet<TargetingResult> TargetingResults { get; set; }
        public DbSet<TestCustomer> TestCustomers { get; set; }
        public DbSet<TrustPilotStatu> TrustPilotStatus { get; set; }
        public DbSet<UiAction> UiActions { get; set; }
        public DbSet<UiControlGroupRelevance> UiControlGroupRelevances { get; set; }
        public DbSet<UiControlGroup> UiControlGroups { get; set; }
        public DbSet<UiControl> UiControls { get; set; }
        public DbSet<UiEvent> UiEvents { get; set; }
        public DbSet<UnderwriterRecentCustomer> UnderwriterRecentCustomers { get; set; }
        public DbSet<UploadLimitation> UploadLimitations { get; set; }
        public DbSet<VatReturnRecordSource> VatReturnRecordSources { get; set; }
        public DbSet<VipRequest> VipRequests { get; set; }
        public DbSet<WhatsNew> WhatsNews { get; set; }
        public DbSet<WhatsNewCustomerMap> WhatsNewCustomerMaps { get; set; }
        public DbSet<WhiteLabelProvider> WhiteLabelProviders { get; set; }
        public DbSet<WizardStepSequence> WizardStepSequences { get; set; }
        public DbSet<WizardStepType> WizardStepTypes { get; set; }
        public DbSet<YodleeAccount> YodleeAccounts { get; set; }
        public DbSet<YodleeBank> YodleeBanks { get; set; }
        public DbSet<Zoopla> Zooplas { get; set; }
        public DbSet<CustomerAnalytic> CustomerAnalytics { get; set; }
        public DbSet<CustomerLoyaltyProgramPoint> CustomerLoyaltyProgramPoints { get; set; }
        public DbSet<Security_vUser> Security_vUser { get; set; }
        public DbSet<vw_NotClose> vw_NotClose { get; set; }
    
        public virtual int AddCciHistory(Nullable<int> customerId, Nullable<int> underwriterID, Nullable<bool> cciMark, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var underwriterIDParameter = underwriterID.HasValue ?
                new ObjectParameter("UnderwriterID", underwriterID) :
                new ObjectParameter("UnderwriterID", typeof(int));
    
            var cciMarkParameter = cciMark.HasValue ?
                new ObjectParameter("CciMark", cciMark) :
                new ObjectParameter("CciMark", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCciHistory", customerIdParameter, underwriterIDParameter, cciMarkParameter, nowParameter);
        }
    
        public virtual int ApplyEncryptedMarketplaceSecurityData(Nullable<System.Guid> batchID, Nullable<bool> doRollback)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.Guid));
    
            var doRollbackParameter = doRollback.HasValue ?
                new ObjectParameter("DoRollback", doRollback) :
                new ObjectParameter("DoRollback", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ApplyEncryptedMarketplaceSecurityData", batchIDParameter, doRollbackParameter);
        }
    
        public virtual int AttachCustomerToBroker(Nullable<int> customerID, Nullable<int> toBrokerID, Nullable<int> underwriterID, Nullable<System.DateTime> now)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var toBrokerIDParameter = toBrokerID.HasValue ?
                new ObjectParameter("ToBrokerID", toBrokerID) :
                new ObjectParameter("ToBrokerID", typeof(int));
    
            var underwriterIDParameter = underwriterID.HasValue ?
                new ObjectParameter("UnderwriterID", underwriterID) :
                new ObjectParameter("UnderwriterID", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AttachCustomerToBroker", customerIDParameter, toBrokerIDParameter, underwriterIDParameter, nowParameter);
        }
    
        public virtual int AutoDecisionConditionRecord(Nullable<int> decisionId, string decisionName, Nullable<bool> satisfied, string description)
        {
            var decisionIdParameter = decisionId.HasValue ?
                new ObjectParameter("DecisionId", decisionId) :
                new ObjectParameter("DecisionId", typeof(int));
    
            var decisionNameParameter = decisionName != null ?
                new ObjectParameter("DecisionName", decisionName) :
                new ObjectParameter("DecisionName", typeof(string));
    
            var satisfiedParameter = satisfied.HasValue ?
                new ObjectParameter("Satisfied", satisfied) :
                new ObjectParameter("Satisfied", typeof(bool));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AutoDecisionConditionRecord", decisionIdParameter, decisionNameParameter, satisfiedParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AutoDecisionRecord(Nullable<int> customerId, string decisionName, Nullable<System.DateTime> date)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var decisionNameParameter = decisionName != null ?
                new ObjectParameter("DecisionName", decisionName) :
                new ObjectParameter("DecisionName", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AutoDecisionRecord", customerIdParameter, decisionNameParameter, dateParameter);
        }
    
        public virtual ObjectResult<AV_GetAnalysisFunctions_Result> AV_GetAnalysisFunctions(Nullable<int> customerMarketPlaceId)
        {
            var customerMarketPlaceIdParameter = customerMarketPlaceId.HasValue ?
                new ObjectParameter("CustomerMarketPlaceId", customerMarketPlaceId) :
                new ObjectParameter("CustomerMarketPlaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_GetAnalysisFunctions_Result>("AV_GetAnalysisFunctions", customerMarketPlaceIdParameter);
        }
    
        public virtual ObjectResult<AV_GetAutomaticDecisions_Result> AV_GetAutomaticDecisions(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_GetAutomaticDecisions_Result>("AV_GetAutomaticDecisions", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> AV_GetCustomerBirthDate(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("AV_GetCustomerBirthDate", customerIdParameter);
        }
    
        public virtual ObjectResult<AV_GetCustomerMarketPlaces_Result> AV_GetCustomerMarketPlaces(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_GetCustomerMarketPlaces_Result>("AV_GetCustomerMarketPlaces", customerIdParameter);
        }
    
        public virtual ObjectResult<string> AV_GetCustomerPaymentMarketPlaces(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AV_GetCustomerPaymentMarketPlaces", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AV_GetExperianScore(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AV_GetExperianScore", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AV_GetMedalRate(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AV_GetMedalRate", customerIdParameter);
        }
    
        public virtual ObjectResult<AV_GetRejectionData_Result> AV_GetRejectionData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_GetRejectionData_Result>("AV_GetRejectionData", customerIdParameter);
        }
    
        public virtual ObjectResult<string> AV_HasDefaultAccounts(Nullable<int> customerId, Nullable<int> minDefBalance, Nullable<int> months)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var minDefBalanceParameter = minDefBalance.HasValue ?
                new ObjectParameter("MinDefBalance", minDefBalance) :
                new ObjectParameter("MinDefBalance", typeof(int));
    
            var monthsParameter = months.HasValue ?
                new ObjectParameter("Months", months) :
                new ObjectParameter("Months", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AV_HasDefaultAccounts", customerIdParameter, minDefBalanceParameter, monthsParameter);
        }
    
        public virtual ObjectResult<string> AV_IsCustomerOffline(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AV_IsCustomerOffline", customerIdParameter);
        }
    
        public virtual ObjectResult<AV_ReApprovalData_Result> AV_ReApprovalData(Nullable<int> customerId, Nullable<int> cashRequestId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var cashRequestIdParameter = cashRequestId.HasValue ?
                new ObjectParameter("CashRequestId", cashRequestId) :
                new ObjectParameter("CashRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_ReApprovalData_Result>("AV_ReApprovalData", customerIdParameter, cashRequestIdParameter);
        }
    
        public virtual ObjectResult<AV_RejectionConstants_Result> AV_RejectionConstants()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_RejectionConstants_Result>("AV_RejectionConstants");
        }
    
        public virtual ObjectResult<AV_ReRejectionData_Result> AV_ReRejectionData(Nullable<int> customerId, Nullable<int> cashRequestId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var cashRequestIdParameter = cashRequestId.HasValue ?
                new ObjectParameter("CashRequestId", cashRequestId) :
                new ObjectParameter("CashRequestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AV_ReRejectionData_Result>("AV_ReRejectionData", customerIdParameter, cashRequestIdParameter);
        }
    
        public virtual ObjectResult<string> AV_WasLoanApproved(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AV_WasLoanApproved", customerIdParameter);
        }
    
        public virtual int BrokerAcceptTerms(Nullable<int> termsID, string contactEmail, Nullable<System.DateTime> now)
        {
            var termsIDParameter = termsID.HasValue ?
                new ObjectParameter("TermsID", termsID) :
                new ObjectParameter("TermsID", typeof(int));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerAcceptTerms", termsIDParameter, contactEmailParameter, nowParameter);
        }
    
        public virtual ObjectResult<BrokerAddCustomerLead_Result> BrokerAddCustomerLead(string leadFirstName, string leadLastName, string leadEmail, string leadAddMode, string contactEmail, Nullable<System.DateTime> dateCreated)
        {
            var leadFirstNameParameter = leadFirstName != null ?
                new ObjectParameter("LeadFirstName", leadFirstName) :
                new ObjectParameter("LeadFirstName", typeof(string));
    
            var leadLastNameParameter = leadLastName != null ?
                new ObjectParameter("LeadLastName", leadLastName) :
                new ObjectParameter("LeadLastName", typeof(string));
    
            var leadEmailParameter = leadEmail != null ?
                new ObjectParameter("LeadEmail", leadEmail) :
                new ObjectParameter("LeadEmail", typeof(string));
    
            var leadAddModeParameter = leadAddMode != null ?
                new ObjectParameter("LeadAddMode", leadAddMode) :
                new ObjectParameter("LeadAddMode", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerAddCustomerLead_Result>("BrokerAddCustomerLead", leadFirstNameParameter, leadLastNameParameter, leadEmailParameter, leadAddModeParameter, contactEmailParameter, dateCreatedParameter);
        }
    
        public virtual int BrokerCheckCustomerRelevance(Nullable<int> customerID, string customerEmail, string sourceRef)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("CustomerEmail", customerEmail) :
                new ObjectParameter("CustomerEmail", typeof(string));
    
            var sourceRefParameter = sourceRef != null ?
                new ObjectParameter("SourceRef", sourceRef) :
                new ObjectParameter("SourceRef", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerCheckCustomerRelevance", customerIDParameter, customerEmailParameter, sourceRefParameter);
        }
    
        public virtual int BrokerDeleteCustomerLead(Nullable<int> customerID, string reasonCode, Nullable<System.DateTime> dateDeleted)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var reasonCodeParameter = reasonCode != null ?
                new ObjectParameter("ReasonCode", reasonCode) :
                new ObjectParameter("ReasonCode", typeof(string));
    
            var dateDeletedParameter = dateDeleted.HasValue ?
                new ObjectParameter("DateDeleted", dateDeleted) :
                new ObjectParameter("DateDeleted", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerDeleteCustomerLead", customerIDParameter, reasonCodeParameter, dateDeletedParameter);
        }
    
        public virtual ObjectResult<BrokerDownloadCustomerFile_Result> BrokerDownloadCustomerFile(string refNum, string contactEmail, Nullable<int> fileID)
        {
            var refNumParameter = refNum != null ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerDownloadCustomerFile_Result>("BrokerDownloadCustomerFile", refNumParameter, contactEmailParameter, fileIDParameter);
        }
    
        public virtual int BrokerGenerateSourceRef(Nullable<int> brokerID, ObjectParameter sourceRef)
        {
            var brokerIDParameter = brokerID.HasValue ?
                new ObjectParameter("BrokerID", brokerID) :
                new ObjectParameter("BrokerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerGenerateSourceRef", brokerIDParameter, sourceRef);
        }
    
        public virtual ObjectResult<Nullable<int>> BrokerIsBroker(string contactEmail)
        {
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BrokerIsBroker", contactEmailParameter);
        }
    
        public virtual int BrokerLeadAcquireCustomer(Nullable<int> customerID, Nullable<int> leadID, Nullable<bool> brokerFillsForCustomer)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(int));
    
            var brokerFillsForCustomerParameter = brokerFillsForCustomer.HasValue ?
                new ObjectParameter("BrokerFillsForCustomer", brokerFillsForCustomer) :
                new ObjectParameter("BrokerFillsForCustomer", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerLeadAcquireCustomer", customerIDParameter, leadIDParameter, brokerFillsForCustomerParameter);
        }
    
        public virtual ObjectResult<BrokerLeadCanFillWizard_Result> BrokerLeadCanFillWizard(Nullable<int> leadID, string leadEmail, string contactEmail)
        {
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(int));
    
            var leadEmailParameter = leadEmail != null ?
                new ObjectParameter("LeadEmail", leadEmail) :
                new ObjectParameter("LeadEmail", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLeadCanFillWizard_Result>("BrokerLeadCanFillWizard", leadIDParameter, leadEmailParameter, contactEmailParameter);
        }
    
        public virtual ObjectResult<BrokerLeadCheckToken_Result> BrokerLeadCheckToken(Nullable<System.Guid> token, Nullable<System.DateTime> dateDeleted)
        {
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(System.Guid));
    
            var dateDeletedParameter = dateDeleted.HasValue ?
                new ObjectParameter("DateDeleted", dateDeleted) :
                new ObjectParameter("DateDeleted", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLeadCheckToken_Result>("BrokerLeadCheckToken", tokenParameter, dateDeletedParameter);
        }
    
        public virtual ObjectResult<BrokerLeadLoadBroker_Result> BrokerLeadLoadBroker(Nullable<int> leadID)
        {
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLeadLoadBroker_Result>("BrokerLeadLoadBroker", leadIDParameter);
        }
    
        public virtual ObjectResult<BrokerLeadLoadDataForEmail_Result> BrokerLeadLoadDataForEmail(Nullable<int> leadID, string contactEmail)
        {
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(int));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLeadLoadDataForEmail_Result>("BrokerLeadLoadDataForEmail", leadIDParameter, contactEmailParameter);
        }
    
        public virtual int BrokerLeadSaveInvitationToken(Nullable<int> leadID, Nullable<System.Guid> token, Nullable<System.DateTime> dateCreated)
        {
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(int));
    
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(System.Guid));
    
            var dateCreatedParameter = dateCreated.HasValue ?
                new ObjectParameter("DateCreated", dateCreated) :
                new ObjectParameter("DateCreated", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerLeadSaveInvitationToken", leadIDParameter, tokenParameter, dateCreatedParameter);
        }
    
        public virtual int BrokerLeadSetInvitationSetDate(Nullable<int> leadID, Nullable<System.DateTime> dateInvitationSent)
        {
            var leadIDParameter = leadID.HasValue ?
                new ObjectParameter("LeadID", leadID) :
                new ObjectParameter("LeadID", typeof(int));
    
            var dateInvitationSentParameter = dateInvitationSent.HasValue ?
                new ObjectParameter("DateInvitationSent", dateInvitationSent) :
                new ObjectParameter("DateInvitationSent", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BrokerLeadSetInvitationSetDate", leadIDParameter, dateInvitationSentParameter);
        }
    
        public virtual ObjectResult<string> BrokerLoadAddressForCustomerMailCC(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BrokerLoadAddressForCustomerMailCC", customerIDParameter);
        }
    
        public virtual ObjectResult<BrokerLoadContactData_Result> BrokerLoadContactData(Nullable<int> brokerID)
        {
            var brokerIDParameter = brokerID.HasValue ?
                new ObjectParameter("BrokerID", brokerID) :
                new ObjectParameter("BrokerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadContactData_Result>("BrokerLoadContactData", brokerIDParameter);
        }
    
        public virtual ObjectResult<BrokerLoadCurrentTerms_Result> BrokerLoadCurrentTerms()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadCurrentTerms_Result>("BrokerLoadCurrentTerms");
        }
    
        public virtual ObjectResult<BrokerLoadCustomerCRM_Result> BrokerLoadCustomerCRM(string refNum, string contactEmail)
        {
            var refNumParameter = refNum != null ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadCustomerCRM_Result>("BrokerLoadCustomerCRM", refNumParameter, contactEmailParameter);
        }
    
        public virtual ObjectResult<BrokerLoadCustomerDetails_Result> BrokerLoadCustomerDetails(string refNum, string contactEmail)
        {
            var refNumParameter = refNum != null ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadCustomerDetails_Result>("BrokerLoadCustomerDetails", refNumParameter, contactEmailParameter);
        }
    
        public virtual ObjectResult<BrokerLoadCustomerFiles_Result> BrokerLoadCustomerFiles(string refNum, string contactEmail)
        {
            var refNumParameter = refNum != null ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadCustomerFiles_Result>("BrokerLoadCustomerFiles", refNumParameter, contactEmailParameter);
        }
    
        public virtual ObjectResult<BrokerLoadCustomerList_Result> BrokerLoadCustomerList(string contactEmail, Nullable<int> brokerID)
        {
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var brokerIDParameter = brokerID.HasValue ?
                new ObjectParameter("BrokerID", brokerID) :
                new ObjectParameter("BrokerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadCustomerList_Result>("BrokerLoadCustomerList", contactEmailParameter, brokerIDParameter);
        }
    
        public virtual ObjectResult<BrokerLoadLeadList_Result> BrokerLoadLeadList(string contactEmail, Nullable<int> brokerID)
        {
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var brokerIDParameter = brokerID.HasValue ?
                new ObjectParameter("BrokerID", brokerID) :
                new ObjectParameter("BrokerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadLeadList_Result>("BrokerLoadLeadList", contactEmailParameter, brokerIDParameter);
        }
    
        public virtual ObjectResult<BrokerLoadMarketingFiles_Result> BrokerLoadMarketingFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadMarketingFiles_Result>("BrokerLoadMarketingFiles");
        }
    
        public virtual ObjectResult<BrokerLoadOwnProperties_Result> BrokerLoadOwnProperties(string contactEmail, Nullable<int> brokerID, string contactMobile)
        {
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var brokerIDParameter = brokerID.HasValue ?
                new ObjectParameter("BrokerID", brokerID) :
                new ObjectParameter("BrokerID", typeof(int));
    
            var contactMobileParameter = contactMobile != null ?
                new ObjectParameter("ContactMobile", contactMobile) :
                new ObjectParameter("ContactMobile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadOwnProperties_Result>("BrokerLoadOwnProperties", contactEmailParameter, brokerIDParameter, contactMobileParameter);
        }
    
        public virtual ObjectResult<BrokerLoadSignedTerms_Result> BrokerLoadSignedTerms(string contactEmail)
        {
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadSignedTerms_Result>("BrokerLoadSignedTerms", contactEmailParameter);
        }
    
        public virtual ObjectResult<BrokerLoadSmsCount_Result> BrokerLoadSmsCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerLoadSmsCount_Result>("BrokerLoadSmsCount");
        }
    
        public virtual ObjectResult<string> BrokerLogin(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BrokerLogin", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<string> BrokerSaveCrmEntry(string type, Nullable<int> actionID, Nullable<int> statusID, string comment, string refNum, string contactEmail, Nullable<System.DateTime> entryTime)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var actionIDParameter = actionID.HasValue ?
                new ObjectParameter("ActionID", actionID) :
                new ObjectParameter("ActionID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var refNumParameter = refNum != null ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var entryTimeParameter = entryTime.HasValue ?
                new ObjectParameter("EntryTime", entryTime) :
                new ObjectParameter("EntryTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BrokerSaveCrmEntry", typeParameter, actionIDParameter, statusIDParameter, commentParameter, refNumParameter, contactEmailParameter, entryTimeParameter);
        }
    
        public virtual ObjectResult<string> BrokerSaveUploadedCustomerFile(string fileName, string refNum, string contactEmail, byte[] fileContents, Nullable<System.DateTime> uploadedTime)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var refNumParameter = refNum != null ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var fileContentsParameter = fileContents != null ?
                new ObjectParameter("FileContents", fileContents) :
                new ObjectParameter("FileContents", typeof(byte[]));
    
            var uploadedTimeParameter = uploadedTime.HasValue ?
                new ObjectParameter("UploadedTime", uploadedTime) :
                new ObjectParameter("UploadedTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("BrokerSaveUploadedCustomerFile", fileNameParameter, refNumParameter, contactEmailParameter, fileContentsParameter, uploadedTimeParameter);
        }
    
        public virtual ObjectResult<BrokerSignUp_Result> BrokerSignUp(string firmName, string firmRegNum, string contactName, string contactEmail, string contactMobile, string contactOtherPhone, string tempSourceRef, Nullable<decimal> estimatedMonthlyClientAmount, string password, string firmWebSiteUrl, Nullable<int> estimatedMonthlyApplicationCount, Nullable<System.DateTime> agreedToTermsDate, Nullable<System.DateTime> agreedToPrivacyPolicyDate, Nullable<int> brokerTermsID, string referredBy)
        {
            var firmNameParameter = firmName != null ?
                new ObjectParameter("FirmName", firmName) :
                new ObjectParameter("FirmName", typeof(string));
    
            var firmRegNumParameter = firmRegNum != null ?
                new ObjectParameter("FirmRegNum", firmRegNum) :
                new ObjectParameter("FirmRegNum", typeof(string));
    
            var contactNameParameter = contactName != null ?
                new ObjectParameter("ContactName", contactName) :
                new ObjectParameter("ContactName", typeof(string));
    
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var contactMobileParameter = contactMobile != null ?
                new ObjectParameter("ContactMobile", contactMobile) :
                new ObjectParameter("ContactMobile", typeof(string));
    
            var contactOtherPhoneParameter = contactOtherPhone != null ?
                new ObjectParameter("ContactOtherPhone", contactOtherPhone) :
                new ObjectParameter("ContactOtherPhone", typeof(string));
    
            var tempSourceRefParameter = tempSourceRef != null ?
                new ObjectParameter("TempSourceRef", tempSourceRef) :
                new ObjectParameter("TempSourceRef", typeof(string));
    
            var estimatedMonthlyClientAmountParameter = estimatedMonthlyClientAmount.HasValue ?
                new ObjectParameter("EstimatedMonthlyClientAmount", estimatedMonthlyClientAmount) :
                new ObjectParameter("EstimatedMonthlyClientAmount", typeof(decimal));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firmWebSiteUrlParameter = firmWebSiteUrl != null ?
                new ObjectParameter("FirmWebSiteUrl", firmWebSiteUrl) :
                new ObjectParameter("FirmWebSiteUrl", typeof(string));
    
            var estimatedMonthlyApplicationCountParameter = estimatedMonthlyApplicationCount.HasValue ?
                new ObjectParameter("EstimatedMonthlyApplicationCount", estimatedMonthlyApplicationCount) :
                new ObjectParameter("EstimatedMonthlyApplicationCount", typeof(int));
    
            var agreedToTermsDateParameter = agreedToTermsDate.HasValue ?
                new ObjectParameter("AgreedToTermsDate", agreedToTermsDate) :
                new ObjectParameter("AgreedToTermsDate", typeof(System.DateTime));
    
            var agreedToPrivacyPolicyDateParameter = agreedToPrivacyPolicyDate.HasValue ?
                new ObjectParameter("AgreedToPrivacyPolicyDate", agreedToPrivacyPolicyDate) :
                new ObjectParameter("AgreedToPrivacyPolicyDate", typeof(System.DateTime));
    
            var brokerTermsIDParameter = brokerTermsID.HasValue ?
                new ObjectParameter("BrokerTermsID", brokerTermsID) :
                new ObjectParameter("BrokerTermsID", typeof(int));
    
            var referredByParameter = referredBy != null ?
                new ObjectParameter("ReferredBy", referredBy) :
                new ObjectParameter("ReferredBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BrokerSignUp_Result>("BrokerSignUp", firmNameParameter, firmRegNumParameter, contactNameParameter, contactEmailParameter, contactMobileParameter, contactOtherPhoneParameter, tempSourceRefParameter, estimatedMonthlyClientAmountParameter, passwordParameter, firmWebSiteUrlParameter, estimatedMonthlyApplicationCountParameter, agreedToTermsDateParameter, agreedToPrivacyPolicyDateParameter, brokerTermsIDParameter, referredByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> BrokerUpdatePassword(string contactEmail, string oldPassword, string newPassword)
        {
            var contactEmailParameter = contactEmail != null ?
                new ObjectParameter("ContactEmail", contactEmail) :
                new ObjectParameter("ContactEmail", typeof(string));
    
            var oldPasswordParameter = oldPassword != null ?
                new ObjectParameter("OldPassword", oldPassword) :
                new ObjectParameter("OldPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("BrokerUpdatePassword", contactEmailParameter, oldPasswordParameter, newPasswordParameter);
        }
    
        public virtual int ChangeBrokerEmail(string oldEmail, string newEmail, string newPassword)
        {
            var oldEmailParameter = oldEmail != null ?
                new ObjectParameter("OldEmail", oldEmail) :
                new ObjectParameter("OldEmail", typeof(string));
    
            var newEmailParameter = newEmail != null ?
                new ObjectParameter("NewEmail", newEmail) :
                new ObjectParameter("NewEmail", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangeBrokerEmail", oldEmailParameter, newEmailParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<CheckLtdCompanyCache_Result> CheckLtdCompanyCache(string companyRefNum)
        {
            var companyRefNumParameter = companyRefNum != null ?
                new ObjectParameter("CompanyRefNum", companyRefNum) :
                new ObjectParameter("CompanyRefNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CheckLtdCompanyCache_Result>("CheckLtdCompanyCache", companyRefNumParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CreateCustomerSession(Nullable<int> customerID, Nullable<System.DateTime> startSession, string ip, Nullable<bool> isPasswdOk, string errorMessage, Nullable<System.DateTime> endSession, ObjectParameter sessionID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var startSessionParameter = startSession.HasValue ?
                new ObjectParameter("StartSession", startSession) :
                new ObjectParameter("StartSession", typeof(System.DateTime));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var isPasswdOkParameter = isPasswdOk.HasValue ?
                new ObjectParameter("IsPasswdOk", isPasswdOk) :
                new ObjectParameter("IsPasswdOk", typeof(bool));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var endSessionParameter = endSession.HasValue ?
                new ObjectParameter("EndSession", endSession) :
                new ObjectParameter("EndSession", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateCustomerSession", customerIDParameter, startSessionParameter, ipParameter, isPasswdOkParameter, errorMessageParameter, endSessionParameter, sessionID);
        }
    
        public virtual int CreateUnderwriterUser(Nullable<System.DateTime> creationTime, string name, string encryptedPassword, Nullable<int> roleId)
        {
            var creationTimeParameter = creationTime.HasValue ?
                new ObjectParameter("CreationTime", creationTime) :
                new ObjectParameter("CreationTime", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var encryptedPasswordParameter = encryptedPassword != null ?
                new ObjectParameter("EncryptedPassword", encryptedPassword) :
                new ObjectParameter("EncryptedPassword", typeof(string));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUnderwriterUser", creationTimeParameter, nameParameter, encryptedPasswordParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CreateWebUser(string email, string ezPassword, Nullable<int> securityQuestionID, string securityAnswer, string roleName, Nullable<int> branchID, string ip, Nullable<System.DateTime> now)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ezPasswordParameter = ezPassword != null ?
                new ObjectParameter("EzPassword", ezPassword) :
                new ObjectParameter("EzPassword", typeof(string));
    
            var securityQuestionIDParameter = securityQuestionID.HasValue ?
                new ObjectParameter("SecurityQuestionID", securityQuestionID) :
                new ObjectParameter("SecurityQuestionID", typeof(int));
    
            var securityAnswerParameter = securityAnswer != null ?
                new ObjectParameter("SecurityAnswer", securityAnswer) :
                new ObjectParameter("SecurityAnswer", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var branchIDParameter = branchID.HasValue ?
                new ObjectParameter("BranchID", branchID) :
                new ObjectParameter("BranchID", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CreateWebUser", emailParameter, ezPasswordParameter, securityQuestionIDParameter, securityAnswerParameter, roleNameParameter, branchIDParameter, ipParameter, nowParameter);
        }
    
        public virtual ObjectResult<CrmLoadActions_Result> CrmLoadActions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrmLoadActions_Result>("CrmLoadActions");
        }
    
        public virtual ObjectResult<CrmLoadRanks_Result> CrmLoadRanks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrmLoadRanks_Result>("CrmLoadRanks");
        }
    
        public virtual ObjectResult<CrmLoadStatuses_Result> CrmLoadStatuses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CrmLoadStatuses_Result>("CrmLoadStatuses");
        }
    
        public virtual int CustomerAnalyticsUpdate(Nullable<int> customerID, Nullable<int> score, Nullable<int> indebtednessIndex, Nullable<int> numOfAccounts, Nullable<int> numOfDefaults, Nullable<int> numOfLastDefaults, Nullable<System.DateTime> analyticsDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var indebtednessIndexParameter = indebtednessIndex.HasValue ?
                new ObjectParameter("IndebtednessIndex", indebtednessIndex) :
                new ObjectParameter("IndebtednessIndex", typeof(int));
    
            var numOfAccountsParameter = numOfAccounts.HasValue ?
                new ObjectParameter("NumOfAccounts", numOfAccounts) :
                new ObjectParameter("NumOfAccounts", typeof(int));
    
            var numOfDefaultsParameter = numOfDefaults.HasValue ?
                new ObjectParameter("NumOfDefaults", numOfDefaults) :
                new ObjectParameter("NumOfDefaults", typeof(int));
    
            var numOfLastDefaultsParameter = numOfLastDefaults.HasValue ?
                new ObjectParameter("NumOfLastDefaults", numOfLastDefaults) :
                new ObjectParameter("NumOfLastDefaults", typeof(int));
    
            var analyticsDateParameter = analyticsDate.HasValue ?
                new ObjectParameter("AnalyticsDate", analyticsDate) :
                new ObjectParameter("AnalyticsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerAnalyticsUpdate", customerIDParameter, scoreParameter, indebtednessIndexParameter, numOfAccountsParameter, numOfDefaultsParameter, numOfLastDefaultsParameter, analyticsDateParameter);
        }
    
        public virtual int CustomerAnalyticsUpdateCompany(Nullable<long> customerID, Nullable<int> score, Nullable<int> maxScore, Nullable<decimal> suggestedAmount, Nullable<System.DateTime> incorporationDate, Nullable<decimal> tangibleEquity, Nullable<decimal> adjustedProfit, string sic1980Code1, string sic1980Desc1, string sic1992Code1, string sic1992Desc1, Nullable<int> ageOfMostRecentCcj, Nullable<int> numOfCcjsInLast24Months, Nullable<int> sumOfCcjsInLast24Months, Nullable<System.DateTime> analyticsDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var maxScoreParameter = maxScore.HasValue ?
                new ObjectParameter("MaxScore", maxScore) :
                new ObjectParameter("MaxScore", typeof(int));
    
            var suggestedAmountParameter = suggestedAmount.HasValue ?
                new ObjectParameter("SuggestedAmount", suggestedAmount) :
                new ObjectParameter("SuggestedAmount", typeof(decimal));
    
            var incorporationDateParameter = incorporationDate.HasValue ?
                new ObjectParameter("IncorporationDate", incorporationDate) :
                new ObjectParameter("IncorporationDate", typeof(System.DateTime));
    
            var tangibleEquityParameter = tangibleEquity.HasValue ?
                new ObjectParameter("TangibleEquity", tangibleEquity) :
                new ObjectParameter("TangibleEquity", typeof(decimal));
    
            var adjustedProfitParameter = adjustedProfit.HasValue ?
                new ObjectParameter("AdjustedProfit", adjustedProfit) :
                new ObjectParameter("AdjustedProfit", typeof(decimal));
    
            var sic1980Code1Parameter = sic1980Code1 != null ?
                new ObjectParameter("Sic1980Code1", sic1980Code1) :
                new ObjectParameter("Sic1980Code1", typeof(string));
    
            var sic1980Desc1Parameter = sic1980Desc1 != null ?
                new ObjectParameter("Sic1980Desc1", sic1980Desc1) :
                new ObjectParameter("Sic1980Desc1", typeof(string));
    
            var sic1992Code1Parameter = sic1992Code1 != null ?
                new ObjectParameter("Sic1992Code1", sic1992Code1) :
                new ObjectParameter("Sic1992Code1", typeof(string));
    
            var sic1992Desc1Parameter = sic1992Desc1 != null ?
                new ObjectParameter("Sic1992Desc1", sic1992Desc1) :
                new ObjectParameter("Sic1992Desc1", typeof(string));
    
            var ageOfMostRecentCcjParameter = ageOfMostRecentCcj.HasValue ?
                new ObjectParameter("AgeOfMostRecentCcj", ageOfMostRecentCcj) :
                new ObjectParameter("AgeOfMostRecentCcj", typeof(int));
    
            var numOfCcjsInLast24MonthsParameter = numOfCcjsInLast24Months.HasValue ?
                new ObjectParameter("NumOfCcjsInLast24Months", numOfCcjsInLast24Months) :
                new ObjectParameter("NumOfCcjsInLast24Months", typeof(int));
    
            var sumOfCcjsInLast24MonthsParameter = sumOfCcjsInLast24Months.HasValue ?
                new ObjectParameter("SumOfCcjsInLast24Months", sumOfCcjsInLast24Months) :
                new ObjectParameter("SumOfCcjsInLast24Months", typeof(int));
    
            var analyticsDateParameter = analyticsDate.HasValue ?
                new ObjectParameter("AnalyticsDate", analyticsDate) :
                new ObjectParameter("AnalyticsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerAnalyticsUpdateCompany", customerIDParameter, scoreParameter, maxScoreParameter, suggestedAmountParameter, incorporationDateParameter, tangibleEquityParameter, adjustedProfitParameter, sic1980Code1Parameter, sic1980Desc1Parameter, sic1992Code1Parameter, sic1992Desc1Parameter, ageOfMostRecentCcjParameter, numOfCcjsInLast24MonthsParameter, sumOfCcjsInLast24MonthsParameter, analyticsDateParameter);
        }
    
        public virtual int CustomerAnalyticsUpdateDirector(Nullable<int> customerID, Nullable<int> score, Nullable<System.DateTime> analyticsDate)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var analyticsDateParameter = analyticsDate.HasValue ?
                new ObjectParameter("AnalyticsDate", analyticsDate) :
                new ObjectParameter("AnalyticsDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerAnalyticsUpdateDirector", customerIDParameter, scoreParameter, analyticsDateParameter);
        }
    
        public virtual int CustomerAnalyticsUpdateLocalData(Nullable<long> customerID, Nullable<System.DateTime> analyticsDate, Nullable<decimal> annualTurnover, Nullable<decimal> totalSumOfOrdersForLoanOffer, Nullable<decimal> marketplaceSeniorityYears, Nullable<int> maxFeedback, Nullable<int> mPsNumber, Nullable<bool> firstRepaymentDatePassed, Nullable<decimal> ezbobSeniorityMonths, Nullable<int> onTimeLoans, Nullable<int> latePayments, Nullable<int> earlyPayments)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(long));
    
            var analyticsDateParameter = analyticsDate.HasValue ?
                new ObjectParameter("AnalyticsDate", analyticsDate) :
                new ObjectParameter("AnalyticsDate", typeof(System.DateTime));
    
            var annualTurnoverParameter = annualTurnover.HasValue ?
                new ObjectParameter("AnnualTurnover", annualTurnover) :
                new ObjectParameter("AnnualTurnover", typeof(decimal));
    
            var totalSumOfOrdersForLoanOfferParameter = totalSumOfOrdersForLoanOffer.HasValue ?
                new ObjectParameter("TotalSumOfOrdersForLoanOffer", totalSumOfOrdersForLoanOffer) :
                new ObjectParameter("TotalSumOfOrdersForLoanOffer", typeof(decimal));
    
            var marketplaceSeniorityYearsParameter = marketplaceSeniorityYears.HasValue ?
                new ObjectParameter("MarketplaceSeniorityYears", marketplaceSeniorityYears) :
                new ObjectParameter("MarketplaceSeniorityYears", typeof(decimal));
    
            var maxFeedbackParameter = maxFeedback.HasValue ?
                new ObjectParameter("MaxFeedback", maxFeedback) :
                new ObjectParameter("MaxFeedback", typeof(int));
    
            var mPsNumberParameter = mPsNumber.HasValue ?
                new ObjectParameter("MPsNumber", mPsNumber) :
                new ObjectParameter("MPsNumber", typeof(int));
    
            var firstRepaymentDatePassedParameter = firstRepaymentDatePassed.HasValue ?
                new ObjectParameter("FirstRepaymentDatePassed", firstRepaymentDatePassed) :
                new ObjectParameter("FirstRepaymentDatePassed", typeof(bool));
    
            var ezbobSeniorityMonthsParameter = ezbobSeniorityMonths.HasValue ?
                new ObjectParameter("EzbobSeniorityMonths", ezbobSeniorityMonths) :
                new ObjectParameter("EzbobSeniorityMonths", typeof(decimal));
    
            var onTimeLoansParameter = onTimeLoans.HasValue ?
                new ObjectParameter("OnTimeLoans", onTimeLoans) :
                new ObjectParameter("OnTimeLoans", typeof(int));
    
            var latePaymentsParameter = latePayments.HasValue ?
                new ObjectParameter("LatePayments", latePayments) :
                new ObjectParameter("LatePayments", typeof(int));
    
            var earlyPaymentsParameter = earlyPayments.HasValue ?
                new ObjectParameter("EarlyPayments", earlyPayments) :
                new ObjectParameter("EarlyPayments", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerAnalyticsUpdateLocalData", customerIDParameter, analyticsDateParameter, annualTurnoverParameter, totalSumOfOrdersForLoanOfferParameter, marketplaceSeniorityYearsParameter, maxFeedbackParameter, mPsNumberParameter, firstRepaymentDatePassedParameter, ezbobSeniorityMonthsParameter, onTimeLoansParameter, latePaymentsParameter, earlyPaymentsParameter);
        }
    
        public virtual int CustomerAnalyticsUpdateNonLimitedCompany(Nullable<int> customerId, string refNumber, Nullable<int> maxScore)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            var maxScoreParameter = maxScore.HasValue ?
                new ObjectParameter("MaxScore", maxScore) :
                new ObjectParameter("MaxScore", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerAnalyticsUpdateNonLimitedCompany", customerIdParameter, refNumberParameter, maxScoreParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> CustomerHasCompanyAnalytics(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("CustomerHasCompanyAnalytics", customerIDParameter);
        }
    
        public virtual int CustomerScoringResult_Insert(Nullable<int> pCustomerId, string pAC_Parameters, string aC_Descriptors, string result_Weight, string pResult_MAXPossiblePoints, string pMedal, Nullable<decimal> pScorePoints, Nullable<decimal> pScoreResult)
        {
            var pCustomerIdParameter = pCustomerId.HasValue ?
                new ObjectParameter("pCustomerId", pCustomerId) :
                new ObjectParameter("pCustomerId", typeof(int));
    
            var pAC_ParametersParameter = pAC_Parameters != null ?
                new ObjectParameter("pAC_Parameters", pAC_Parameters) :
                new ObjectParameter("pAC_Parameters", typeof(string));
    
            var aC_DescriptorsParameter = aC_Descriptors != null ?
                new ObjectParameter("AC_Descriptors", aC_Descriptors) :
                new ObjectParameter("AC_Descriptors", typeof(string));
    
            var result_WeightParameter = result_Weight != null ?
                new ObjectParameter("Result_Weight", result_Weight) :
                new ObjectParameter("Result_Weight", typeof(string));
    
            var pResult_MAXPossiblePointsParameter = pResult_MAXPossiblePoints != null ?
                new ObjectParameter("pResult_MAXPossiblePoints", pResult_MAXPossiblePoints) :
                new ObjectParameter("pResult_MAXPossiblePoints", typeof(string));
    
            var pMedalParameter = pMedal != null ?
                new ObjectParameter("pMedal", pMedal) :
                new ObjectParameter("pMedal", typeof(string));
    
            var pScorePointsParameter = pScorePoints.HasValue ?
                new ObjectParameter("pScorePoints", pScorePoints) :
                new ObjectParameter("pScorePoints", typeof(decimal));
    
            var pScoreResultParameter = pScoreResult.HasValue ?
                new ObjectParameter("pScoreResult", pScoreResult) :
                new ObjectParameter("pScoreResult", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerScoringResult_Insert", pCustomerIdParameter, pAC_ParametersParameter, aC_DescriptorsParameter, result_WeightParameter, pResult_MAXPossiblePointsParameter, pMedalParameter, pScorePointsParameter, pScoreResultParameter);
        }
    
        public virtual int CustomerSetWizardStepIfNotLast(Nullable<int> customerID, Nullable<int> newStepID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var newStepIDParameter = newStepID.HasValue ?
                new ObjectParameter("NewStepID", newStepID) :
                new ObjectParameter("NewStepID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CustomerSetWizardStepIfNotLast", customerIDParameter, newStepIDParameter);
        }
    
        public virtual int DeleteDataSource(Nullable<int> pDataSourceId, string pSignedData)
        {
            var pDataSourceIdParameter = pDataSourceId.HasValue ?
                new ObjectParameter("pDataSourceId", pDataSourceId) :
                new ObjectParameter("pDataSourceId", typeof(int));
    
            var pSignedDataParameter = pSignedData != null ?
                new ObjectParameter("pSignedData", pSignedData) :
                new ObjectParameter("pSignedData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDataSource", pDataSourceIdParameter, pSignedDataParameter);
        }
    
        public virtual int DeleteExperianDirector(Nullable<int> directorID)
        {
            var directorIDParameter = directorID.HasValue ?
                new ObjectParameter("DirectorID", directorID) :
                new ObjectParameter("DirectorID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteExperianDirector", directorIDParameter);
        }
    
        public virtual int DeleteOldPayPointBalanceData(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOldPayPointBalanceData", dateParameter);
        }
    
        public virtual int DeleteOtherVatReturnSummary(Nullable<int> customerID, Nullable<int> customerMarketplaceID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerMarketplaceIDParameter = customerMarketplaceID.HasValue ?
                new ObjectParameter("CustomerMarketplaceID", customerMarketplaceID) :
                new ObjectParameter("CustomerMarketplaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteOtherVatReturnSummary", customerIDParameter, customerMarketplaceIDParameter);
        }
    
        public virtual int DeleteParsedExperianConsumer(Nullable<long> serviceLogID)
        {
            var serviceLogIDParameter = serviceLogID.HasValue ?
                new ObjectParameter("ServiceLogID", serviceLogID) :
                new ObjectParameter("ServiceLogID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteParsedExperianConsumer", serviceLogIDParameter);
        }
    
        public virtual int DeleteParsedExperianLtd(Nullable<long> serviceLogID)
        {
            var serviceLogIDParameter = serviceLogID.HasValue ?
                new ObjectParameter("ServiceLogID", serviceLogID) :
                new ObjectParameter("ServiceLogID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteParsedExperianLtd", serviceLogIDParameter);
        }
    
        public virtual int DisableCurrentManualPacnetDeposits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DisableCurrentManualPacnetDeposits");
        }
    
        public virtual ObjectResult<Nullable<int>> EmailConfirmationCheckOne(Nullable<System.Guid> token, Nullable<int> explicitStateID, Nullable<int> implicitStateID)
        {
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(System.Guid));
    
            var explicitStateIDParameter = explicitStateID.HasValue ?
                new ObjectParameter("ExplicitStateID", explicitStateID) :
                new ObjectParameter("ExplicitStateID", typeof(int));
    
            var implicitStateIDParameter = implicitStateID.HasValue ?
                new ObjectParameter("ImplicitStateID", implicitStateID) :
                new ObjectParameter("ImplicitStateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("EmailConfirmationCheckOne", tokenParameter, explicitStateIDParameter, implicitStateIDParameter);
        }
    
        public virtual int EmailConfirmationConfirmUser(Nullable<int> userID, Nullable<int> emailStateID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var emailStateIDParameter = emailStateID.HasValue ?
                new ObjectParameter("EmailStateID", emailStateID) :
                new ObjectParameter("EmailStateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmailConfirmationConfirmUser", userIDParameter, emailStateIDParameter);
        }
    
        public virtual int EmailConfirmationGenerate(Nullable<System.Guid> token, Nullable<int> userID, Nullable<int> emailStateID, Nullable<System.DateTime> now)
        {
            var tokenParameter = token.HasValue ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(System.Guid));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var emailStateIDParameter = emailStateID.HasValue ?
                new ObjectParameter("EmailStateID", emailStateID) :
                new ObjectParameter("EmailStateID", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmailConfirmationGenerate", tokenParameter, userIDParameter, emailStateIDParameter, nowParameter);
        }
    
        public virtual int EncryptMarketplaceSecurityData(Nullable<System.Guid> batchID, Nullable<int> marketplaceID, Nullable<System.DateTime> backupTime, byte[] oldData, byte[] newData)
        {
            var batchIDParameter = batchID.HasValue ?
                new ObjectParameter("BatchID", batchID) :
                new ObjectParameter("BatchID", typeof(System.Guid));
    
            var marketplaceIDParameter = marketplaceID.HasValue ?
                new ObjectParameter("MarketplaceID", marketplaceID) :
                new ObjectParameter("MarketplaceID", typeof(int));
    
            var backupTimeParameter = backupTime.HasValue ?
                new ObjectParameter("BackupTime", backupTime) :
                new ObjectParameter("BackupTime", typeof(System.DateTime));
    
            var oldDataParameter = oldData != null ?
                new ObjectParameter("OldData", oldData) :
                new ObjectParameter("OldData", typeof(byte[]));
    
            var newDataParameter = newData != null ?
                new ObjectParameter("NewData", newData) :
                new ObjectParameter("NewData", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EncryptMarketplaceSecurityData", batchIDParameter, marketplaceIDParameter, backupTimeParameter, oldDataParameter, newDataParameter);
        }
    
        public virtual int EndMarketplaceUpdate(Nullable<int> marketplaceID, Nullable<int> historyRecordID, Nullable<System.DateTime> updatingEnd, string errorMessage, Nullable<int> tokenExpired)
        {
            var marketplaceIDParameter = marketplaceID.HasValue ?
                new ObjectParameter("MarketplaceID", marketplaceID) :
                new ObjectParameter("MarketplaceID", typeof(int));
    
            var historyRecordIDParameter = historyRecordID.HasValue ?
                new ObjectParameter("HistoryRecordID", historyRecordID) :
                new ObjectParameter("HistoryRecordID", typeof(int));
    
            var updatingEndParameter = updatingEnd.HasValue ?
                new ObjectParameter("UpdatingEnd", updatingEnd) :
                new ObjectParameter("UpdatingEnd", typeof(System.DateTime));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var tokenExpiredParameter = tokenExpired.HasValue ?
                new ObjectParameter("TokenExpired", tokenExpired) :
                new ObjectParameter("TokenExpired", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EndMarketplaceUpdate", marketplaceIDParameter, historyRecordIDParameter, updatingEndParameter, errorMessageParameter, tokenExpiredParameter);
        }
    
        public virtual int EzServiceGetActionNameID(string actionName, ObjectParameter actionNameID)
        {
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EzServiceGetActionNameID", actionNameParameter, actionNameID);
        }
    
        public virtual ObjectResult<EzServiceGetDefaultInstance_Result> EzServiceGetDefaultInstance(string argument)
        {
            var argumentParameter = argument != null ?
                new ObjectParameter("Argument", argument) :
                new ObjectParameter("Argument", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EzServiceGetDefaultInstance_Result>("EzServiceGetDefaultInstance", argumentParameter);
        }
    
        public virtual ObjectResult<EzServiceLoadConfiguration_Result> EzServiceLoadConfiguration(string instanceName)
        {
            var instanceNameParameter = instanceName != null ?
                new ObjectParameter("InstanceName", instanceName) :
                new ObjectParameter("InstanceName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EzServiceLoadConfiguration_Result>("EzServiceLoadConfiguration", instanceNameParameter);
        }
    
        public virtual int EzServiceSaveActionMetaData(Nullable<int> instanceID, string actionName, Nullable<System.Guid> actionID, Nullable<bool> isSync, Nullable<int> status, Nullable<int> currentThreadID, Nullable<int> underlyingThreadID, string comment, Nullable<int> userID, Nullable<int> customerID)
        {
            var instanceIDParameter = instanceID.HasValue ?
                new ObjectParameter("InstanceID", instanceID) :
                new ObjectParameter("InstanceID", typeof(int));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var actionIDParameter = actionID.HasValue ?
                new ObjectParameter("ActionID", actionID) :
                new ObjectParameter("ActionID", typeof(System.Guid));
    
            var isSyncParameter = isSync.HasValue ?
                new ObjectParameter("IsSync", isSync) :
                new ObjectParameter("IsSync", typeof(bool));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var currentThreadIDParameter = currentThreadID.HasValue ?
                new ObjectParameter("CurrentThreadID", currentThreadID) :
                new ObjectParameter("CurrentThreadID", typeof(int));
    
            var underlyingThreadIDParameter = underlyingThreadID.HasValue ?
                new ObjectParameter("UnderlyingThreadID", underlyingThreadID) :
                new ObjectParameter("UnderlyingThreadID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EzServiceSaveActionMetaData", instanceIDParameter, actionNameParameter, actionIDParameter, isSyncParameter, statusParameter, currentThreadIDParameter, underlyingThreadIDParameter, commentParameter, userIDParameter, customerIDParameter);
        }
    
        public virtual ObjectResult<EzTvGetStats_Result> EzTvGetStats(Nullable<System.DateTime> now, Nullable<System.DateTime> firstOfMonth, Nullable<System.DateTime> monthAgo)
        {
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            var firstOfMonthParameter = firstOfMonth.HasValue ?
                new ObjectParameter("FirstOfMonth", firstOfMonth) :
                new ObjectParameter("FirstOfMonth", typeof(System.DateTime));
    
            var monthAgoParameter = monthAgo.HasValue ?
                new ObjectParameter("MonthAgo", monthAgo) :
                new ObjectParameter("MonthAgo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EzTvGetStats_Result>("EzTvGetStats", nowParameter, firstOfMonthParameter, monthAgoParameter);
        }
    
        public virtual ObjectResult<EzTvIsChanged_Result> EzTvIsChanged()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EzTvIsChanged_Result>("EzTvIsChanged");
        }
    
        public virtual int FinishWizard(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FinishWizard", customerIdParameter);
        }
    
        public virtual int FraudGetDetections(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FraudGetDetections", customerIdParameter);
        }
    
        public virtual int GenerateHistoricalDelinquencyPerformanceData(Nullable<System.DateTime> cutoffDate, Nullable<decimal> minPct)
        {
            var cutoffDateParameter = cutoffDate.HasValue ?
                new ObjectParameter("CutoffDate", cutoffDate) :
                new ObjectParameter("CutoffDate", typeof(System.DateTime));
    
            var minPctParameter = minPct.HasValue ?
                new ObjectParameter("MinPct", minPct) :
                new ObjectParameter("MinPct", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateHistoricalDelinquencyPerformanceData", cutoffDateParameter, minPctParameter);
        }
    
        public virtual ObjectResult<GetActivePropertyStatuses_Result> GetActivePropertyStatuses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetActivePropertyStatuses_Result>("GetActivePropertyStatuses");
        }
    
        public virtual ObjectResult<GetAllConfigurationVariables_Result> GetAllConfigurationVariables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllConfigurationVariables_Result>("GetAllConfigurationVariables");
        }
    
        public virtual ObjectResult<GetAllLastMarketplaceStatuses_Result> GetAllLastMarketplaceStatuses(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLastMarketplaceStatuses_Result>("GetAllLastMarketplaceStatuses", customerIdParameter);
        }
    
        public virtual ObjectResult<GetApprovalConfigs_Result> GetApprovalConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovalConfigs_Result>("GetApprovalConfigs");
        }
    
        public virtual ObjectResult<GetApprovalData_Result> GetApprovalData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetApprovalData_Result>("GetApprovalData", customerIdParameter);
        }
    
        public virtual ObjectResult<GetAvailableFunds_Result> GetAvailableFunds()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAvailableFunds_Result>("GetAvailableFunds");
        }
    
        public virtual ObjectResult<GetBankBasedApprovalConfigs_Result> GetBankBasedApprovalConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBankBasedApprovalConfigs_Result>("GetBankBasedApprovalConfigs");
        }
    
        public virtual ObjectResult<GetBasicCustomerData_Result> GetBasicCustomerData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBasicCustomerData_Result>("GetBasicCustomerData", customerIdParameter);
        }
    
        public virtual ObjectResult<GetBasicCustomerOrBrokerData_Result> GetBasicCustomerOrBrokerData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBasicCustomerOrBrokerData_Result>("GetBasicCustomerOrBrokerData", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCaisData_Result> GetCaisData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCaisData_Result>("GetCaisData");
        }
    
        public virtual ObjectResult<GetCaisFileData_Result> GetCaisFileData(Nullable<int> caisId)
        {
            var caisIdParameter = caisId.HasValue ?
                new ObjectParameter("CaisId", caisId) :
                new ObjectParameter("CaisId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCaisFileData_Result>("GetCaisFileData", caisIdParameter);
        }
    
        public virtual ObjectResult<GetCaisFoldersPaths_Result> GetCaisFoldersPaths()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCaisFoldersPaths_Result>("GetCaisFoldersPaths");
        }
    
        public virtual ObjectResult<GetCompanyCaisAccountsDataForAlerts_Result> GetCompanyCaisAccountsDataForAlerts(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyCaisAccountsDataForAlerts_Result>("GetCompanyCaisAccountsDataForAlerts", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCompanyCaisDefaultDataForAlerts_Result> GetCompanyCaisDefaultDataForAlerts(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyCaisDefaultDataForAlerts_Result>("GetCompanyCaisDefaultDataForAlerts", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCompanyData_Result> GetCompanyData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyData_Result>("GetCompanyData", customerIdParameter);
        }
    
        public virtual ObjectResult<string> GetCompanyFileMetadata(Nullable<int> companyFileId)
        {
            var companyFileIdParameter = companyFileId.HasValue ?
                new ObjectParameter("CompanyFileId", companyFileId) :
                new ObjectParameter("CompanyFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetCompanyFileMetadata", companyFileIdParameter);
        }
    
        public virtual ObjectResult<GetCompanyHistory_Result> GetCompanyHistory(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCompanyHistory_Result>("GetCompanyHistory", refNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCompanyIsLimited(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCompanyIsLimited", refNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCompanyScore(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCompanyScore", customerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetCompanySeniority(Nullable<int> customerID, Nullable<bool> isLimited)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var isLimitedParameter = isLimited.HasValue ?
                new ObjectParameter("IsLimited", isLimited) :
                new ObjectParameter("IsLimited", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetCompanySeniority", customerIDParameter, isLimitedParameter);
        }
    
        public virtual int GetConfigTable(string tableName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetConfigTable", tableNameParameter);
        }
    
        public virtual int GetConfigTableValue(string configTableName, Nullable<int> key)
        {
            var configTableNameParameter = configTableName != null ?
                new ObjectParameter("ConfigTableName", configTableName) :
                new ObjectParameter("ConfigTableName", typeof(string));
    
            var keyParameter = key.HasValue ?
                new ObjectParameter("Key", key) :
                new ObjectParameter("Key", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetConfigTableValue", configTableNameParameter, keyParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCurrentBalanceSumFromCustomerWithSameCompany(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCurrentBalanceSumFromCustomerWithSameCompany", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCurrentMobileCodeCount_Result> GetCurrentMobileCodeCount(string phone)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCurrentMobileCodeCount_Result>("GetCurrentMobileCodeCount", phoneParameter);
        }
    
        public virtual ObjectResult<GetCustomerAddresses_Result> GetCustomerAddresses(Nullable<int> customerId, Nullable<int> directorId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerAddresses_Result>("GetCustomerAddresses", customerIdParameter, directorIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerDataForReRejection_Result> GetCustomerDataForReRejection(Nullable<int> customerId, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDataForReRejection_Result>("GetCustomerDataForReRejection", customerIdParameter, nowParameter);
        }
    
        public virtual ObjectResult<GetCustomerDetailsForStateCalculation_Result> GetCustomerDetailsForStateCalculation(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDetailsForStateCalculation_Result>("GetCustomerDetailsForStateCalculation", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerDirectorsForConsumerCheck_Result> GetCustomerDirectorsForConsumerCheck(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDirectorsForConsumerCheck_Result>("GetCustomerDirectorsForConsumerCheck", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetCustomerMarketplaces(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCustomerMarketplaces", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerMpsErrors_Result> GetCustomerMpsErrors(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerMpsErrors_Result>("GetCustomerMpsErrors", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerOwnedAddresses_Result> GetCustomerOwnedAddresses(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerOwnedAddresses_Result>("GetCustomerOwnedAddresses", customerIdParameter);
        }
    
        public virtual ObjectResult<GetCustomerRejectionData_Result> GetCustomerRejectionData(Nullable<int> customerId, Nullable<int> reject_Defaults_Months, Nullable<int> reject_Defaults_Amount, Nullable<int> reject_Defaults_CompanyMonths, Nullable<int> reject_Defaults_CompanyAmount)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var reject_Defaults_MonthsParameter = reject_Defaults_Months.HasValue ?
                new ObjectParameter("Reject_Defaults_Months", reject_Defaults_Months) :
                new ObjectParameter("Reject_Defaults_Months", typeof(int));
    
            var reject_Defaults_AmountParameter = reject_Defaults_Amount.HasValue ?
                new ObjectParameter("Reject_Defaults_Amount", reject_Defaults_Amount) :
                new ObjectParameter("Reject_Defaults_Amount", typeof(int));
    
            var reject_Defaults_CompanyMonthsParameter = reject_Defaults_CompanyMonths.HasValue ?
                new ObjectParameter("Reject_Defaults_CompanyMonths", reject_Defaults_CompanyMonths) :
                new ObjectParameter("Reject_Defaults_CompanyMonths", typeof(int));
    
            var reject_Defaults_CompanyAmountParameter = reject_Defaults_CompanyAmount.HasValue ?
                new ObjectParameter("Reject_Defaults_CompanyAmount", reject_Defaults_CompanyAmount) :
                new ObjectParameter("Reject_Defaults_CompanyAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerRejectionData_Result>("GetCustomerRejectionData", customerIdParameter, reject_Defaults_MonthsParameter, reject_Defaults_AmountParameter, reject_Defaults_CompanyMonthsParameter, reject_Defaults_CompanyAmountParameter);
        }
    
        public virtual ObjectResult<GetCustomersFiveDaysDue_Result> GetCustomersFiveDaysDue(Nullable<System.DateTime> now)
        {
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomersFiveDaysDue_Result>("GetCustomersFiveDaysDue", nowParameter);
        }
    
        public virtual int GetCustomersForMedalBackfill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomersForMedalBackfill");
        }
    
        public virtual ObjectResult<GetCustomersForNewMedalsComparison_Result> GetCustomersForNewMedalsComparison()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomersForNewMedalsComparison_Result>("GetCustomersForNewMedalsComparison");
        }
    
        public virtual int GetCustomersForPayPoint()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCustomersForPayPoint");
        }
    
        public virtual ObjectResult<GetCustomersTwoDaysDue_Result> GetCustomersTwoDaysDue()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomersTwoDaysDue_Result>("GetCustomersTwoDaysDue");
        }
    
        public virtual ObjectResult<Nullable<int>> GetCustomerZooplaData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetCustomerZooplaData", customerIdParameter);
        }
    
        public virtual ObjectResult<GetDailyReport_Result> GetDailyReport(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDailyReport_Result>("GetDailyReport", dateParameter);
        }
    
        public virtual ObjectResult<GetDataForAmlBackfill_Result> GetDataForAmlBackfill(Nullable<int> customerId, Nullable<long> serviceLogId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataForAmlBackfill_Result>("GetDataForAmlBackfill", customerIdParameter, serviceLogIdParameter);
        }
    
        public virtual ObjectResult<GetDataForAvailableFundsCheck_Result> GetDataForAvailableFundsCheck()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDataForAvailableFundsCheck_Result>("GetDataForAvailableFundsCheck");
        }
    
        public virtual int GetDataForMedalCalculation1(Nullable<int> customerId, Nullable<System.DateTime> calculationTime)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var calculationTimeParameter = calculationTime.HasValue ?
                new ObjectParameter("CalculationTime", calculationTime) :
                new ObjectParameter("CalculationTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDataForMedalCalculation1", customerIdParameter, calculationTimeParameter);
        }
    
        public virtual int GetDataForMedalCalculation2(Nullable<int> customerId, Nullable<System.DateTime> calculationTime)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var calculationTimeParameter = calculationTime.HasValue ?
                new ObjectParameter("CalculationTime", calculationTime) :
                new ObjectParameter("CalculationTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetDataForMedalCalculation2", customerIdParameter, calculationTimeParameter);
        }
    
        public virtual ObjectResult<GetEntriesForAmlBackfill_Result> GetEntriesForAmlBackfill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEntriesForAmlBackfill_Result>("GetEntriesForAmlBackfill");
        }
    
        public virtual ObjectResult<GetEscalationData_Result> GetEscalationData(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEscalationData_Result>("GetEscalationData", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetExperianAccountsCurrentBalance(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetExperianAccountsCurrentBalance", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetExperianCacheDate(Nullable<int> customerId, Nullable<int> directorId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetExperianCacheDate", customerIdParameter, directorIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetExperianCompanyCacheDate(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetExperianCompanyCacheDate", refNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetExperianConsumerScore(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetExperianConsumerScore", customerIdParameter);
        }
    
        public virtual int GetExperianConsumerServiceLog(Nullable<int> customerId, ObjectParameter serviceLogId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetExperianConsumerServiceLog", customerIdParameter, serviceLogId);
        }
    
        public virtual ObjectResult<GetExperianDirectorsNamesForCustomer_Result> GetExperianDirectorsNamesForCustomer(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExperianDirectorsNamesForCustomer_Result>("GetExperianDirectorsNamesForCustomer", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetExperianMinConsumerDirectorsScore(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetExperianMinConsumerDirectorsScore", customerIdParameter);
        }
    
        public virtual ObjectResult<GetExposurePerMedalReport_Result> GetExposurePerMedalReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExposurePerMedalReport_Result>("GetExposurePerMedalReport", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<GetExposurePerUnderwriterReport_Result> GetExposurePerUnderwriterReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExposurePerUnderwriterReport_Result>("GetExposurePerUnderwriterReport", dateStartParameter, dateEndParameter);
        }
    
        public virtual int GetFirstStepCustomers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<bool> includeTest)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var includeTestParameter = includeTest.HasValue ?
                new ObjectParameter("IncludeTest", includeTest) :
                new ObjectParameter("IncludeTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetFirstStepCustomers", dateStartParameter, dateEndParameter, includeTestParameter);
        }
    
        public virtual ObjectResult<GetFunctionAnalysisValuesByCustomerMarketPlace_Result> GetFunctionAnalysisValuesByCustomerMarketPlace(Nullable<int> mpID)
        {
            var mpIDParameter = mpID.HasValue ?
                new ObjectParameter("MpID", mpID) :
                new ObjectParameter("MpID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFunctionAnalysisValuesByCustomerMarketPlace_Result>("GetFunctionAnalysisValuesByCustomerMarketPlace", mpIDParameter);
        }
    
        public virtual ObjectResult<GetHmrcAggregations_Result> GetHmrcAggregations(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHmrcAggregations_Result>("GetHmrcAggregations", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> GetIsAmlUpdated(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("GetIsAmlUpdated", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> GetIsCompanyDataUpdated(Nullable<int> customerId, Nullable<System.DateTime> today)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("GetIsCompanyDataUpdated", customerIdParameter, todayParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> GetIsConsumerDataUpdated(Nullable<int> customerId, Nullable<int> directorId, Nullable<System.DateTime> today)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("GetIsConsumerDataUpdated", customerIdParameter, directorIdParameter, todayParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> GetIsCustomerHomeOwnerAccordingToLandRegistry(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("GetIsCustomerHomeOwnerAccordingToLandRegistry", customerIdParameter);
        }
    
        public virtual ObjectResult<GetLandRegistryDataForBackfill_Result> GetLandRegistryDataForBackfill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLandRegistryDataForBackfill_Result>("GetLandRegistryDataForBackfill");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetLastAutoresponderDate(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetLastAutoresponderDate", emailParameter);
        }
    
        public virtual ObjectResult<GetLastCashRequestForPricingModel_Result> GetLastCashRequestForPricingModel(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLastCashRequestForPricingModel_Result>("GetLastCashRequestForPricingModel", customerIdParameter);
        }
    
        public virtual ObjectResult<string> GetLastMainStrategyStatus(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLastMainStrategyStatus", customerIdParameter);
        }
    
        public virtual ObjectResult<string> GetLastMarketplaceStatus(Nullable<int> customerId, Nullable<int> marketplaceId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("MarketplaceId", marketplaceId) :
                new ObjectParameter("MarketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLastMarketplaceStatus", customerIdParameter, marketplaceIdParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetLastMarketplaceUpdateTime(Nullable<int> customerId, Nullable<int> marketplaceId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("MarketplaceId", marketplaceId) :
                new ObjectParameter("MarketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetLastMarketplaceUpdateTime", customerIdParameter, marketplaceIdParameter);
        }
    
        public virtual ObjectResult<GetLastOfferDataForApproval_Result> GetLastOfferDataForApproval(Nullable<int> customerId, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLastOfferDataForApproval_Result>("GetLastOfferDataForApproval", customerIdParameter, nowParameter);
        }
    
        public virtual ObjectResult<GetLastOfferDataForReApproval_Result> GetLastOfferDataForReApproval(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLastOfferDataForReApproval_Result>("GetLastOfferDataForReApproval", customerIdParameter);
        }
    
        public virtual ObjectResult<GetLastOfferForAutomatedDecision_Result> GetLastOfferForAutomatedDecision(Nullable<int> customerId, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLastOfferForAutomatedDecision_Result>("GetLastOfferForAutomatedDecision", customerIdParameter, nowParameter);
        }
    
        public virtual int GetLastStepCustomers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<bool> includeTest)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var includeTestParameter = includeTest.HasValue ?
                new ObjectParameter("IncludeTest", includeTest) :
                new ObjectParameter("IncludeTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLastStepCustomers", dateStartParameter, dateEndParameter, includeTestParameter);
        }
    
        public virtual int GetLastStepCustomers2(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<bool> includeTest)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var includeTestParameter = includeTest.HasValue ?
                new ObjectParameter("IncludeTest", includeTest) :
                new ObjectParameter("IncludeTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLastStepCustomers2", dateStartParameter, dateEndParameter, includeTestParameter);
        }
    
        public virtual int GetLateBy14DaysAndUpdate()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLateBy14DaysAndUpdate");
        }
    
        public virtual ObjectResult<GetLateForCollection_Result> GetLateForCollection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLateForCollection_Result>("GetLateForCollection");
        }
    
        public virtual ObjectResult<Nullable<decimal>> GetLatestInterestRate(Nullable<int> customerId, Nullable<System.DateTime> today)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GetLatestInterestRate", customerIdParameter, todayParameter);
        }
    
        public virtual ObjectResult<string> GetLoanStatus(Nullable<int> loanId)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetLoanStatus", loanIdParameter);
        }
    
        public virtual ObjectResult<GetLoansToCollect_Result> GetLoansToCollect()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoansToCollect_Result>("GetLoansToCollect");
        }
    
        public virtual ObjectResult<GetMails_Result> GetMails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMails_Result>("GetMails");
        }
    
        public virtual ObjectResult<GetMarketplaceDetailsForUpdate_Result> GetMarketplaceDetailsForUpdate(Nullable<int> marketplaceId)
        {
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("MarketplaceId", marketplaceId) :
                new ObjectParameter("MarketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMarketplaceDetailsForUpdate_Result>("GetMarketplaceDetailsForUpdate", marketplaceIdParameter);
        }
    
        public virtual ObjectResult<GetMedalCoefficients_Result> GetMedalCoefficients(string medalFlow, string medal)
        {
            var medalFlowParameter = medalFlow != null ?
                new ObjectParameter("MedalFlow", medalFlow) :
                new ObjectParameter("MedalFlow", typeof(string));
    
            var medalParameter = medal != null ?
                new ObjectParameter("Medal", medal) :
                new ObjectParameter("Medal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMedalCoefficients_Result>("GetMedalCoefficients", medalFlowParameter, medalParameter);
        }
    
        public virtual ObjectResult<GetMedalStatisticReport_Result> GetMedalStatisticReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMedalStatisticReport_Result>("GetMedalStatisticReport", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedBankruptcyDetails_Result> GetNonLimitedBankruptcyDetails(Nullable<int> experianNonLimitedResultId)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedBankruptcyDetails_Result>("GetNonLimitedBankruptcyDetails", experianNonLimitedResultIdParameter);
        }
    
        public virtual ObjectResult<string> GetNonLimitedCcjDetailRegisteredAgainst(Nullable<int> experianNonLimitedResultCcjDetailsId)
        {
            var experianNonLimitedResultCcjDetailsIdParameter = experianNonLimitedResultCcjDetailsId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", experianNonLimitedResultCcjDetailsId) :
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetNonLimitedCcjDetailRegisteredAgainst", experianNonLimitedResultCcjDetailsIdParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedCcjDetails_Result> GetNonLimitedCcjDetails(Nullable<int> experianNonLimitedResultId)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedCcjDetails_Result>("GetNonLimitedCcjDetails", experianNonLimitedResultIdParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedCcjDetailTradingNames_Result> GetNonLimitedCcjDetailTradingNames(Nullable<int> experianNonLimitedResultCcjDetailsId)
        {
            var experianNonLimitedResultCcjDetailsIdParameter = experianNonLimitedResultCcjDetailsId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", experianNonLimitedResultCcjDetailsId) :
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedCcjDetailTradingNames_Result>("GetNonLimitedCcjDetailTradingNames", experianNonLimitedResultCcjDetailsIdParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedCompanyBasicDetails_Result> GetNonLimitedCompanyBasicDetails(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedCompanyBasicDetails_Result>("GetNonLimitedCompanyBasicDetails", refNumberParameter);
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetNonLimitedCompanyCreationTime(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetNonLimitedCompanyCreationTime", refNumberParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedCompanyScoreHistory_Result> GetNonLimitedCompanyScoreHistory(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedCompanyScoreHistory_Result>("GetNonLimitedCompanyScoreHistory", refNumberParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedDataForCompanyScore_Result> GetNonLimitedDataForCompanyScore(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedDataForCompanyScore_Result>("GetNonLimitedDataForCompanyScore", refNumberParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedDataForCreditBureau_Result> GetNonLimitedDataForCreditBureau(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedDataForCreditBureau_Result>("GetNonLimitedDataForCreditBureau", refNumberParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedDataForLoanDateScoreReport_Result> GetNonLimitedDataForLoanDateScoreReport(string refNumber)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedDataForLoanDateScoreReport_Result>("GetNonLimitedDataForLoanDateScoreReport", refNumberParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedPaymentPerformanceDetails_Result> GetNonLimitedPaymentPerformanceDetails(Nullable<int> experianNonLimitedResultId)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedPaymentPerformanceDetails_Result>("GetNonLimitedPaymentPerformanceDetails", experianNonLimitedResultIdParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedPreviousSearches_Result> GetNonLimitedPreviousSearches(Nullable<int> experianNonLimitedResultId)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedPreviousSearches_Result>("GetNonLimitedPreviousSearches", experianNonLimitedResultIdParameter);
        }
    
        public virtual ObjectResult<GetNonLimitedSicCodes_Result> GetNonLimitedSicCodes(Nullable<int> experianNonLimitedResultId)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNonLimitedSicCodes_Result>("GetNonLimitedSicCodes", experianNonLimitedResultIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetNumberOfDefaultAccounts(Nullable<int> customerId, Nullable<int> months, Nullable<int> amount)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var monthsParameter = months.HasValue ?
                new ObjectParameter("Months", months) :
                new ObjectParameter("Months", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetNumberOfDefaultAccounts", customerIdParameter, monthsParameter, amountParameter);
        }
    
        public virtual ObjectResult<GetPacnetAgentConfigs_Result> GetPacnetAgentConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPacnetAgentConfigs_Result>("GetPacnetAgentConfigs");
        }
    
        public virtual ObjectResult<GetPacnetTransactions_Result> GetPacnetTransactions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPacnetTransactions_Result>("GetPacnetTransactions");
        }
    
        public virtual ObjectResult<GetPayPalAggregations_Result> GetPayPalAggregations(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPayPalAggregations_Result>("GetPayPalAggregations", customerIdParameter);
        }
    
        public virtual int GetPayPalExpensesDetails(Nullable<int> marketPlaceId)
        {
            var marketPlaceIdParameter = marketPlaceId.HasValue ?
                new ObjectParameter("marketPlaceId", marketPlaceId) :
                new ObjectParameter("marketPlaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPayPalExpensesDetails", marketPlaceIdParameter);
        }
    
        public virtual int GetPayPalIncomeDetails(Nullable<int> marketPlaceId)
        {
            var marketPlaceIdParameter = marketPlaceId.HasValue ?
                new ObjectParameter("marketPlaceId", marketPlaceId) :
                new ObjectParameter("marketPlaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPayPalIncomeDetails", marketPlaceIdParameter);
        }
    
        public virtual int GetPayPalTotalExpensesByMarketplace(Nullable<int> marketplaceId)
        {
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("marketplaceId", marketplaceId) :
                new ObjectParameter("marketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPayPalTotalExpensesByMarketplace", marketplaceIdParameter);
        }
    
        public virtual int GetPayPalTotalIncomeByMarketplace(Nullable<int> marketplaceId)
        {
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("marketplaceId", marketplaceId) :
                new ObjectParameter("marketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPayPalTotalIncomeByMarketplace", marketplaceIdParameter);
        }
    
        public virtual int GetPayPalTotalTransactionsByMarketplace(Nullable<int> marketplaceId)
        {
            var marketplaceIdParameter = marketplaceId.HasValue ?
                new ObjectParameter("marketplaceId", marketplaceId) :
                new ObjectParameter("marketplaceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPayPalTotalTransactionsByMarketplace", marketplaceIdParameter);
        }
    
        public virtual ObjectResult<GetPerformencePerMedalReport_Result> GetPerformencePerMedalReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPerformencePerMedalReport_Result>("GetPerformencePerMedalReport", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<GetPerformencePerUnderwriterReport_Result> GetPerformencePerUnderwriterReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("dateStart", dateStart) :
                new ObjectParameter("dateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("dateEnd", dateEnd) :
                new ObjectParameter("dateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPerformencePerUnderwriterReport_Result>("GetPerformencePerUnderwriterReport", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<GetPersonalDataForMortgages_Result> GetPersonalDataForMortgages(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonalDataForMortgages_Result>("GetPersonalDataForMortgages", customerIdParameter);
        }
    
        public virtual ObjectResult<GetPersonalInfo_Result> GetPersonalInfo(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonalInfo_Result>("GetPersonalInfo", customerIdParameter);
        }
    
        public virtual ObjectResult<GetPersonalInfoForBankBasedApproval_Result> GetPersonalInfoForBankBasedApproval(Nullable<int> customerId, Nullable<int> numOfMonthsToLookForDefaults, Nullable<System.DateTime> startTimeForVatCheck, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var numOfMonthsToLookForDefaultsParameter = numOfMonthsToLookForDefaults.HasValue ?
                new ObjectParameter("NumOfMonthsToLookForDefaults", numOfMonthsToLookForDefaults) :
                new ObjectParameter("NumOfMonthsToLookForDefaults", typeof(int));
    
            var startTimeForVatCheckParameter = startTimeForVatCheck.HasValue ?
                new ObjectParameter("StartTimeForVatCheck", startTimeForVatCheck) :
                new ObjectParameter("StartTimeForVatCheck", typeof(System.DateTime));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonalInfoForBankBasedApproval_Result>("GetPersonalInfoForBankBasedApproval", customerIdParameter, numOfMonthsToLookForDefaultsParameter, startTimeForVatCheckParameter, nowParameter);
        }
    
        public virtual ObjectResult<GetPersonalInfoForConsumerCheck_Result> GetPersonalInfoForConsumerCheck(Nullable<int> customerId, Nullable<int> directorId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPersonalInfoForConsumerCheck_Result>("GetPersonalInfoForConsumerCheck", customerIdParameter, directorIdParameter);
        }
    
        public virtual ObjectResult<string> GetPrevBwaResult(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPrevBwaResult", customerIdParameter);
        }
    
        public virtual int GetPricingModelConfigsForScenario(string scenarioName)
        {
            var scenarioNameParameter = scenarioName != null ?
                new ObjectParameter("ScenarioName", scenarioName) :
                new ObjectParameter("ScenarioName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPricingModelConfigsForScenario", scenarioNameParameter);
        }
    
        public virtual ObjectResult<string> GetPricingModelScenarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPricingModelScenarios");
        }
    
        public virtual ObjectResult<Nullable<int>> GetReApprovalConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetReApprovalConfigs");
        }
    
        public virtual ObjectResult<Nullable<int>> GetRoleId(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetRoleId", nameParameter);
        }
    
        public virtual ObjectResult<GetScoreCardData_Result> GetScoreCardData(Nullable<int> customerId, Nullable<System.DateTime> today)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var todayParameter = today.HasValue ?
                new ObjectParameter("Today", today) :
                new ObjectParameter("Today", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScoreCardData_Result>("GetScoreCardData", customerIdParameter, todayParameter);
        }
    
        public virtual int GetSecondStepCustomers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<bool> includeTest)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var includeTestParameter = includeTest.HasValue ?
                new ObjectParameter("IncludeTest", includeTest) :
                new ObjectParameter("IncludeTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSecondStepCustomers", dateStartParameter, dateEndParameter, includeTestParameter);
        }
    
        public virtual ObjectResult<GetServiceLogNonLimitedEntries_Result> GetServiceLogNonLimitedEntries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServiceLogNonLimitedEntries_Result>("GetServiceLogNonLimitedEntries");
        }
    
        public virtual ObjectResult<string> GetServiceLogNonLimitedEntry(Nullable<long> serviceLogId)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetServiceLogNonLimitedEntry", serviceLogIdParameter);
        }
    
        public virtual ObjectResult<string> GetServiceLogRequestData(Nullable<long> serviceLogId)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetServiceLogRequestData", serviceLogIdParameter);
        }
    
        public virtual ObjectResult<string> GetSingleConfig(string configName)
        {
            var configNameParameter = configName != null ?
                new ObjectParameter("ConfigName", configName) :
                new ObjectParameter("ConfigName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSingleConfig", configNameParameter);
        }
    
        public virtual ObjectResult<string> GetSpecialPayers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSpecialPayers");
        }
    
        public virtual ObjectResult<GetTwilioConfigs_Result> GetTwilioConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTwilioConfigs_Result>("GetTwilioConfigs");
        }
    
        public virtual ObjectResult<Nullable<int>> GetUserIdByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetUserIdByName", nameParameter);
        }
    
        public virtual ObjectResult<GetUserManagementConfiguration_Result> GetUserManagementConfiguration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserManagementConfiguration_Result>("GetUserManagementConfiguration");
        }
    
        public virtual ObjectResult<GetWizardConfigs_Result> GetWizardConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWizardConfigs_Result>("GetWizardConfigs");
        }
    
        public virtual ObjectResult<GetYodleeAccount_Result> GetYodleeAccount(Nullable<bool> isCustomerId, Nullable<int> id)
        {
            var isCustomerIdParameter = isCustomerId.HasValue ?
                new ObjectParameter("IsCustomerId", isCustomerId) :
                new ObjectParameter("IsCustomerId", typeof(bool));
    
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetYodleeAccount_Result>("GetYodleeAccount", isCustomerIdParameter, idParameter);
        }
    
        public virtual ObjectResult<GetYodleeAccounts_Result> GetYodleeAccounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetYodleeAccounts_Result>("GetYodleeAccounts");
        }
    
        public virtual ObjectResult<GetYodleeBanks_Result> GetYodleeBanks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetYodleeBanks_Result>("GetYodleeBanks");
        }
    
        public virtual ObjectResult<Nullable<int>> GetYodleeMps(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetYodleeMps", customerIdParameter);
        }
    
        public virtual ObjectResult<string> GetYodleePayersInfo(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetYodleePayersInfo", customerIdParameter);
        }
    
        public virtual ObjectResult<GetZooplaStrEstimates_Result> GetZooplaStrEstimates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetZooplaStrEstimates_Result>("GetZooplaStrEstimates");
        }
    
        public virtual int Greeting_Mail_Sent(Nullable<int> userId, Nullable<int> greetingMailSent, Nullable<System.DateTime> now)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var greetingMailSentParameter = greetingMailSent.HasValue ?
                new ObjectParameter("GreetingMailSent", greetingMailSent) :
                new ObjectParameter("GreetingMailSent", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Greeting_Mail_Sent", userIdParameter, greetingMailSentParameter, nowParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> InitCreatePasswordToken(Nullable<System.Guid> tokenID, string email, Nullable<System.DateTime> now)
        {
            var tokenIDParameter = tokenID.HasValue ?
                new ObjectParameter("TokenID", tokenID) :
                new ObjectParameter("TokenID", typeof(System.Guid));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("InitCreatePasswordToken", tokenIDParameter, emailParameter, nowParameter);
        }
    
        public virtual int InitCreatePasswordTokenByUserID(Nullable<System.Guid> tokenID, Nullable<int> userID, Nullable<System.DateTime> now)
        {
            var tokenIDParameter = tokenID.HasValue ?
                new ObjectParameter("TokenID", tokenID) :
                new ObjectParameter("TokenID", typeof(System.Guid));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InitCreatePasswordTokenByUserID", tokenIDParameter, userIDParameter, nowParameter);
        }
    
        public virtual int InsertAutoresponderLog(string email, string name)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertAutoresponderLog", emailParameter, nameParameter);
        }
    
        public virtual int InsertExperianAccount(Nullable<long> serviceLogId, Nullable<long> customerId, string accountType, Nullable<System.DateTime> defMonth, Nullable<int> balance, Nullable<int> currentDefBalance)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var defMonthParameter = defMonth.HasValue ?
                new ObjectParameter("DefMonth", defMonth) :
                new ObjectParameter("DefMonth", typeof(System.DateTime));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(int));
    
            var currentDefBalanceParameter = currentDefBalance.HasValue ?
                new ObjectParameter("CurrentDefBalance", currentDefBalance) :
                new ObjectParameter("CurrentDefBalance", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertExperianAccount", serviceLogIdParameter, customerIdParameter, accountTypeParameter, defMonthParameter, balanceParameter, currentDefBalanceParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertNonLimitedResult(string refNumber, Nullable<int> serviceLogId, Nullable<System.DateTime> created, string businessName, string address1, string address2, string address3, string address4, string address5, string postcode, string telephoneNumber, string principalActivities, Nullable<System.DateTime> earliestKnownDate, Nullable<System.DateTime> dateOwnershipCommenced, Nullable<System.DateTime> incorporationDate, Nullable<System.DateTime> dateOwnershipCeased, Nullable<System.DateTime> lastUpdateDate, Nullable<int> bankruptcyCountDuringOwnership, Nullable<int> ageOfMostRecentBankruptcyDuringOwnershipMonths, Nullable<int> associatedBankruptcyCountDuringOwnership, Nullable<int> ageOfMostRecentAssociatedBankruptcyDuringOwnershipMonths, Nullable<int> ageOfMostRecentJudgmentDuringOwnershipMonths, Nullable<int> totalJudgmentCountLast12Months, Nullable<int> totalJudgmentValueLast12Months, Nullable<int> totalJudgmentCountLast13To24Months, Nullable<int> totalJudgmentValueLast13To24Months, Nullable<int> valueOfMostRecentAssociatedJudgmentDuringOwnership, Nullable<int> totalAssociatedJudgmentCountLast12Months, Nullable<int> totalAssociatedJudgmentValueLast12Months, Nullable<int> totalAssociatedJudgmentCountLast13To24Months, Nullable<int> totalAssociatedJudgmentValueLast13To24Months, Nullable<int> totalJudgmentCountLast24Months, Nullable<int> totalAssociatedJudgmentCountLast24Months, Nullable<int> totalJudgmentValueLast24Months, Nullable<int> totalAssociatedJudgmentValueLast24Months, string supplierName, string fraudCategory, string fraudCategoryDesc, Nullable<int> numberOfAccountsPlacedForCollection, Nullable<int> valueOfAccountsPlacedForCollection, Nullable<int> numberOfAccountsPlacedForCollectionLast2Years, Nullable<int> averageDaysBeyondTermsFor0To100, Nullable<int> averageDaysBeyondTermsFor101To1000, Nullable<int> averageDaysBeyondTermsFor1001To10000, Nullable<int> averageDaysBeyondTermsForOver10000, Nullable<int> averageDaysBeyondTermsForLast3MonthsOfDataReturned, Nullable<int> averageDaysBeyondTermsForLast6MonthsOfDataReturned, Nullable<int> averageDaysBeyondTermsForLast12MonthsOfDataReturned, Nullable<int> currentAverageDebt, Nullable<int> averageDebtLast3Months, Nullable<int> averageDebtLast12Months, string telephoneNumberDN36, Nullable<int> riskScore, string searchType, string searchTypeDesc, Nullable<int> commercialDelphiScore, string creditRating, string creditLimit, Nullable<decimal> probabilityOfDefaultScore, string stabilityOdds, string riskBand, Nullable<int> numberOfProprietorsSearched, Nullable<int> numberOfProprietorsFound, string errors)
        {
            var refNumberParameter = refNumber != null ?
                new ObjectParameter("RefNumber", refNumber) :
                new ObjectParameter("RefNumber", typeof(string));
    
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(int));
    
            var createdParameter = created.HasValue ?
                new ObjectParameter("Created", created) :
                new ObjectParameter("Created", typeof(System.DateTime));
    
            var businessNameParameter = businessName != null ?
                new ObjectParameter("BusinessName", businessName) :
                new ObjectParameter("BusinessName", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var address3Parameter = address3 != null ?
                new ObjectParameter("Address3", address3) :
                new ObjectParameter("Address3", typeof(string));
    
            var address4Parameter = address4 != null ?
                new ObjectParameter("Address4", address4) :
                new ObjectParameter("Address4", typeof(string));
    
            var address5Parameter = address5 != null ?
                new ObjectParameter("Address5", address5) :
                new ObjectParameter("Address5", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var telephoneNumberParameter = telephoneNumber != null ?
                new ObjectParameter("TelephoneNumber", telephoneNumber) :
                new ObjectParameter("TelephoneNumber", typeof(string));
    
            var principalActivitiesParameter = principalActivities != null ?
                new ObjectParameter("PrincipalActivities", principalActivities) :
                new ObjectParameter("PrincipalActivities", typeof(string));
    
            var earliestKnownDateParameter = earliestKnownDate.HasValue ?
                new ObjectParameter("EarliestKnownDate", earliestKnownDate) :
                new ObjectParameter("EarliestKnownDate", typeof(System.DateTime));
    
            var dateOwnershipCommencedParameter = dateOwnershipCommenced.HasValue ?
                new ObjectParameter("DateOwnershipCommenced", dateOwnershipCommenced) :
                new ObjectParameter("DateOwnershipCommenced", typeof(System.DateTime));
    
            var incorporationDateParameter = incorporationDate.HasValue ?
                new ObjectParameter("IncorporationDate", incorporationDate) :
                new ObjectParameter("IncorporationDate", typeof(System.DateTime));
    
            var dateOwnershipCeasedParameter = dateOwnershipCeased.HasValue ?
                new ObjectParameter("DateOwnershipCeased", dateOwnershipCeased) :
                new ObjectParameter("DateOwnershipCeased", typeof(System.DateTime));
    
            var lastUpdateDateParameter = lastUpdateDate.HasValue ?
                new ObjectParameter("LastUpdateDate", lastUpdateDate) :
                new ObjectParameter("LastUpdateDate", typeof(System.DateTime));
    
            var bankruptcyCountDuringOwnershipParameter = bankruptcyCountDuringOwnership.HasValue ?
                new ObjectParameter("BankruptcyCountDuringOwnership", bankruptcyCountDuringOwnership) :
                new ObjectParameter("BankruptcyCountDuringOwnership", typeof(int));
    
            var ageOfMostRecentBankruptcyDuringOwnershipMonthsParameter = ageOfMostRecentBankruptcyDuringOwnershipMonths.HasValue ?
                new ObjectParameter("AgeOfMostRecentBankruptcyDuringOwnershipMonths", ageOfMostRecentBankruptcyDuringOwnershipMonths) :
                new ObjectParameter("AgeOfMostRecentBankruptcyDuringOwnershipMonths", typeof(int));
    
            var associatedBankruptcyCountDuringOwnershipParameter = associatedBankruptcyCountDuringOwnership.HasValue ?
                new ObjectParameter("AssociatedBankruptcyCountDuringOwnership", associatedBankruptcyCountDuringOwnership) :
                new ObjectParameter("AssociatedBankruptcyCountDuringOwnership", typeof(int));
    
            var ageOfMostRecentAssociatedBankruptcyDuringOwnershipMonthsParameter = ageOfMostRecentAssociatedBankruptcyDuringOwnershipMonths.HasValue ?
                new ObjectParameter("AgeOfMostRecentAssociatedBankruptcyDuringOwnershipMonths", ageOfMostRecentAssociatedBankruptcyDuringOwnershipMonths) :
                new ObjectParameter("AgeOfMostRecentAssociatedBankruptcyDuringOwnershipMonths", typeof(int));
    
            var ageOfMostRecentJudgmentDuringOwnershipMonthsParameter = ageOfMostRecentJudgmentDuringOwnershipMonths.HasValue ?
                new ObjectParameter("AgeOfMostRecentJudgmentDuringOwnershipMonths", ageOfMostRecentJudgmentDuringOwnershipMonths) :
                new ObjectParameter("AgeOfMostRecentJudgmentDuringOwnershipMonths", typeof(int));
    
            var totalJudgmentCountLast12MonthsParameter = totalJudgmentCountLast12Months.HasValue ?
                new ObjectParameter("TotalJudgmentCountLast12Months", totalJudgmentCountLast12Months) :
                new ObjectParameter("TotalJudgmentCountLast12Months", typeof(int));
    
            var totalJudgmentValueLast12MonthsParameter = totalJudgmentValueLast12Months.HasValue ?
                new ObjectParameter("TotalJudgmentValueLast12Months", totalJudgmentValueLast12Months) :
                new ObjectParameter("TotalJudgmentValueLast12Months", typeof(int));
    
            var totalJudgmentCountLast13To24MonthsParameter = totalJudgmentCountLast13To24Months.HasValue ?
                new ObjectParameter("TotalJudgmentCountLast13To24Months", totalJudgmentCountLast13To24Months) :
                new ObjectParameter("TotalJudgmentCountLast13To24Months", typeof(int));
    
            var totalJudgmentValueLast13To24MonthsParameter = totalJudgmentValueLast13To24Months.HasValue ?
                new ObjectParameter("TotalJudgmentValueLast13To24Months", totalJudgmentValueLast13To24Months) :
                new ObjectParameter("TotalJudgmentValueLast13To24Months", typeof(int));
    
            var valueOfMostRecentAssociatedJudgmentDuringOwnershipParameter = valueOfMostRecentAssociatedJudgmentDuringOwnership.HasValue ?
                new ObjectParameter("ValueOfMostRecentAssociatedJudgmentDuringOwnership", valueOfMostRecentAssociatedJudgmentDuringOwnership) :
                new ObjectParameter("ValueOfMostRecentAssociatedJudgmentDuringOwnership", typeof(int));
    
            var totalAssociatedJudgmentCountLast12MonthsParameter = totalAssociatedJudgmentCountLast12Months.HasValue ?
                new ObjectParameter("TotalAssociatedJudgmentCountLast12Months", totalAssociatedJudgmentCountLast12Months) :
                new ObjectParameter("TotalAssociatedJudgmentCountLast12Months", typeof(int));
    
            var totalAssociatedJudgmentValueLast12MonthsParameter = totalAssociatedJudgmentValueLast12Months.HasValue ?
                new ObjectParameter("TotalAssociatedJudgmentValueLast12Months", totalAssociatedJudgmentValueLast12Months) :
                new ObjectParameter("TotalAssociatedJudgmentValueLast12Months", typeof(int));
    
            var totalAssociatedJudgmentCountLast13To24MonthsParameter = totalAssociatedJudgmentCountLast13To24Months.HasValue ?
                new ObjectParameter("TotalAssociatedJudgmentCountLast13To24Months", totalAssociatedJudgmentCountLast13To24Months) :
                new ObjectParameter("TotalAssociatedJudgmentCountLast13To24Months", typeof(int));
    
            var totalAssociatedJudgmentValueLast13To24MonthsParameter = totalAssociatedJudgmentValueLast13To24Months.HasValue ?
                new ObjectParameter("TotalAssociatedJudgmentValueLast13To24Months", totalAssociatedJudgmentValueLast13To24Months) :
                new ObjectParameter("TotalAssociatedJudgmentValueLast13To24Months", typeof(int));
    
            var totalJudgmentCountLast24MonthsParameter = totalJudgmentCountLast24Months.HasValue ?
                new ObjectParameter("TotalJudgmentCountLast24Months", totalJudgmentCountLast24Months) :
                new ObjectParameter("TotalJudgmentCountLast24Months", typeof(int));
    
            var totalAssociatedJudgmentCountLast24MonthsParameter = totalAssociatedJudgmentCountLast24Months.HasValue ?
                new ObjectParameter("TotalAssociatedJudgmentCountLast24Months", totalAssociatedJudgmentCountLast24Months) :
                new ObjectParameter("TotalAssociatedJudgmentCountLast24Months", typeof(int));
    
            var totalJudgmentValueLast24MonthsParameter = totalJudgmentValueLast24Months.HasValue ?
                new ObjectParameter("TotalJudgmentValueLast24Months", totalJudgmentValueLast24Months) :
                new ObjectParameter("TotalJudgmentValueLast24Months", typeof(int));
    
            var totalAssociatedJudgmentValueLast24MonthsParameter = totalAssociatedJudgmentValueLast24Months.HasValue ?
                new ObjectParameter("TotalAssociatedJudgmentValueLast24Months", totalAssociatedJudgmentValueLast24Months) :
                new ObjectParameter("TotalAssociatedJudgmentValueLast24Months", typeof(int));
    
            var supplierNameParameter = supplierName != null ?
                new ObjectParameter("SupplierName", supplierName) :
                new ObjectParameter("SupplierName", typeof(string));
    
            var fraudCategoryParameter = fraudCategory != null ?
                new ObjectParameter("FraudCategory", fraudCategory) :
                new ObjectParameter("FraudCategory", typeof(string));
    
            var fraudCategoryDescParameter = fraudCategoryDesc != null ?
                new ObjectParameter("FraudCategoryDesc", fraudCategoryDesc) :
                new ObjectParameter("FraudCategoryDesc", typeof(string));
    
            var numberOfAccountsPlacedForCollectionParameter = numberOfAccountsPlacedForCollection.HasValue ?
                new ObjectParameter("NumberOfAccountsPlacedForCollection", numberOfAccountsPlacedForCollection) :
                new ObjectParameter("NumberOfAccountsPlacedForCollection", typeof(int));
    
            var valueOfAccountsPlacedForCollectionParameter = valueOfAccountsPlacedForCollection.HasValue ?
                new ObjectParameter("ValueOfAccountsPlacedForCollection", valueOfAccountsPlacedForCollection) :
                new ObjectParameter("ValueOfAccountsPlacedForCollection", typeof(int));
    
            var numberOfAccountsPlacedForCollectionLast2YearsParameter = numberOfAccountsPlacedForCollectionLast2Years.HasValue ?
                new ObjectParameter("NumberOfAccountsPlacedForCollectionLast2Years", numberOfAccountsPlacedForCollectionLast2Years) :
                new ObjectParameter("NumberOfAccountsPlacedForCollectionLast2Years", typeof(int));
    
            var averageDaysBeyondTermsFor0To100Parameter = averageDaysBeyondTermsFor0To100.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsFor0To100", averageDaysBeyondTermsFor0To100) :
                new ObjectParameter("AverageDaysBeyondTermsFor0To100", typeof(int));
    
            var averageDaysBeyondTermsFor101To1000Parameter = averageDaysBeyondTermsFor101To1000.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsFor101To1000", averageDaysBeyondTermsFor101To1000) :
                new ObjectParameter("AverageDaysBeyondTermsFor101To1000", typeof(int));
    
            var averageDaysBeyondTermsFor1001To10000Parameter = averageDaysBeyondTermsFor1001To10000.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsFor1001To10000", averageDaysBeyondTermsFor1001To10000) :
                new ObjectParameter("AverageDaysBeyondTermsFor1001To10000", typeof(int));
    
            var averageDaysBeyondTermsForOver10000Parameter = averageDaysBeyondTermsForOver10000.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsForOver10000", averageDaysBeyondTermsForOver10000) :
                new ObjectParameter("AverageDaysBeyondTermsForOver10000", typeof(int));
    
            var averageDaysBeyondTermsForLast3MonthsOfDataReturnedParameter = averageDaysBeyondTermsForLast3MonthsOfDataReturned.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsForLast3MonthsOfDataReturned", averageDaysBeyondTermsForLast3MonthsOfDataReturned) :
                new ObjectParameter("AverageDaysBeyondTermsForLast3MonthsOfDataReturned", typeof(int));
    
            var averageDaysBeyondTermsForLast6MonthsOfDataReturnedParameter = averageDaysBeyondTermsForLast6MonthsOfDataReturned.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsForLast6MonthsOfDataReturned", averageDaysBeyondTermsForLast6MonthsOfDataReturned) :
                new ObjectParameter("AverageDaysBeyondTermsForLast6MonthsOfDataReturned", typeof(int));
    
            var averageDaysBeyondTermsForLast12MonthsOfDataReturnedParameter = averageDaysBeyondTermsForLast12MonthsOfDataReturned.HasValue ?
                new ObjectParameter("AverageDaysBeyondTermsForLast12MonthsOfDataReturned", averageDaysBeyondTermsForLast12MonthsOfDataReturned) :
                new ObjectParameter("AverageDaysBeyondTermsForLast12MonthsOfDataReturned", typeof(int));
    
            var currentAverageDebtParameter = currentAverageDebt.HasValue ?
                new ObjectParameter("CurrentAverageDebt", currentAverageDebt) :
                new ObjectParameter("CurrentAverageDebt", typeof(int));
    
            var averageDebtLast3MonthsParameter = averageDebtLast3Months.HasValue ?
                new ObjectParameter("AverageDebtLast3Months", averageDebtLast3Months) :
                new ObjectParameter("AverageDebtLast3Months", typeof(int));
    
            var averageDebtLast12MonthsParameter = averageDebtLast12Months.HasValue ?
                new ObjectParameter("AverageDebtLast12Months", averageDebtLast12Months) :
                new ObjectParameter("AverageDebtLast12Months", typeof(int));
    
            var telephoneNumberDN36Parameter = telephoneNumberDN36 != null ?
                new ObjectParameter("TelephoneNumberDN36", telephoneNumberDN36) :
                new ObjectParameter("TelephoneNumberDN36", typeof(string));
    
            var riskScoreParameter = riskScore.HasValue ?
                new ObjectParameter("RiskScore", riskScore) :
                new ObjectParameter("RiskScore", typeof(int));
    
            var searchTypeParameter = searchType != null ?
                new ObjectParameter("SearchType", searchType) :
                new ObjectParameter("SearchType", typeof(string));
    
            var searchTypeDescParameter = searchTypeDesc != null ?
                new ObjectParameter("SearchTypeDesc", searchTypeDesc) :
                new ObjectParameter("SearchTypeDesc", typeof(string));
    
            var commercialDelphiScoreParameter = commercialDelphiScore.HasValue ?
                new ObjectParameter("CommercialDelphiScore", commercialDelphiScore) :
                new ObjectParameter("CommercialDelphiScore", typeof(int));
    
            var creditRatingParameter = creditRating != null ?
                new ObjectParameter("CreditRating", creditRating) :
                new ObjectParameter("CreditRating", typeof(string));
    
            var creditLimitParameter = creditLimit != null ?
                new ObjectParameter("CreditLimit", creditLimit) :
                new ObjectParameter("CreditLimit", typeof(string));
    
            var probabilityOfDefaultScoreParameter = probabilityOfDefaultScore.HasValue ?
                new ObjectParameter("ProbabilityOfDefaultScore", probabilityOfDefaultScore) :
                new ObjectParameter("ProbabilityOfDefaultScore", typeof(decimal));
    
            var stabilityOddsParameter = stabilityOdds != null ?
                new ObjectParameter("StabilityOdds", stabilityOdds) :
                new ObjectParameter("StabilityOdds", typeof(string));
    
            var riskBandParameter = riskBand != null ?
                new ObjectParameter("RiskBand", riskBand) :
                new ObjectParameter("RiskBand", typeof(string));
    
            var numberOfProprietorsSearchedParameter = numberOfProprietorsSearched.HasValue ?
                new ObjectParameter("NumberOfProprietorsSearched", numberOfProprietorsSearched) :
                new ObjectParameter("NumberOfProprietorsSearched", typeof(int));
    
            var numberOfProprietorsFoundParameter = numberOfProprietorsFound.HasValue ?
                new ObjectParameter("NumberOfProprietorsFound", numberOfProprietorsFound) :
                new ObjectParameter("NumberOfProprietorsFound", typeof(int));
    
            var errorsParameter = errors != null ?
                new ObjectParameter("Errors", errors) :
                new ObjectParameter("Errors", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertNonLimitedResult", refNumberParameter, serviceLogIdParameter, createdParameter, businessNameParameter, address1Parameter, address2Parameter, address3Parameter, address4Parameter, address5Parameter, postcodeParameter, telephoneNumberParameter, principalActivitiesParameter, earliestKnownDateParameter, dateOwnershipCommencedParameter, incorporationDateParameter, dateOwnershipCeasedParameter, lastUpdateDateParameter, bankruptcyCountDuringOwnershipParameter, ageOfMostRecentBankruptcyDuringOwnershipMonthsParameter, associatedBankruptcyCountDuringOwnershipParameter, ageOfMostRecentAssociatedBankruptcyDuringOwnershipMonthsParameter, ageOfMostRecentJudgmentDuringOwnershipMonthsParameter, totalJudgmentCountLast12MonthsParameter, totalJudgmentValueLast12MonthsParameter, totalJudgmentCountLast13To24MonthsParameter, totalJudgmentValueLast13To24MonthsParameter, valueOfMostRecentAssociatedJudgmentDuringOwnershipParameter, totalAssociatedJudgmentCountLast12MonthsParameter, totalAssociatedJudgmentValueLast12MonthsParameter, totalAssociatedJudgmentCountLast13To24MonthsParameter, totalAssociatedJudgmentValueLast13To24MonthsParameter, totalJudgmentCountLast24MonthsParameter, totalAssociatedJudgmentCountLast24MonthsParameter, totalJudgmentValueLast24MonthsParameter, totalAssociatedJudgmentValueLast24MonthsParameter, supplierNameParameter, fraudCategoryParameter, fraudCategoryDescParameter, numberOfAccountsPlacedForCollectionParameter, valueOfAccountsPlacedForCollectionParameter, numberOfAccountsPlacedForCollectionLast2YearsParameter, averageDaysBeyondTermsFor0To100Parameter, averageDaysBeyondTermsFor101To1000Parameter, averageDaysBeyondTermsFor1001To10000Parameter, averageDaysBeyondTermsForOver10000Parameter, averageDaysBeyondTermsForLast3MonthsOfDataReturnedParameter, averageDaysBeyondTermsForLast6MonthsOfDataReturnedParameter, averageDaysBeyondTermsForLast12MonthsOfDataReturnedParameter, currentAverageDebtParameter, averageDebtLast3MonthsParameter, averageDebtLast12MonthsParameter, telephoneNumberDN36Parameter, riskScoreParameter, searchTypeParameter, searchTypeDescParameter, commercialDelphiScoreParameter, creditRatingParameter, creditLimitParameter, probabilityOfDefaultScoreParameter, stabilityOddsParameter, riskBandParameter, numberOfProprietorsSearchedParameter, numberOfProprietorsFoundParameter, errorsParameter);
        }
    
        public virtual int InsertNonLimitedResultBankruptcyDetails(Nullable<int> experianNonLimitedResultId, string bankruptcyName, string bankruptcyAddr1, string bankruptcyAddr2, string bankruptcyAddr3, string bankruptcyAddr4, string bankruptcyAddr5, string postCode, Nullable<System.DateTime> gazetteDate, string bankruptcyType, string bankruptcyTypeDesc)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            var bankruptcyNameParameter = bankruptcyName != null ?
                new ObjectParameter("BankruptcyName", bankruptcyName) :
                new ObjectParameter("BankruptcyName", typeof(string));
    
            var bankruptcyAddr1Parameter = bankruptcyAddr1 != null ?
                new ObjectParameter("BankruptcyAddr1", bankruptcyAddr1) :
                new ObjectParameter("BankruptcyAddr1", typeof(string));
    
            var bankruptcyAddr2Parameter = bankruptcyAddr2 != null ?
                new ObjectParameter("BankruptcyAddr2", bankruptcyAddr2) :
                new ObjectParameter("BankruptcyAddr2", typeof(string));
    
            var bankruptcyAddr3Parameter = bankruptcyAddr3 != null ?
                new ObjectParameter("BankruptcyAddr3", bankruptcyAddr3) :
                new ObjectParameter("BankruptcyAddr3", typeof(string));
    
            var bankruptcyAddr4Parameter = bankruptcyAddr4 != null ?
                new ObjectParameter("BankruptcyAddr4", bankruptcyAddr4) :
                new ObjectParameter("BankruptcyAddr4", typeof(string));
    
            var bankruptcyAddr5Parameter = bankruptcyAddr5 != null ?
                new ObjectParameter("BankruptcyAddr5", bankruptcyAddr5) :
                new ObjectParameter("BankruptcyAddr5", typeof(string));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            var gazetteDateParameter = gazetteDate.HasValue ?
                new ObjectParameter("GazetteDate", gazetteDate) :
                new ObjectParameter("GazetteDate", typeof(System.DateTime));
    
            var bankruptcyTypeParameter = bankruptcyType != null ?
                new ObjectParameter("BankruptcyType", bankruptcyType) :
                new ObjectParameter("BankruptcyType", typeof(string));
    
            var bankruptcyTypeDescParameter = bankruptcyTypeDesc != null ?
                new ObjectParameter("BankruptcyTypeDesc", bankruptcyTypeDesc) :
                new ObjectParameter("BankruptcyTypeDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultBankruptcyDetails", experianNonLimitedResultIdParameter, bankruptcyNameParameter, bankruptcyAddr1Parameter, bankruptcyAddr2Parameter, bankruptcyAddr3Parameter, bankruptcyAddr4Parameter, bankruptcyAddr5Parameter, postCodeParameter, gazetteDateParameter, bankruptcyTypeParameter, bankruptcyTypeDescParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> InsertNonLimitedResultCcjDetails(Nullable<int> experianNonLimitedResultId, string recordType, string recordTypeFullName, Nullable<System.DateTime> judgementDate, string satisfactionFlag, string satisfactionFlagDesc, Nullable<System.DateTime> satisfactionDate, string judgmentType, string judgmentTypeDesc, Nullable<int> judgmentAmount, string court, string caseNumber, string numberOfJudgmentNames, string numberOfTradingNames, string lengthOfJudgmentName, string lengthOfTradingName, string lengthOfJudgmentAddress, string judgementAddr1, string judgementAddr2, string judgementAddr3, string judgementAddr4, string judgementAddr5, string postCode)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            var recordTypeParameter = recordType != null ?
                new ObjectParameter("RecordType", recordType) :
                new ObjectParameter("RecordType", typeof(string));
    
            var recordTypeFullNameParameter = recordTypeFullName != null ?
                new ObjectParameter("RecordTypeFullName", recordTypeFullName) :
                new ObjectParameter("RecordTypeFullName", typeof(string));
    
            var judgementDateParameter = judgementDate.HasValue ?
                new ObjectParameter("JudgementDate", judgementDate) :
                new ObjectParameter("JudgementDate", typeof(System.DateTime));
    
            var satisfactionFlagParameter = satisfactionFlag != null ?
                new ObjectParameter("SatisfactionFlag", satisfactionFlag) :
                new ObjectParameter("SatisfactionFlag", typeof(string));
    
            var satisfactionFlagDescParameter = satisfactionFlagDesc != null ?
                new ObjectParameter("SatisfactionFlagDesc", satisfactionFlagDesc) :
                new ObjectParameter("SatisfactionFlagDesc", typeof(string));
    
            var satisfactionDateParameter = satisfactionDate.HasValue ?
                new ObjectParameter("SatisfactionDate", satisfactionDate) :
                new ObjectParameter("SatisfactionDate", typeof(System.DateTime));
    
            var judgmentTypeParameter = judgmentType != null ?
                new ObjectParameter("JudgmentType", judgmentType) :
                new ObjectParameter("JudgmentType", typeof(string));
    
            var judgmentTypeDescParameter = judgmentTypeDesc != null ?
                new ObjectParameter("JudgmentTypeDesc", judgmentTypeDesc) :
                new ObjectParameter("JudgmentTypeDesc", typeof(string));
    
            var judgmentAmountParameter = judgmentAmount.HasValue ?
                new ObjectParameter("JudgmentAmount", judgmentAmount) :
                new ObjectParameter("JudgmentAmount", typeof(int));
    
            var courtParameter = court != null ?
                new ObjectParameter("Court", court) :
                new ObjectParameter("Court", typeof(string));
    
            var caseNumberParameter = caseNumber != null ?
                new ObjectParameter("CaseNumber", caseNumber) :
                new ObjectParameter("CaseNumber", typeof(string));
    
            var numberOfJudgmentNamesParameter = numberOfJudgmentNames != null ?
                new ObjectParameter("NumberOfJudgmentNames", numberOfJudgmentNames) :
                new ObjectParameter("NumberOfJudgmentNames", typeof(string));
    
            var numberOfTradingNamesParameter = numberOfTradingNames != null ?
                new ObjectParameter("NumberOfTradingNames", numberOfTradingNames) :
                new ObjectParameter("NumberOfTradingNames", typeof(string));
    
            var lengthOfJudgmentNameParameter = lengthOfJudgmentName != null ?
                new ObjectParameter("LengthOfJudgmentName", lengthOfJudgmentName) :
                new ObjectParameter("LengthOfJudgmentName", typeof(string));
    
            var lengthOfTradingNameParameter = lengthOfTradingName != null ?
                new ObjectParameter("LengthOfTradingName", lengthOfTradingName) :
                new ObjectParameter("LengthOfTradingName", typeof(string));
    
            var lengthOfJudgmentAddressParameter = lengthOfJudgmentAddress != null ?
                new ObjectParameter("LengthOfJudgmentAddress", lengthOfJudgmentAddress) :
                new ObjectParameter("LengthOfJudgmentAddress", typeof(string));
    
            var judgementAddr1Parameter = judgementAddr1 != null ?
                new ObjectParameter("JudgementAddr1", judgementAddr1) :
                new ObjectParameter("JudgementAddr1", typeof(string));
    
            var judgementAddr2Parameter = judgementAddr2 != null ?
                new ObjectParameter("JudgementAddr2", judgementAddr2) :
                new ObjectParameter("JudgementAddr2", typeof(string));
    
            var judgementAddr3Parameter = judgementAddr3 != null ?
                new ObjectParameter("JudgementAddr3", judgementAddr3) :
                new ObjectParameter("JudgementAddr3", typeof(string));
    
            var judgementAddr4Parameter = judgementAddr4 != null ?
                new ObjectParameter("JudgementAddr4", judgementAddr4) :
                new ObjectParameter("JudgementAddr4", typeof(string));
    
            var judgementAddr5Parameter = judgementAddr5 != null ?
                new ObjectParameter("JudgementAddr5", judgementAddr5) :
                new ObjectParameter("JudgementAddr5", typeof(string));
    
            var postCodeParameter = postCode != null ?
                new ObjectParameter("PostCode", postCode) :
                new ObjectParameter("PostCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("InsertNonLimitedResultCcjDetails", experianNonLimitedResultIdParameter, recordTypeParameter, recordTypeFullNameParameter, judgementDateParameter, satisfactionFlagParameter, satisfactionFlagDescParameter, satisfactionDateParameter, judgmentTypeParameter, judgmentTypeDescParameter, judgmentAmountParameter, courtParameter, caseNumberParameter, numberOfJudgmentNamesParameter, numberOfTradingNamesParameter, lengthOfJudgmentNameParameter, lengthOfTradingNameParameter, lengthOfJudgmentAddressParameter, judgementAddr1Parameter, judgementAddr2Parameter, judgementAddr3Parameter, judgementAddr4Parameter, judgementAddr5Parameter, postCodeParameter);
        }
    
        public virtual int InsertNonLimitedResultCcjRegisteredAgainst(Nullable<int> experianNonLimitedResultCcjDetailsId, string name)
        {
            var experianNonLimitedResultCcjDetailsIdParameter = experianNonLimitedResultCcjDetailsId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", experianNonLimitedResultCcjDetailsId) :
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultCcjRegisteredAgainst", experianNonLimitedResultCcjDetailsIdParameter, nameParameter);
        }
    
        public virtual int InsertNonLimitedResultCcjTradingNames(Nullable<int> experianNonLimitedResultCcjDetailsId, string name, string tradingIndicator, string tradingIndicatorDesc)
        {
            var experianNonLimitedResultCcjDetailsIdParameter = experianNonLimitedResultCcjDetailsId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", experianNonLimitedResultCcjDetailsId) :
                new ObjectParameter("ExperianNonLimitedResultCcjDetailsId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tradingIndicatorParameter = tradingIndicator != null ?
                new ObjectParameter("TradingIndicator", tradingIndicator) :
                new ObjectParameter("TradingIndicator", typeof(string));
    
            var tradingIndicatorDescParameter = tradingIndicatorDesc != null ?
                new ObjectParameter("TradingIndicatorDesc", tradingIndicatorDesc) :
                new ObjectParameter("TradingIndicatorDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultCcjTradingNames", experianNonLimitedResultCcjDetailsIdParameter, nameParameter, tradingIndicatorParameter, tradingIndicatorDescParameter);
        }
    
        public virtual int InsertNonLimitedResultPaymentPerformanceDetails(Nullable<int> experianNonLimitedResultId, string code, Nullable<int> daysBeyondTerms)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var daysBeyondTermsParameter = daysBeyondTerms.HasValue ?
                new ObjectParameter("DaysBeyondTerms", daysBeyondTerms) :
                new ObjectParameter("DaysBeyondTerms", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultPaymentPerformanceDetails", experianNonLimitedResultIdParameter, codeParameter, daysBeyondTermsParameter);
        }
    
        public virtual int InsertNonLimitedResultPreviousSearches(Nullable<int> experianNonLimitedResultId, Nullable<System.DateTime> previousSearchDate, string enquiryType, string enquiryTypeDesc, string creditRequired)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            var previousSearchDateParameter = previousSearchDate.HasValue ?
                new ObjectParameter("PreviousSearchDate", previousSearchDate) :
                new ObjectParameter("PreviousSearchDate", typeof(System.DateTime));
    
            var enquiryTypeParameter = enquiryType != null ?
                new ObjectParameter("EnquiryType", enquiryType) :
                new ObjectParameter("EnquiryType", typeof(string));
    
            var enquiryTypeDescParameter = enquiryTypeDesc != null ?
                new ObjectParameter("EnquiryTypeDesc", enquiryTypeDesc) :
                new ObjectParameter("EnquiryTypeDesc", typeof(string));
    
            var creditRequiredParameter = creditRequired != null ?
                new ObjectParameter("CreditRequired", creditRequired) :
                new ObjectParameter("CreditRequired", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultPreviousSearches", experianNonLimitedResultIdParameter, previousSearchDateParameter, enquiryTypeParameter, enquiryTypeDescParameter, creditRequiredParameter);
        }
    
        public virtual int InsertNonLimitedResultScoreHistory(Nullable<int> experianNonLimitedResultId, Nullable<int> riskScore, Nullable<System.DateTime> date)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            var riskScoreParameter = riskScore.HasValue ?
                new ObjectParameter("RiskScore", riskScore) :
                new ObjectParameter("RiskScore", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultScoreHistory", experianNonLimitedResultIdParameter, riskScoreParameter, dateParameter);
        }
    
        public virtual int InsertNonLimitedResultSicCodes(Nullable<int> experianNonLimitedResultId, string code, string description)
        {
            var experianNonLimitedResultIdParameter = experianNonLimitedResultId.HasValue ?
                new ObjectParameter("ExperianNonLimitedResultId", experianNonLimitedResultId) :
                new ObjectParameter("ExperianNonLimitedResultId", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertNonLimitedResultSicCodes", experianNonLimitedResultIdParameter, codeParameter, descriptionParameter);
        }
    
        public virtual int InsertPacNetBalance(Nullable<System.DateTime> date, Nullable<double> amount, Nullable<double> fees, Nullable<double> currentBalance, Nullable<bool> isCredit)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(double));
    
            var feesParameter = fees.HasValue ?
                new ObjectParameter("Fees", fees) :
                new ObjectParameter("Fees", typeof(double));
    
            var currentBalanceParameter = currentBalance.HasValue ?
                new ObjectParameter("CurrentBalance", currentBalance) :
                new ObjectParameter("CurrentBalance", typeof(double));
    
            var isCreditParameter = isCredit.HasValue ?
                new ObjectParameter("IsCredit", isCredit) :
                new ObjectParameter("IsCredit", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPacNetBalance", dateParameter, amountParameter, feesParameter, currentBalanceParameter, isCreditParameter);
        }
    
        public virtual int InsertPayPointData(string p_class, string acquirer, Nullable<decimal> amount, string auth_code, string authorised, string card_type, string cid, string company_no, string country, string currency, string cv2avs, Nullable<System.DateTime> date, string deferred, string emvValue, string fraud_code, string fraudScore, string ip, string lastfive, string merchant_no, string message, string messageType, string mid, string name, string options, string status, string tid, string trans_id)
        {
            var p_classParameter = p_class != null ?
                new ObjectParameter("p_class", p_class) :
                new ObjectParameter("p_class", typeof(string));
    
            var acquirerParameter = acquirer != null ?
                new ObjectParameter("acquirer", acquirer) :
                new ObjectParameter("acquirer", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(decimal));
    
            var auth_codeParameter = auth_code != null ?
                new ObjectParameter("auth_code", auth_code) :
                new ObjectParameter("auth_code", typeof(string));
    
            var authorisedParameter = authorised != null ?
                new ObjectParameter("authorised", authorised) :
                new ObjectParameter("authorised", typeof(string));
    
            var card_typeParameter = card_type != null ?
                new ObjectParameter("card_type", card_type) :
                new ObjectParameter("card_type", typeof(string));
    
            var cidParameter = cid != null ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(string));
    
            var company_noParameter = company_no != null ?
                new ObjectParameter("company_no", company_no) :
                new ObjectParameter("company_no", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(string));
    
            var cv2avsParameter = cv2avs != null ?
                new ObjectParameter("cv2avs", cv2avs) :
                new ObjectParameter("cv2avs", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            var deferredParameter = deferred != null ?
                new ObjectParameter("deferred", deferred) :
                new ObjectParameter("deferred", typeof(string));
    
            var emvValueParameter = emvValue != null ?
                new ObjectParameter("emvValue", emvValue) :
                new ObjectParameter("emvValue", typeof(string));
    
            var fraud_codeParameter = fraud_code != null ?
                new ObjectParameter("fraud_code", fraud_code) :
                new ObjectParameter("fraud_code", typeof(string));
    
            var fraudScoreParameter = fraudScore != null ?
                new ObjectParameter("FraudScore", fraudScore) :
                new ObjectParameter("FraudScore", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            var lastfiveParameter = lastfive != null ?
                new ObjectParameter("lastfive", lastfive) :
                new ObjectParameter("lastfive", typeof(string));
    
            var merchant_noParameter = merchant_no != null ?
                new ObjectParameter("merchant_no", merchant_no) :
                new ObjectParameter("merchant_no", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("message", message) :
                new ObjectParameter("message", typeof(string));
    
            var messageTypeParameter = messageType != null ?
                new ObjectParameter("MessageType", messageType) :
                new ObjectParameter("MessageType", typeof(string));
    
            var midParameter = mid != null ?
                new ObjectParameter("mid", mid) :
                new ObjectParameter("mid", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var optionsParameter = options != null ?
                new ObjectParameter("options", options) :
                new ObjectParameter("options", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(string));
    
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            var trans_idParameter = trans_id != null ?
                new ObjectParameter("trans_id", trans_id) :
                new ObjectParameter("trans_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPayPointData", p_classParameter, acquirerParameter, amountParameter, auth_codeParameter, authorisedParameter, card_typeParameter, cidParameter, company_noParameter, countryParameter, currencyParameter, cv2avsParameter, dateParameter, deferredParameter, emvValueParameter, fraud_codeParameter, fraudScoreParameter, ipParameter, lastfiveParameter, merchant_noParameter, messageParameter, messageTypeParameter, midParameter, nameParameter, optionsParameter, statusParameter, tidParameter, trans_idParameter);
        }
    
        public virtual int InsertSiteAnalytics(Nullable<System.DateTime> date, string codeName, Nullable<int> value, string source)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var codeNameParameter = codeName != null ?
                new ObjectParameter("CodeName", codeName) :
                new ObjectParameter("CodeName", typeof(string));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(int));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertSiteAnalytics", dateParameter, codeNameParameter, valueParameter, sourceParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> IsStrategyRunning(Nullable<int> customerId, string actionName)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("IsStrategyRunning", customerIdParameter, actionNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoadAllTheHmrcMarketplaces()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoadAllTheHmrcMarketplaces");
        }
    
        public virtual ObjectResult<LoadAllVatReturnPeriods_Result> LoadAllVatReturnPeriods(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadAllVatReturnPeriods_Result>("LoadAllVatReturnPeriods", customerIDParameter);
        }
    
        public virtual ObjectResult<LoadBusinessesForVatReturnSummary_Result> LoadBusinessesForVatReturnSummary(Nullable<int> customerMarketplaceID)
        {
            var customerMarketplaceIDParameter = customerMarketplaceID.HasValue ?
                new ObjectParameter("CustomerMarketplaceID", customerMarketplaceID) :
                new ObjectParameter("CustomerMarketplaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadBusinessesForVatReturnSummary_Result>("LoadBusinessesForVatReturnSummary", customerMarketplaceIDParameter);
        }
    
        public virtual ObjectResult<LoadConfigurationVariable_Result> LoadConfigurationVariable(string cfgVarName)
        {
            var cfgVarNameParameter = cfgVarName != null ?
                new ObjectParameter("CfgVarName", cfgVarName) :
                new ObjectParameter("CfgVarName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadConfigurationVariable_Result>("LoadConfigurationVariable", cfgVarNameParameter);
        }
    
        public virtual ObjectResult<LoadCustomerByCreatePasswordToken_Result> LoadCustomerByCreatePasswordToken(Nullable<System.Guid> tokenID, Nullable<System.DateTime> now)
        {
            var tokenIDParameter = tokenID.HasValue ?
                new ObjectParameter("TokenID", tokenID) :
                new ObjectParameter("TokenID", typeof(System.Guid));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadCustomerByCreatePasswordToken_Result>("LoadCustomerByCreatePasswordToken", tokenIDParameter, nowParameter);
        }
    
        public virtual ObjectResult<LoadCustomerEsignatures_Result> LoadCustomerEsignatures(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadCustomerEsignatures_Result>("LoadCustomerEsignatures", customerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoadCustomerHmrcAccounts(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoadCustomerHmrcAccounts", customerIDParameter);
        }
    
        public virtual ObjectResult<LoadCustomerInfo_Result> LoadCustomerInfo(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadCustomerInfo_Result>("LoadCustomerInfo", customerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoadCustomerLatestApprovedSum(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoadCustomerLatestApprovedSum", customerIDParameter);
        }
    
        public virtual ObjectResult<LoadCustomerMarketplaceSecurityData_Result> LoadCustomerMarketplaceSecurityData(Nullable<int> customerID, string displayName, Nullable<System.Guid> internalID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var internalIDParameter = internalID.HasValue ?
                new ObjectParameter("InternalID", internalID) :
                new ObjectParameter("InternalID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadCustomerMarketplaceSecurityData_Result>("LoadCustomerMarketplaceSecurityData", customerIDParameter, displayNameParameter, internalIDParameter);
        }
    
        public virtual ObjectResult<LoadDataForBackfillCustomerAnalyticsCompany_Result> LoadDataForBackfillCustomerAnalyticsCompany()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadDataForBackfillCustomerAnalyticsCompany_Result>("LoadDataForBackfillCustomerAnalyticsCompany");
        }
    
        public virtual ObjectResult<LoadDataForVatReturnSummary_Result> LoadDataForVatReturnSummary(Nullable<int> customerMarketplaceID)
        {
            var customerMarketplaceIDParameter = customerMarketplaceID.HasValue ?
                new ObjectParameter("CustomerMarketplaceID", customerMarketplaceID) :
                new ObjectParameter("CustomerMarketplaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadDataForVatReturnSummary_Result>("LoadDataForVatReturnSummary", customerMarketplaceIDParameter);
        }
    
        public virtual ObjectResult<LoadEmailConfirmationState_Result> LoadEmailConfirmationState(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadEmailConfirmationState_Result>("LoadEmailConfirmationState", userIDParameter);
        }
    
        public virtual ObjectResult<string> LoadEmailForPasswordReset(Nullable<int> targetID)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoadEmailForPasswordReset", targetIDParameter);
        }
    
        public virtual ObjectResult<LoadEsignAgreementStatuses_Result> LoadEsignAgreementStatuses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadEsignAgreementStatuses_Result>("LoadEsignAgreementStatuses");
        }
    
        public virtual ObjectResult<LoadEsignatureFile_Result> LoadEsignatureFile(Nullable<long> esignatureID)
        {
            var esignatureIDParameter = esignatureID.HasValue ?
                new ObjectParameter("EsignatureID", esignatureID) :
                new ObjectParameter("EsignatureID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadEsignatureFile_Result>("LoadEsignatureFile", esignatureIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerData_Result> LoadExperianConsumerData(Nullable<long> serviceLogId, ObjectParameter experianConsumerId)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerData_Result>("LoadExperianConsumerData", serviceLogIdParameter, experianConsumerId);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataApplicant_Result> LoadExperianConsumerDataApplicant(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataApplicant_Result>("LoadExperianConsumerDataApplicant", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataCais_Result> LoadExperianConsumerDataCais(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataCais_Result>("LoadExperianConsumerDataCais", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataCaisBalance_Result> LoadExperianConsumerDataCaisBalance(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataCaisBalance_Result>("LoadExperianConsumerDataCaisBalance", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataCaisCardHistory_Result> LoadExperianConsumerDataCaisCardHistory(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataCaisCardHistory_Result>("LoadExperianConsumerDataCaisCardHistory", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataLocation_Result> LoadExperianConsumerDataLocation(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataLocation_Result>("LoadExperianConsumerDataLocation", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataNoc_Result> LoadExperianConsumerDataNoc(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataNoc_Result>("LoadExperianConsumerDataNoc", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerDataResidency_Result> LoadExperianConsumerDataResidency(Nullable<long> experianConsumerDataId)
        {
            var experianConsumerDataIdParameter = experianConsumerDataId.HasValue ?
                new ObjectParameter("ExperianConsumerDataId", experianConsumerDataId) :
                new ObjectParameter("ExperianConsumerDataId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerDataResidency_Result>("LoadExperianConsumerDataResidency", experianConsumerDataIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerForCustomer_Result> LoadExperianConsumerForCustomer(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerForCustomer_Result>("LoadExperianConsumerForCustomer", customerIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerForDirector_Result> LoadExperianConsumerForDirector(Nullable<int> directorId)
        {
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerForDirector_Result>("LoadExperianConsumerForDirector", directorIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianConsumerMortgagesData_Result> LoadExperianConsumerMortgagesData(Nullable<long> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianConsumerMortgagesData_Result>("LoadExperianConsumerMortgagesData", customerIdParameter);
        }
    
        public virtual ObjectResult<LoadExperianDataForDirectorsBackfill_Result> LoadExperianDataForDirectorsBackfill(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianDataForDirectorsBackfill_Result>("LoadExperianDataForDirectorsBackfill", customerIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtd_Result> LoadExperianLtd(Nullable<long> serviceLogID, ObjectParameter experianLtdID)
        {
            var serviceLogIDParameter = serviceLogID.HasValue ?
                new ObjectParameter("ServiceLogID", serviceLogID) :
                new ObjectParameter("ServiceLogID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtd_Result>("LoadExperianLtd", serviceLogIDParameter, experianLtdID);
        }
    
        public virtual ObjectResult<LoadExperianLtdCaisMonthly_Result> LoadExperianLtdCaisMonthly(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdCaisMonthly_Result>("LoadExperianLtdCaisMonthly", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdCreditSummary_Result> LoadExperianLtdCreditSummary(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdCreditSummary_Result>("LoadExperianLtdCreditSummary", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL48_Result> LoadExperianLtdDL48(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL48_Result>("LoadExperianLtdDL48", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL52_Result> LoadExperianLtdDL52(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL52_Result>("LoadExperianLtdDL52", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL65_Result> LoadExperianLtdDL65(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL65_Result>("LoadExperianLtdDL65", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL68_Result> LoadExperianLtdDL68(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL68_Result>("LoadExperianLtdDL68", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL72_Result> LoadExperianLtdDL72(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL72_Result>("LoadExperianLtdDL72", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL97_Result> LoadExperianLtdDL97(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL97_Result>("LoadExperianLtdDL97", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDL99_Result> LoadExperianLtdDL99(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDL99_Result>("LoadExperianLtdDL99", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDLA2_Result> LoadExperianLtdDLA2(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDLA2_Result>("LoadExperianLtdDLA2", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdDLB5_Result> LoadExperianLtdDLB5(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdDLB5_Result>("LoadExperianLtdDLB5", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdErrors_Result> LoadExperianLtdErrors(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdErrors_Result>("LoadExperianLtdErrors", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdLenderDetails_Result> LoadExperianLtdLenderDetails(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdLenderDetails_Result>("LoadExperianLtdLenderDetails", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdPrevCompanyNames_Result> LoadExperianLtdPrevCompanyNames(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdPrevCompanyNames_Result>("LoadExperianLtdPrevCompanyNames", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadExperianLtdShareholders_Result> LoadExperianLtdShareholders(Nullable<long> experianLtdID)
        {
            var experianLtdIDParameter = experianLtdID.HasValue ?
                new ObjectParameter("ExperianLtdID", experianLtdID) :
                new ObjectParameter("ExperianLtdID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadExperianLtdShareholders_Result>("LoadExperianLtdShareholders", experianLtdIDParameter);
        }
    
        public virtual ObjectResult<LoadEzServiceCrontab_Result> LoadEzServiceCrontab(Nullable<bool> includeRunning)
        {
            var includeRunningParameter = includeRunning.HasValue ?
                new ObjectParameter("IncludeRunning", includeRunning) :
                new ObjectParameter("IncludeRunning", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadEzServiceCrontab_Result>("LoadEzServiceCrontab", includeRunningParameter);
        }
    
        public virtual ObjectResult<LoadFullExperianConsumer_Result> LoadFullExperianConsumer(Nullable<long> serviceLogId, Nullable<System.DateTime> insertDate)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadFullExperianConsumer_Result>("LoadFullExperianConsumer", serviceLogIdParameter, insertDateParameter);
        }
    
        public virtual ObjectResult<LoadFullExperianLtd_Result> LoadFullExperianLtd(Nullable<long> serviceLogID, Nullable<System.DateTime> insertDate)
        {
            var serviceLogIDParameter = serviceLogID.HasValue ?
                new ObjectParameter("ServiceLogID", serviceLogID) :
                new ObjectParameter("ServiceLogID", typeof(long));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadFullExperianLtd_Result>("LoadFullExperianLtd", serviceLogIDParameter, insertDateParameter);
        }
    
        public virtual ObjectResult<LoadManualVatReturnPeriods_Result> LoadManualVatReturnPeriods(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadManualVatReturnPeriods_Result>("LoadManualVatReturnPeriods", customerIDParameter);
        }
    
        public virtual ObjectResult<LoadMarketplaceSecurityData_Result> LoadMarketplaceSecurityData(Nullable<System.Guid> marketplaceType)
        {
            var marketplaceTypeParameter = marketplaceType.HasValue ?
                new ObjectParameter("MarketplaceType", marketplaceType) :
                new ObjectParameter("MarketplaceType", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadMarketplaceSecurityData_Result>("LoadMarketplaceSecurityData", marketplaceTypeParameter);
        }
    
        public virtual ObjectResult<string> LoadPayPointBalanceColumns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("LoadPayPointBalanceColumns");
        }
    
        public virtual ObjectResult<LoadPendingEsignatures_Result> LoadPendingEsignatures(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadPendingEsignatures_Result>("LoadPendingEsignatures", customerIDParameter);
        }
    
        public virtual ObjectResult<LoadPotentialEsigners_Result> LoadPotentialEsigners(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadPotentialEsigners_Result>("LoadPotentialEsigners", customerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> LoadRtiMonthForVatReturnSummary(Nullable<int> customerMarketplaceID)
        {
            var customerMarketplaceIDParameter = customerMarketplaceID.HasValue ?
                new ObjectParameter("CustomerMarketplaceID", customerMarketplaceID) :
                new ObjectParameter("CustomerMarketplaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("LoadRtiMonthForVatReturnSummary", customerMarketplaceIDParameter);
        }
    
        public virtual ObjectResult<LoadServiceLogEntry_Result> LoadServiceLogEntry(Nullable<long> entryID)
        {
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadServiceLogEntry_Result>("LoadServiceLogEntry", entryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> LoadServiceLogForConsumerBackfill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("LoadServiceLogForConsumerBackfill");
        }
    
        public virtual ObjectResult<LoadServiceLogForLtdBackfill_Result> LoadServiceLogForLtdBackfill()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadServiceLogForLtdBackfill_Result>("LoadServiceLogForLtdBackfill");
        }
    
        public virtual ObjectResult<LoadUploadLimitations_Result> LoadUploadLimitations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LoadUploadLimitations_Result>("LoadUploadLimitations");
        }
    
        public virtual int LoadVatReturnRawData(Nullable<int> customerMarketplaceID)
        {
            var customerMarketplaceIDParameter = customerMarketplaceID.HasValue ?
                new ObjectParameter("CustomerMarketplaceID", customerMarketplaceID) :
                new ObjectParameter("CustomerMarketplaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadVatReturnRawData", customerMarketplaceIDParameter);
        }
    
        public virtual int LoadVatReturnSummary(Nullable<int> marketplaceID)
        {
            var marketplaceIDParameter = marketplaceID.HasValue ?
                new ObjectParameter("MarketplaceID", marketplaceID) :
                new ObjectParameter("MarketplaceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LoadVatReturnSummary", marketplaceIDParameter);
        }
    
        public virtual int Log_ServerAction_Insert(string pCommand, string pRequest, Nullable<int> pApplicationId, string pUserHost, ObjectParameter pid)
        {
            var pCommandParameter = pCommand != null ?
                new ObjectParameter("pCommand", pCommand) :
                new ObjectParameter("pCommand", typeof(string));
    
            var pRequestParameter = pRequest != null ?
                new ObjectParameter("pRequest", pRequest) :
                new ObjectParameter("pRequest", typeof(string));
    
            var pApplicationIdParameter = pApplicationId.HasValue ?
                new ObjectParameter("pApplicationId", pApplicationId) :
                new ObjectParameter("pApplicationId", typeof(int));
    
            var pUserHostParameter = pUserHost != null ?
                new ObjectParameter("pUserHost", pUserHost) :
                new ObjectParameter("pUserHost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Log_ServerAction_Insert", pCommandParameter, pRequestParameter, pApplicationIdParameter, pUserHostParameter, pid);
        }
    
        public virtual int LogbookAdd(Nullable<int> logbookEntryTypeID, Nullable<int> userID, string entryContent)
        {
            var logbookEntryTypeIDParameter = logbookEntryTypeID.HasValue ?
                new ObjectParameter("LogbookEntryTypeID", logbookEntryTypeID) :
                new ObjectParameter("LogbookEntryTypeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var entryContentParameter = entryContent != null ?
                new ObjectParameter("EntryContent", entryContent) :
                new ObjectParameter("EntryContent", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LogbookAdd", logbookEntryTypeIDParameter, userIDParameter, entryContentParameter);
        }
    
        public virtual ObjectResult<LogbookEntryTypeList_Result> LogbookEntryTypeList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LogbookEntryTypeList_Result>("LogbookEntryTypeList");
        }
    
        public virtual ObjectResult<MainStrategyGetConfigs_Result> MainStrategyGetConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MainStrategyGetConfigs_Result>("MainStrategyGetConfigs");
        }
    
        public virtual int MarkSessionEnded(Nullable<int> sessionID, Nullable<System.DateTime> now)
        {
            var sessionIDParameter = sessionID.HasValue ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkSessionEnded", sessionIDParameter, nowParameter);
        }
    
        public virtual int MC_AddCampaignClickStat(string title, string url, string email, Nullable<int> emailsSent, Nullable<int> clicks, Nullable<System.DateTime> date)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var emailsSentParameter = emailsSent.HasValue ?
                new ObjectParameter("EmailsSent", emailsSent) :
                new ObjectParameter("EmailsSent", typeof(int));
    
            var clicksParameter = clicks.HasValue ?
                new ObjectParameter("Clicks", clicks) :
                new ObjectParameter("Clicks", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MC_AddCampaignClickStat", titleParameter, urlParameter, emailParameter, emailsSentParameter, clicksParameter, dateParameter);
        }
    
        public virtual ObjectResult<string> PayPointChargerGetConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PayPointChargerGetConfigs");
        }
    
        public virtual int PaypointOneTypeReconciliation(Nullable<System.DateTime> date, Nullable<bool> includeFive, Nullable<bool> successOnly, string caption)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var includeFiveParameter = includeFive.HasValue ?
                new ObjectParameter("IncludeFive", includeFive) :
                new ObjectParameter("IncludeFive", typeof(bool));
    
            var successOnlyParameter = successOnly.HasValue ?
                new ObjectParameter("SuccessOnly", successOnly) :
                new ObjectParameter("SuccessOnly", typeof(bool));
    
            var captionParameter = caption != null ?
                new ObjectParameter("Caption", caption) :
                new ObjectParameter("Caption", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PaypointOneTypeReconciliation", dateParameter, includeFiveParameter, successOnlyParameter, captionParameter);
        }
    
        public virtual int PostcodeSaveLog(string requestType, string url, string status, string responseData, string errorMessage, Nullable<int> userID, Nullable<System.DateTime> insertDate)
        {
            var requestTypeParameter = requestType != null ?
                new ObjectParameter("RequestType", requestType) :
                new ObjectParameter("RequestType", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var responseDataParameter = responseData != null ?
                new ObjectParameter("ResponseData", responseData) :
                new ObjectParameter("ResponseData", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PostcodeSaveLog", requestTypeParameter, urlParameter, statusParameter, responseDataParameter, errorMessageParameter, userIDParameter, insertDateParameter);
        }
    
        public virtual ObjectResult<string> QuickOfferDataLoad(Nullable<int> customerID, Nullable<System.DateTime> now)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("QuickOfferDataLoad", customerIDParameter, nowParameter);
        }
    
        public virtual int QuickOfferHackForTest(Nullable<int> customerID, Nullable<int> businessScore, Nullable<System.DateTime> now)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var businessScoreParameter = businessScore.HasValue ?
                new ObjectParameter("BusinessScore", businessScore) :
                new ObjectParameter("BusinessScore", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QuickOfferHackForTest", customerIDParameter, businessScoreParameter, nowParameter);
        }
    
        public virtual ObjectResult<QuickOfferLoadConfiguration_Result> QuickOfferLoadConfiguration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QuickOfferLoadConfiguration_Result>("QuickOfferLoadConfiguration");
        }
    
        public virtual int QuickOfferSave(Nullable<System.DateTime> now, Nullable<int> customerID, Nullable<decimal> amount, Nullable<int> aml, Nullable<int> businessScore, Nullable<System.DateTime> incorporationDate, Nullable<decimal> tangibleEquity, Nullable<decimal> totalCurrentAssets, Nullable<int> immediateTerm, Nullable<decimal> immediateInterestRate, Nullable<decimal> immediateSetupFee, Nullable<decimal> potentialAmount, Nullable<int> potentialTerm, Nullable<decimal> potentialInterestRate, Nullable<decimal> potentialSetupFee, ObjectParameter quickOfferID)
        {
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var amlParameter = aml.HasValue ?
                new ObjectParameter("Aml", aml) :
                new ObjectParameter("Aml", typeof(int));
    
            var businessScoreParameter = businessScore.HasValue ?
                new ObjectParameter("BusinessScore", businessScore) :
                new ObjectParameter("BusinessScore", typeof(int));
    
            var incorporationDateParameter = incorporationDate.HasValue ?
                new ObjectParameter("IncorporationDate", incorporationDate) :
                new ObjectParameter("IncorporationDate", typeof(System.DateTime));
    
            var tangibleEquityParameter = tangibleEquity.HasValue ?
                new ObjectParameter("TangibleEquity", tangibleEquity) :
                new ObjectParameter("TangibleEquity", typeof(decimal));
    
            var totalCurrentAssetsParameter = totalCurrentAssets.HasValue ?
                new ObjectParameter("TotalCurrentAssets", totalCurrentAssets) :
                new ObjectParameter("TotalCurrentAssets", typeof(decimal));
    
            var immediateTermParameter = immediateTerm.HasValue ?
                new ObjectParameter("ImmediateTerm", immediateTerm) :
                new ObjectParameter("ImmediateTerm", typeof(int));
    
            var immediateInterestRateParameter = immediateInterestRate.HasValue ?
                new ObjectParameter("ImmediateInterestRate", immediateInterestRate) :
                new ObjectParameter("ImmediateInterestRate", typeof(decimal));
    
            var immediateSetupFeeParameter = immediateSetupFee.HasValue ?
                new ObjectParameter("ImmediateSetupFee", immediateSetupFee) :
                new ObjectParameter("ImmediateSetupFee", typeof(decimal));
    
            var potentialAmountParameter = potentialAmount.HasValue ?
                new ObjectParameter("PotentialAmount", potentialAmount) :
                new ObjectParameter("PotentialAmount", typeof(decimal));
    
            var potentialTermParameter = potentialTerm.HasValue ?
                new ObjectParameter("PotentialTerm", potentialTerm) :
                new ObjectParameter("PotentialTerm", typeof(int));
    
            var potentialInterestRateParameter = potentialInterestRate.HasValue ?
                new ObjectParameter("PotentialInterestRate", potentialInterestRate) :
                new ObjectParameter("PotentialInterestRate", typeof(decimal));
    
            var potentialSetupFeeParameter = potentialSetupFee.HasValue ?
                new ObjectParameter("PotentialSetupFee", potentialSetupFee) :
                new ObjectParameter("PotentialSetupFee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("QuickOfferSave", nowParameter, customerIDParameter, amountParameter, amlParameter, businessScoreParameter, incorporationDateParameter, tangibleEquityParameter, totalCurrentAssetsParameter, immediateTermParameter, immediateInterestRateParameter, immediateSetupFeeParameter, potentialAmountParameter, potentialTermParameter, potentialInterestRateParameter, potentialSetupFeeParameter, quickOfferID);
        }
    
        public virtual int RecordMail(string filename, byte[] body, Nullable<System.DateTime> creation, string customerMail)
        {
            var filenameParameter = filename != null ?
                new ObjectParameter("Filename", filename) :
                new ObjectParameter("Filename", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(byte[]));
    
            var creationParameter = creation.HasValue ?
                new ObjectParameter("Creation", creation) :
                new ObjectParameter("Creation", typeof(System.DateTime));
    
            var customerMailParameter = customerMail != null ?
                new ObjectParameter("CustomerMail", customerMail) :
                new ObjectParameter("CustomerMail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordMail", filenameParameter, bodyParameter, creationParameter, customerMailParameter);
        }
    
        public virtual int RecordManualPacnetDeposit(string underwriterName, Nullable<int> amount, Nullable<System.DateTime> date)
        {
            var underwriterNameParameter = underwriterName != null ?
                new ObjectParameter("UnderwriterName", underwriterName) :
                new ObjectParameter("UnderwriterName", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordManualPacnetDeposit", underwriterNameParameter, amountParameter, dateParameter);
        }
    
        public virtual int RecordMpUpdateFailure(Nullable<int> mpId, string error, Nullable<System.DateTime> now)
        {
            var mpIdParameter = mpId.HasValue ?
                new ObjectParameter("MpId", mpId) :
                new ObjectParameter("MpId", typeof(int));
    
            var errorParameter = error != null ?
                new ObjectParameter("Error", error) :
                new ObjectParameter("Error", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RecordMpUpdateFailure", mpIdParameter, errorParameter, nowParameter);
        }
    
        public virtual int RemoveCustomerFromOfflineScoring(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveCustomerFromOfflineScoring", customerIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> RemoveManualVatReturnPeriod(Nullable<System.Guid> periodID, Nullable<int> reasonID, Nullable<System.DateTime> now)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(System.Guid));
    
            var reasonIDParameter = reasonID.HasValue ?
                new ObjectParameter("ReasonID", reasonID) :
                new ObjectParameter("ReasonID", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RemoveManualVatReturnPeriod", periodIDParameter, reasonIDParameter, nowParameter);
        }
    
        public virtual ObjectResult<RptAccountingLoanBalance_Result> RptAccountingLoanBalance(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAccountingLoanBalance_Result>("RptAccountingLoanBalance", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptAddReportUser(string userName, string name, byte[] password, byte[] salt)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptAddReportUser", userNameParameter, nameParameter, passwordParameter, saltParameter);
        }
    
        public virtual int RptAddUserReportMap(string userName, string reportType)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("ReportType", reportType) :
                new ObjectParameter("ReportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptAddUserReportMap", userNameParameter, reportTypeParameter);
        }
    
        public virtual int RptApprovedDidntTake(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptApprovedDidntTake", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptArrearsLetter_Result> RptArrearsLetter(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptArrearsLetter_Result>("RptArrearsLetter", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptAutomationVerification_Result> RptAutomationVerification(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAutomationVerification_Result>("RptAutomationVerification", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptBroker_Result> RptBroker(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptBroker_Result>("RptBroker", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptBrokerClients_Result> RptBrokerClients(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptBrokerClients_Result>("RptBrokerClients", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptBrokerInvoice_Result> RptBrokerInvoice(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptBrokerInvoice_Result>("RptBrokerInvoice", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptBrokerStatus(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> customerID, string customerNameOrEmail)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameOrEmailParameter = customerNameOrEmail != null ?
                new ObjectParameter("CustomerNameOrEmail", customerNameOrEmail) :
                new ObjectParameter("CustomerNameOrEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptBrokerStatus", dateStartParameter, dateEndParameter, customerIDParameter, customerNameOrEmailParameter);
        }
    
        public virtual ObjectResult<RptBugs_Result> RptBugs(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptBugs_Result>("RptBugs", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptCciData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptCciData");
        }
    
        public virtual int RptChangePassword(string userName, byte[] password, byte[] salt)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(byte[]));
    
            var saltParameter = salt != null ?
                new ObjectParameter("Salt", salt) :
                new ObjectParameter("Salt", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptChangePassword", userNameParameter, passwordParameter, saltParameter);
        }
    
        public virtual int RptClientProfitability()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptClientProfitability");
        }
    
        public virtual ObjectResult<RptCollectionPayments_Result> RptCollectionPayments(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCollectionPayments_Result>("RptCollectionPayments", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptCrmFollowUp_Result> RptCrmFollowUp(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCrmFollowUp_Result>("RptCrmFollowUp", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptCurrentLiens_Result> RptCurrentLiens(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCurrentLiens_Result>("RptCurrentLiens", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptCustAnualSales(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptCustAnualSales", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptCustomerReport_Result> RptCustomerReport(Nullable<System.DateTime> dateStart)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCustomerReport_Result>("RptCustomerReport", dateStartParameter);
        }
    
        public virtual ObjectResult<RptCustomerStatus_Result> RptCustomerStatus(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCustomerStatus_Result>("RptCustomerStatus", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptDailyStats(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptDailyStats", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptDebitExpiry_Result> RptDebitExpiry(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDebitExpiry_Result>("RptDebitExpiry", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptDefaultLetter_Result> RptDefaultLetter(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDefaultLetter_Result>("RptDefaultLetter", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptDefaultsDetailed(Nullable<System.DateTime> cutoffDate, Nullable<decimal> minPct)
        {
            var cutoffDateParameter = cutoffDate.HasValue ?
                new ObjectParameter("CutoffDate", cutoffDate) :
                new ObjectParameter("CutoffDate", typeof(System.DateTime));
    
            var minPctParameter = minPct.HasValue ?
                new ObjectParameter("MinPct", minPct) :
                new ObjectParameter("MinPct", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptDefaultsDetailed", cutoffDateParameter, minPctParameter);
        }
    
        public virtual int RptDidntTakeLoan()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptDidntTakeLoan");
        }
    
        public virtual int RptDropReportUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptDropReportUser", userIDParameter);
        }
    
        public virtual ObjectResult<RptEarnedInterest_Result> RptEarnedInterest(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_Result>("RptEarnedInterest", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptEarnedInterest_CciCustomers_Result> RptEarnedInterest_CciCustomers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_CciCustomers_Result>("RptEarnedInterest_CciCustomers", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptEarnedInterest_CustomerStatusHistory_Result> RptEarnedInterest_CustomerStatusHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_CustomerStatusHistory_Result>("RptEarnedInterest_CustomerStatusHistory");
        }
    
        public virtual ObjectResult<RptEarnedInterest_ForPeriod_Result> RptEarnedInterest_ForPeriod(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_ForPeriod_Result>("RptEarnedInterest_ForPeriod", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptEarnedInterest_Freeze_Result> RptEarnedInterest_Freeze()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_Freeze_Result>("RptEarnedInterest_Freeze");
        }
    
        public virtual ObjectResult<RptEarnedInterest_IssuedLoans_Result> RptEarnedInterest_IssuedLoans(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_IssuedLoans_Result>("RptEarnedInterest_IssuedLoans", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptEarnedInterest_LoanDates_Result> RptEarnedInterest_LoanDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEarnedInterest_LoanDates_Result>("RptEarnedInterest_LoanDates");
        }
    
        public virtual int RptExecutive(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptExecutive", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptExperianLimitedCompanyData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptExperianLimitedCompanyData");
        }
    
        public virtual int RptFinancialStats(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFinancialStats", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptFinishedLoans(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptFinishedLoans", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptGetCampaignClickStats_Result> RptGetCampaignClickStats(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGetCampaignClickStats_Result>("RptGetCampaignClickStats", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<string> RptGetUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("RptGetUserName", userNameParameter);
        }
    
        public virtual ObjectResult<RptGetUserReports_Result> RptGetUserReports(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGetUserReports_Result>("RptGetUserReports", userNameParameter);
        }
    
        public virtual int RptIndexSize(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptIndexSize", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptLeads_Result> RptLeads(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLeads_Result>("RptLeads", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptLeadsAll_Result> RptLeadsAll(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<bool> withBrokerCustomers)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var withBrokerCustomersParameter = withBrokerCustomers.HasValue ?
                new ObjectParameter("WithBrokerCustomers", withBrokerCustomers) :
                new ObjectParameter("WithBrokerCustomers", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLeadsAll_Result>("RptLeadsAll", dateStartParameter, dateEndParameter, withBrokerCustomersParameter);
        }
    
        public virtual ObjectResult<RptLoanDateScore_Result> RptLoanDateScore()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoanDateScore_Result>("RptLoanDateScore");
        }
    
        public virtual ObjectResult<RptLoanDateScoreNDSPCII_Result> RptLoanDateScoreNDSPCII()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoanDateScoreNDSPCII_Result>("RptLoanDateScoreNDSPCII");
        }
    
        public virtual ObjectResult<RptLoansCompany_Result> RptLoansCompany(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoansCompany_Result>("RptLoansCompany", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptLoansGiven_Result> RptLoansGiven(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoansGiven_Result>("RptLoansGiven", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptLoansOverall_Result> RptLoansOverall(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoansOverall_Result>("RptLoansOverall", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptLoanStats_CashRequests_Result> RptLoanStats_CashRequests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoanStats_CashRequests_Result>("RptLoanStats_CashRequests");
        }
    
        public virtual ObjectResult<RptLoanStats_CustomerPostcodes_Result> RptLoanStats_CustomerPostcodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoanStats_CustomerPostcodes_Result>("RptLoanStats_CustomerPostcodes");
        }
    
        public virtual ObjectResult<RptLoanStats_Marketplaces_Result> RptLoanStats_Marketplaces()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoanStats_Marketplaces_Result>("RptLoanStats_Marketplaces");
        }
    
        public virtual ObjectResult<RptLoanStats_PaypalTotalIn_Result> RptLoanStats_PaypalTotalIn()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoanStats_PaypalTotalIn_Result>("RptLoanStats_PaypalTotalIn");
        }
    
        public virtual int RptLottery()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptLottery");
        }
    
        public virtual ObjectResult<RptMarketingChannelsSummary_Result> RptMarketingChannelsSummary(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMarketingChannelsSummary_Result>("RptMarketingChannelsSummary", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptMarketingChannelsSummary_CountCompleteWizard(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptMarketingChannelsSummary_CountCompleteWizard", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptMarketingChannelsSummary_CountCustomersOnSteps_Result> RptMarketingChannelsSummary_CountCustomersOnSteps(string rowType, Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, string uiControlName)
        {
            var rowTypeParameter = rowType != null ?
                new ObjectParameter("RowType", rowType) :
                new ObjectParameter("RowType", typeof(string));
    
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var uiControlNameParameter = uiControlName != null ?
                new ObjectParameter("UiControlName", uiControlName) :
                new ObjectParameter("UiControlName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMarketingChannelsSummary_CountCustomersOnSteps_Result>("RptMarketingChannelsSummary_CountCustomersOnSteps", rowTypeParameter, dateStartParameter, dateEndParameter, uiControlNameParameter);
        }
    
        public virtual int RptMarketPlacesLoanStats(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptMarketPlacesLoanStats", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptNewLateClients_Result> RptNewLateClients(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptNewLateClients_Result>("RptNewLateClients", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptNewLoans_Result> RptNewLoans(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptNewLoans_Result>("RptNewLoans", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptNewPayers_Result> RptNewPayers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptNewPayers_Result>("RptNewPayers", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptNoPersonalInfoCustomers_Result> RptNoPersonalInfoCustomers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptNoPersonalInfoCustomers_Result>("RptNoPersonalInfoCustomers", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptOnlineRegApp(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptOnlineRegApp", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptOpenPayments_Result> RptOpenPayments(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptOpenPayments_Result>("RptOpenPayments", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptOverallStats_Result> RptOverallStats(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptOverallStats_Result>("RptOverallStats", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptPacnetReconciliation(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptPacnetReconciliation", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptPaidLoanDidntTakeNew(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptPaidLoanDidntTakeNew", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptPaymentReport_Result> RptPaymentReport(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPaymentReport_Result>("RptPaymentReport", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptPaymentsReceived(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<bool> showNonCashTransactions)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var showNonCashTransactionsParameter = showNonCashTransactions.HasValue ?
                new ObjectParameter("ShowNonCashTransactions", showNonCashTransactions) :
                new ObjectParameter("ShowNonCashTransactions", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptPaymentsReceived", dateStartParameter, dateEndParameter, showNonCashTransactionsParameter);
        }
    
        public virtual ObjectResult<RptPaymentToLiensLoans_Result> RptPaymentToLiensLoans(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPaymentToLiensLoans_Result>("RptPaymentToLiensLoans", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptPaypalEbayPhones(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptPaypalEbayPhones", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptPaypointReconciliation(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptPaypointReconciliation", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptPendingReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptPendingReport");
        }
    
        public virtual ObjectResult<RptReferenceSources_Result> RptReferenceSources(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptReferenceSources_Result>("RptReferenceSources", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptSaleStats(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd, Nullable<int> customerID, string customerNameOrEmail)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNameOrEmailParameter = customerNameOrEmail != null ?
                new ObjectParameter("CustomerNameOrEmail", customerNameOrEmail) :
                new ObjectParameter("CustomerNameOrEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptSaleStats", dateStartParameter, dateEndParameter, customerIDParameter, customerNameOrEmailParameter);
        }
    
        public virtual ObjectResult<RptScheduler_GetHeaderAndFields_Result> RptScheduler_GetHeaderAndFields(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptScheduler_GetHeaderAndFields_Result>("RptScheduler_GetHeaderAndFields", typeParameter);
        }
    
        public virtual ObjectResult<RptScheduler_GetReportArgs_Result> RptScheduler_GetReportArgs(string rptType)
        {
            var rptTypeParameter = rptType != null ?
                new ObjectParameter("RptType", rptType) :
                new ObjectParameter("RptType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptScheduler_GetReportArgs_Result>("RptScheduler_GetReportArgs", rptTypeParameter);
        }
    
        public virtual ObjectResult<RptScheduler_GetReportList_Result> RptScheduler_GetReportList(string rptType)
        {
            var rptTypeParameter = rptType != null ?
                new ObjectParameter("RptType", rptType) :
                new ObjectParameter("RptType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptScheduler_GetReportList_Result>("RptScheduler_GetReportList", rptTypeParameter);
        }
    
        public virtual int RptSetUserReportMap(Nullable<int> userID, Nullable<int> reportID, Nullable<bool> enabled)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var reportIDParameter = reportID.HasValue ?
                new ObjectParameter("ReportID", reportID) :
                new ObjectParameter("ReportID", typeof(int));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptSetUserReportMap", userIDParameter, reportIDParameter, enabledParameter);
        }
    
        public virtual ObjectResult<RptSiteAnalytics_Result> RptSiteAnalytics(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptSiteAnalytics_Result>("RptSiteAnalytics", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptSourceRef(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptSourceRef", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptStatsDaily(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptStatsDaily", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptStatusChanged_Result> RptStatusChanged(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatusChanged_Result>("RptStatusChanged", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptStepOneCustomers_Result> RptStepOneCustomers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStepOneCustomers_Result>("RptStepOneCustomers", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptStrategyRunningTime_Result> RptStrategyRunningTime(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStrategyRunningTime_Result>("RptStrategyRunningTime", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptTraficReport_Analytics_Result> RptTraficReport_Analytics(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTraficReport_Analytics_Result>("RptTraficReport_Analytics", dateStartParameter, dateEndParameter);
        }
    
        public virtual int RptTraficReport_Customers(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RptTraficReport_Customers", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptTstRpt_Result> RptTstRpt(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTstRpt_Result>("RptTstRpt", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptUiReportData_Result> RptUiReportData(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptUiReportData_Result>("RptUiReportData", dateStartParameter, dateEndParameter);
        }
    
        public virtual ObjectResult<RptUiReportExtData_Result> RptUiReportExtData(Nullable<System.DateTime> dateStart, Nullable<System.DateTime> dateEnd)
        {
            var dateStartParameter = dateStart.HasValue ?
                new ObjectParameter("DateStart", dateStart) :
                new ObjectParameter("DateStart", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptUiReportExtData_Result>("RptUiReportExtData", dateStartParameter, dateEndParameter);
        }
    
        public virtual int SaveCompanyFileMetadata(Nullable<int> customerId, Nullable<System.DateTime> created, string fileName, string filePath, string fileContentType)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var createdParameter = created.HasValue ?
                new ObjectParameter("Created", created) :
                new ObjectParameter("Created", typeof(System.DateTime));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var filePathParameter = filePath != null ?
                new ObjectParameter("FilePath", filePath) :
                new ObjectParameter("FilePath", typeof(string));
    
            var fileContentTypeParameter = fileContentType != null ?
                new ObjectParameter("FileContentType", fileContentType) :
                new ObjectParameter("FileContentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveCompanyFileMetadata", customerIdParameter, createdParameter, fileNameParameter, filePathParameter, fileContentTypeParameter);
        }
    
        public virtual int SaveExperianHistory(Nullable<long> serviceLogId, Nullable<System.DateTime> insertDate, string type, Nullable<int> score, Nullable<int> customerId, Nullable<int> directorId, Nullable<int> companyRefNum, Nullable<int> balance, Nullable<int> cII)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            var insertDateParameter = insertDate.HasValue ?
                new ObjectParameter("InsertDate", insertDate) :
                new ObjectParameter("InsertDate", typeof(System.DateTime));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            var companyRefNumParameter = companyRefNum.HasValue ?
                new ObjectParameter("CompanyRefNum", companyRefNum) :
                new ObjectParameter("CompanyRefNum", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(int));
    
            var cIIParameter = cII.HasValue ?
                new ObjectParameter("CII", cII) :
                new ObjectParameter("CII", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveExperianHistory", serviceLogIdParameter, insertDateParameter, typeParameter, scoreParameter, customerIdParameter, directorIdParameter, companyRefNumParameter, balanceParameter, cIIParameter);
        }
    
        public virtual int SavePassword(Nullable<int> targetID, string password)
        {
            var targetIDParameter = targetID.HasValue ?
                new ObjectParameter("TargetID", targetID) :
                new ObjectParameter("TargetID", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SavePassword", targetIDParameter, passwordParameter);
        }
    
        public virtual int SavePricingModelConfigsForScenario(string scenarioName, Nullable<decimal> tenurePercents, Nullable<decimal> setupFee, Nullable<decimal> profitMarkupPercentsOfRevenue, Nullable<decimal> opexAndCapex, Nullable<decimal> interestOnlyPeriod, Nullable<decimal> euCollectionRate, Nullable<decimal> defaultRateCompanyShare, Nullable<decimal> debtPercentOfCapital, Nullable<decimal> costOfDebtPA, Nullable<decimal> collectionRate, Nullable<decimal> cogs, Nullable<decimal> brokerSetupFee)
        {
            var scenarioNameParameter = scenarioName != null ?
                new ObjectParameter("ScenarioName", scenarioName) :
                new ObjectParameter("ScenarioName", typeof(string));
    
            var tenurePercentsParameter = tenurePercents.HasValue ?
                new ObjectParameter("TenurePercents", tenurePercents) :
                new ObjectParameter("TenurePercents", typeof(decimal));
    
            var setupFeeParameter = setupFee.HasValue ?
                new ObjectParameter("SetupFee", setupFee) :
                new ObjectParameter("SetupFee", typeof(decimal));
    
            var profitMarkupPercentsOfRevenueParameter = profitMarkupPercentsOfRevenue.HasValue ?
                new ObjectParameter("ProfitMarkupPercentsOfRevenue", profitMarkupPercentsOfRevenue) :
                new ObjectParameter("ProfitMarkupPercentsOfRevenue", typeof(decimal));
    
            var opexAndCapexParameter = opexAndCapex.HasValue ?
                new ObjectParameter("OpexAndCapex", opexAndCapex) :
                new ObjectParameter("OpexAndCapex", typeof(decimal));
    
            var interestOnlyPeriodParameter = interestOnlyPeriod.HasValue ?
                new ObjectParameter("InterestOnlyPeriod", interestOnlyPeriod) :
                new ObjectParameter("InterestOnlyPeriod", typeof(decimal));
    
            var euCollectionRateParameter = euCollectionRate.HasValue ?
                new ObjectParameter("EuCollectionRate", euCollectionRate) :
                new ObjectParameter("EuCollectionRate", typeof(decimal));
    
            var defaultRateCompanyShareParameter = defaultRateCompanyShare.HasValue ?
                new ObjectParameter("DefaultRateCompanyShare", defaultRateCompanyShare) :
                new ObjectParameter("DefaultRateCompanyShare", typeof(decimal));
    
            var debtPercentOfCapitalParameter = debtPercentOfCapital.HasValue ?
                new ObjectParameter("DebtPercentOfCapital", debtPercentOfCapital) :
                new ObjectParameter("DebtPercentOfCapital", typeof(decimal));
    
            var costOfDebtPAParameter = costOfDebtPA.HasValue ?
                new ObjectParameter("CostOfDebtPA", costOfDebtPA) :
                new ObjectParameter("CostOfDebtPA", typeof(decimal));
    
            var collectionRateParameter = collectionRate.HasValue ?
                new ObjectParameter("CollectionRate", collectionRate) :
                new ObjectParameter("CollectionRate", typeof(decimal));
    
            var cogsParameter = cogs.HasValue ?
                new ObjectParameter("Cogs", cogs) :
                new ObjectParameter("Cogs", typeof(decimal));
    
            var brokerSetupFeeParameter = brokerSetupFee.HasValue ?
                new ObjectParameter("BrokerSetupFee", brokerSetupFee) :
                new ObjectParameter("BrokerSetupFee", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SavePricingModelConfigsForScenario", scenarioNameParameter, tenurePercentsParameter, setupFeeParameter, profitMarkupPercentsOfRevenueParameter, opexAndCapexParameter, interestOnlyPeriodParameter, euCollectionRateParameter, defaultRateCompanyShareParameter, debtPercentOfCapitalParameter, costOfDebtPAParameter, collectionRateParameter, cogsParameter, brokerSetupFeeParameter);
        }
    
        public virtual int SetAmlResultInactive(string lookupKey, Nullable<long> serviceLogId)
        {
            var lookupKeyParameter = lookupKey != null ?
                new ObjectParameter("LookupKey", lookupKey) :
                new ObjectParameter("LookupKey", typeof(string));
    
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetAmlResultInactive", lookupKeyParameter, serviceLogIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SetCustomerPasswordByToken(string email, string ezPassword, Nullable<System.Guid> tokenID, Nullable<bool> isBrokerLead, Nullable<System.DateTime> now)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ezPasswordParameter = ezPassword != null ?
                new ObjectParameter("EzPassword", ezPassword) :
                new ObjectParameter("EzPassword", typeof(string));
    
            var tokenIDParameter = tokenID.HasValue ?
                new ObjectParameter("TokenID", tokenID) :
                new ObjectParameter("TokenID", typeof(System.Guid));
    
            var isBrokerLeadParameter = isBrokerLead.HasValue ?
                new ObjectParameter("IsBrokerLead", isBrokerLead) :
                new ObjectParameter("IsBrokerLead", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SetCustomerPasswordByToken", emailParameter, ezPasswordParameter, tokenIDParameter, isBrokerLeadParameter, nowParameter);
        }
    
        public virtual int SetLateBy14Days(Nullable<int> loanId)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetLateBy14Days", loanIdParameter);
        }
    
        public virtual ObjectResult<SetLateLoanStatusGetConfigs_Result> SetLateLoanStatusGetConfigs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SetLateLoanStatusGetConfigs_Result>("SetLateLoanStatusGetConfigs");
        }
    
        public virtual int SetZooplaIntEstimate(Nullable<int> id, Nullable<int> intValue)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var intValueParameter = intValue.HasValue ?
                new ObjectParameter("IntValue", intValue) :
                new ObjectParameter("IntValue", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetZooplaIntEstimate", idParameter, intValueParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> ShouldStopSendingLateMails(Nullable<int> loanId)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("ShouldStopSendingLateMails", loanIdParameter);
        }
    
        public virtual int SpDropIndicesByColumn(string tableName, string columnName)
        {
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpDropIndicesByColumn", tableNameParameter, columnNameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> StartMarketplaceUpdate(Nullable<int> marketplaceID, Nullable<System.DateTime> updatingStart)
        {
            var marketplaceIDParameter = marketplaceID.HasValue ?
                new ObjectParameter("MarketplaceID", marketplaceID) :
                new ObjectParameter("MarketplaceID", typeof(int));
    
            var updatingStartParameter = updatingStart.HasValue ?
                new ObjectParameter("UpdatingStart", updatingStart) :
                new ObjectParameter("UpdatingStart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("StartMarketplaceUpdate", marketplaceIDParameter, updatingStartParameter);
        }
    
        public virtual int StoreMobileCode(string phone, string code)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreMobileCode", phoneParameter, codeParameter);
        }
    
        public virtual int StoreNewMedal(Nullable<int> customerId, Nullable<int> businessScore, Nullable<decimal> businessScoreWeight, Nullable<decimal> businessScoreGrade, Nullable<decimal> businessScoreScore, Nullable<decimal> freeCashFlow, Nullable<decimal> freeCashFlowWeight, Nullable<decimal> freeCashFlowGrade, Nullable<decimal> freeCashFlowScore, Nullable<decimal> annualTurnover, Nullable<decimal> annualTurnoverWeight, Nullable<decimal> annualTurnoverGrade, Nullable<decimal> annualTurnoverScore, Nullable<decimal> tangibleEquity, Nullable<decimal> tangibleEquityWeight, Nullable<decimal> tangibleEquityGrade, Nullable<decimal> tangibleEquityScore, Nullable<System.DateTime> businessSeniority, Nullable<decimal> businessSeniorityWeight, Nullable<decimal> businessSeniorityGrade, Nullable<decimal> businessSeniorityScore, Nullable<int> consumerScore, Nullable<decimal> consumerScoreWeight, Nullable<decimal> consumerScoreGrade, Nullable<decimal> consumerScoreScore, Nullable<decimal> netWorth, Nullable<decimal> netWorthWeight, Nullable<decimal> netWorthGrade, Nullable<decimal> netWorthScore, string maritalStatus, Nullable<decimal> maritalStatusWeight, Nullable<decimal> maritalStatusGrade, Nullable<decimal> maritalStatusScore, Nullable<System.DateTime> ezbobSeniority, Nullable<decimal> ezbobSeniorityWeight, Nullable<decimal> ezbobSeniorityGrade, Nullable<decimal> ezbobSeniorityScore, Nullable<int> numOfLoans, Nullable<decimal> numOfLoansWeight, Nullable<decimal> numOfLoansGrade, Nullable<decimal> numOfLoansScore, Nullable<int> numOfLateRepayments, Nullable<decimal> numOfLateRepaymentsWeight, Nullable<decimal> numOfLateRepaymentsGrade, Nullable<decimal> numOfLateRepaymentsScore, Nullable<int> numOfEarlyRepayments, Nullable<decimal> numOfEarlyRepaymentsWeight, Nullable<decimal> numOfEarlyRepaymentsGrade, Nullable<decimal> numOfEarlyRepaymentsScore, Nullable<decimal> totalScore, Nullable<decimal> totalScoreNormalized, string medal, string error, Nullable<decimal> freeCashFlowValue, Nullable<decimal> tangibleEquityValue, Nullable<decimal> valueAdded, Nullable<bool> basedOnHmrcValues)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var businessScoreParameter = businessScore.HasValue ?
                new ObjectParameter("BusinessScore", businessScore) :
                new ObjectParameter("BusinessScore", typeof(int));
    
            var businessScoreWeightParameter = businessScoreWeight.HasValue ?
                new ObjectParameter("BusinessScoreWeight", businessScoreWeight) :
                new ObjectParameter("BusinessScoreWeight", typeof(decimal));
    
            var businessScoreGradeParameter = businessScoreGrade.HasValue ?
                new ObjectParameter("BusinessScoreGrade", businessScoreGrade) :
                new ObjectParameter("BusinessScoreGrade", typeof(decimal));
    
            var businessScoreScoreParameter = businessScoreScore.HasValue ?
                new ObjectParameter("BusinessScoreScore", businessScoreScore) :
                new ObjectParameter("BusinessScoreScore", typeof(decimal));
    
            var freeCashFlowParameter = freeCashFlow.HasValue ?
                new ObjectParameter("FreeCashFlow", freeCashFlow) :
                new ObjectParameter("FreeCashFlow", typeof(decimal));
    
            var freeCashFlowWeightParameter = freeCashFlowWeight.HasValue ?
                new ObjectParameter("FreeCashFlowWeight", freeCashFlowWeight) :
                new ObjectParameter("FreeCashFlowWeight", typeof(decimal));
    
            var freeCashFlowGradeParameter = freeCashFlowGrade.HasValue ?
                new ObjectParameter("FreeCashFlowGrade", freeCashFlowGrade) :
                new ObjectParameter("FreeCashFlowGrade", typeof(decimal));
    
            var freeCashFlowScoreParameter = freeCashFlowScore.HasValue ?
                new ObjectParameter("FreeCashFlowScore", freeCashFlowScore) :
                new ObjectParameter("FreeCashFlowScore", typeof(decimal));
    
            var annualTurnoverParameter = annualTurnover.HasValue ?
                new ObjectParameter("AnnualTurnover", annualTurnover) :
                new ObjectParameter("AnnualTurnover", typeof(decimal));
    
            var annualTurnoverWeightParameter = annualTurnoverWeight.HasValue ?
                new ObjectParameter("AnnualTurnoverWeight", annualTurnoverWeight) :
                new ObjectParameter("AnnualTurnoverWeight", typeof(decimal));
    
            var annualTurnoverGradeParameter = annualTurnoverGrade.HasValue ?
                new ObjectParameter("AnnualTurnoverGrade", annualTurnoverGrade) :
                new ObjectParameter("AnnualTurnoverGrade", typeof(decimal));
    
            var annualTurnoverScoreParameter = annualTurnoverScore.HasValue ?
                new ObjectParameter("AnnualTurnoverScore", annualTurnoverScore) :
                new ObjectParameter("AnnualTurnoverScore", typeof(decimal));
    
            var tangibleEquityParameter = tangibleEquity.HasValue ?
                new ObjectParameter("TangibleEquity", tangibleEquity) :
                new ObjectParameter("TangibleEquity", typeof(decimal));
    
            var tangibleEquityWeightParameter = tangibleEquityWeight.HasValue ?
                new ObjectParameter("TangibleEquityWeight", tangibleEquityWeight) :
                new ObjectParameter("TangibleEquityWeight", typeof(decimal));
    
            var tangibleEquityGradeParameter = tangibleEquityGrade.HasValue ?
                new ObjectParameter("TangibleEquityGrade", tangibleEquityGrade) :
                new ObjectParameter("TangibleEquityGrade", typeof(decimal));
    
            var tangibleEquityScoreParameter = tangibleEquityScore.HasValue ?
                new ObjectParameter("TangibleEquityScore", tangibleEquityScore) :
                new ObjectParameter("TangibleEquityScore", typeof(decimal));
    
            var businessSeniorityParameter = businessSeniority.HasValue ?
                new ObjectParameter("BusinessSeniority", businessSeniority) :
                new ObjectParameter("BusinessSeniority", typeof(System.DateTime));
    
            var businessSeniorityWeightParameter = businessSeniorityWeight.HasValue ?
                new ObjectParameter("BusinessSeniorityWeight", businessSeniorityWeight) :
                new ObjectParameter("BusinessSeniorityWeight", typeof(decimal));
    
            var businessSeniorityGradeParameter = businessSeniorityGrade.HasValue ?
                new ObjectParameter("BusinessSeniorityGrade", businessSeniorityGrade) :
                new ObjectParameter("BusinessSeniorityGrade", typeof(decimal));
    
            var businessSeniorityScoreParameter = businessSeniorityScore.HasValue ?
                new ObjectParameter("BusinessSeniorityScore", businessSeniorityScore) :
                new ObjectParameter("BusinessSeniorityScore", typeof(decimal));
    
            var consumerScoreParameter = consumerScore.HasValue ?
                new ObjectParameter("ConsumerScore", consumerScore) :
                new ObjectParameter("ConsumerScore", typeof(int));
    
            var consumerScoreWeightParameter = consumerScoreWeight.HasValue ?
                new ObjectParameter("ConsumerScoreWeight", consumerScoreWeight) :
                new ObjectParameter("ConsumerScoreWeight", typeof(decimal));
    
            var consumerScoreGradeParameter = consumerScoreGrade.HasValue ?
                new ObjectParameter("ConsumerScoreGrade", consumerScoreGrade) :
                new ObjectParameter("ConsumerScoreGrade", typeof(decimal));
    
            var consumerScoreScoreParameter = consumerScoreScore.HasValue ?
                new ObjectParameter("ConsumerScoreScore", consumerScoreScore) :
                new ObjectParameter("ConsumerScoreScore", typeof(decimal));
    
            var netWorthParameter = netWorth.HasValue ?
                new ObjectParameter("NetWorth", netWorth) :
                new ObjectParameter("NetWorth", typeof(decimal));
    
            var netWorthWeightParameter = netWorthWeight.HasValue ?
                new ObjectParameter("NetWorthWeight", netWorthWeight) :
                new ObjectParameter("NetWorthWeight", typeof(decimal));
    
            var netWorthGradeParameter = netWorthGrade.HasValue ?
                new ObjectParameter("NetWorthGrade", netWorthGrade) :
                new ObjectParameter("NetWorthGrade", typeof(decimal));
    
            var netWorthScoreParameter = netWorthScore.HasValue ?
                new ObjectParameter("NetWorthScore", netWorthScore) :
                new ObjectParameter("NetWorthScore", typeof(decimal));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var maritalStatusWeightParameter = maritalStatusWeight.HasValue ?
                new ObjectParameter("MaritalStatusWeight", maritalStatusWeight) :
                new ObjectParameter("MaritalStatusWeight", typeof(decimal));
    
            var maritalStatusGradeParameter = maritalStatusGrade.HasValue ?
                new ObjectParameter("MaritalStatusGrade", maritalStatusGrade) :
                new ObjectParameter("MaritalStatusGrade", typeof(decimal));
    
            var maritalStatusScoreParameter = maritalStatusScore.HasValue ?
                new ObjectParameter("MaritalStatusScore", maritalStatusScore) :
                new ObjectParameter("MaritalStatusScore", typeof(decimal));
    
            var ezbobSeniorityParameter = ezbobSeniority.HasValue ?
                new ObjectParameter("EzbobSeniority", ezbobSeniority) :
                new ObjectParameter("EzbobSeniority", typeof(System.DateTime));
    
            var ezbobSeniorityWeightParameter = ezbobSeniorityWeight.HasValue ?
                new ObjectParameter("EzbobSeniorityWeight", ezbobSeniorityWeight) :
                new ObjectParameter("EzbobSeniorityWeight", typeof(decimal));
    
            var ezbobSeniorityGradeParameter = ezbobSeniorityGrade.HasValue ?
                new ObjectParameter("EzbobSeniorityGrade", ezbobSeniorityGrade) :
                new ObjectParameter("EzbobSeniorityGrade", typeof(decimal));
    
            var ezbobSeniorityScoreParameter = ezbobSeniorityScore.HasValue ?
                new ObjectParameter("EzbobSeniorityScore", ezbobSeniorityScore) :
                new ObjectParameter("EzbobSeniorityScore", typeof(decimal));
    
            var numOfLoansParameter = numOfLoans.HasValue ?
                new ObjectParameter("NumOfLoans", numOfLoans) :
                new ObjectParameter("NumOfLoans", typeof(int));
    
            var numOfLoansWeightParameter = numOfLoansWeight.HasValue ?
                new ObjectParameter("NumOfLoansWeight", numOfLoansWeight) :
                new ObjectParameter("NumOfLoansWeight", typeof(decimal));
    
            var numOfLoansGradeParameter = numOfLoansGrade.HasValue ?
                new ObjectParameter("NumOfLoansGrade", numOfLoansGrade) :
                new ObjectParameter("NumOfLoansGrade", typeof(decimal));
    
            var numOfLoansScoreParameter = numOfLoansScore.HasValue ?
                new ObjectParameter("NumOfLoansScore", numOfLoansScore) :
                new ObjectParameter("NumOfLoansScore", typeof(decimal));
    
            var numOfLateRepaymentsParameter = numOfLateRepayments.HasValue ?
                new ObjectParameter("NumOfLateRepayments", numOfLateRepayments) :
                new ObjectParameter("NumOfLateRepayments", typeof(int));
    
            var numOfLateRepaymentsWeightParameter = numOfLateRepaymentsWeight.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsWeight", numOfLateRepaymentsWeight) :
                new ObjectParameter("NumOfLateRepaymentsWeight", typeof(decimal));
    
            var numOfLateRepaymentsGradeParameter = numOfLateRepaymentsGrade.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsGrade", numOfLateRepaymentsGrade) :
                new ObjectParameter("NumOfLateRepaymentsGrade", typeof(decimal));
    
            var numOfLateRepaymentsScoreParameter = numOfLateRepaymentsScore.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsScore", numOfLateRepaymentsScore) :
                new ObjectParameter("NumOfLateRepaymentsScore", typeof(decimal));
    
            var numOfEarlyRepaymentsParameter = numOfEarlyRepayments.HasValue ?
                new ObjectParameter("NumOfEarlyRepayments", numOfEarlyRepayments) :
                new ObjectParameter("NumOfEarlyRepayments", typeof(int));
    
            var numOfEarlyRepaymentsWeightParameter = numOfEarlyRepaymentsWeight.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsWeight", numOfEarlyRepaymentsWeight) :
                new ObjectParameter("NumOfEarlyRepaymentsWeight", typeof(decimal));
    
            var numOfEarlyRepaymentsGradeParameter = numOfEarlyRepaymentsGrade.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsGrade", numOfEarlyRepaymentsGrade) :
                new ObjectParameter("NumOfEarlyRepaymentsGrade", typeof(decimal));
    
            var numOfEarlyRepaymentsScoreParameter = numOfEarlyRepaymentsScore.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsScore", numOfEarlyRepaymentsScore) :
                new ObjectParameter("NumOfEarlyRepaymentsScore", typeof(decimal));
    
            var totalScoreParameter = totalScore.HasValue ?
                new ObjectParameter("TotalScore", totalScore) :
                new ObjectParameter("TotalScore", typeof(decimal));
    
            var totalScoreNormalizedParameter = totalScoreNormalized.HasValue ?
                new ObjectParameter("TotalScoreNormalized", totalScoreNormalized) :
                new ObjectParameter("TotalScoreNormalized", typeof(decimal));
    
            var medalParameter = medal != null ?
                new ObjectParameter("Medal", medal) :
                new ObjectParameter("Medal", typeof(string));
    
            var errorParameter = error != null ?
                new ObjectParameter("Error", error) :
                new ObjectParameter("Error", typeof(string));
    
            var freeCashFlowValueParameter = freeCashFlowValue.HasValue ?
                new ObjectParameter("FreeCashFlowValue", freeCashFlowValue) :
                new ObjectParameter("FreeCashFlowValue", typeof(decimal));
    
            var tangibleEquityValueParameter = tangibleEquityValue.HasValue ?
                new ObjectParameter("TangibleEquityValue", tangibleEquityValue) :
                new ObjectParameter("TangibleEquityValue", typeof(decimal));
    
            var valueAddedParameter = valueAdded.HasValue ?
                new ObjectParameter("ValueAdded", valueAdded) :
                new ObjectParameter("ValueAdded", typeof(decimal));
    
            var basedOnHmrcValuesParameter = basedOnHmrcValues.HasValue ?
                new ObjectParameter("BasedOnHmrcValues", basedOnHmrcValues) :
                new ObjectParameter("BasedOnHmrcValues", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreNewMedal", customerIdParameter, businessScoreParameter, businessScoreWeightParameter, businessScoreGradeParameter, businessScoreScoreParameter, freeCashFlowParameter, freeCashFlowWeightParameter, freeCashFlowGradeParameter, freeCashFlowScoreParameter, annualTurnoverParameter, annualTurnoverWeightParameter, annualTurnoverGradeParameter, annualTurnoverScoreParameter, tangibleEquityParameter, tangibleEquityWeightParameter, tangibleEquityGradeParameter, tangibleEquityScoreParameter, businessSeniorityParameter, businessSeniorityWeightParameter, businessSeniorityGradeParameter, businessSeniorityScoreParameter, consumerScoreParameter, consumerScoreWeightParameter, consumerScoreGradeParameter, consumerScoreScoreParameter, netWorthParameter, netWorthWeightParameter, netWorthGradeParameter, netWorthScoreParameter, maritalStatusParameter, maritalStatusWeightParameter, maritalStatusGradeParameter, maritalStatusScoreParameter, ezbobSeniorityParameter, ezbobSeniorityWeightParameter, ezbobSeniorityGradeParameter, ezbobSeniorityScoreParameter, numOfLoansParameter, numOfLoansWeightParameter, numOfLoansGradeParameter, numOfLoansScoreParameter, numOfLateRepaymentsParameter, numOfLateRepaymentsWeightParameter, numOfLateRepaymentsGradeParameter, numOfLateRepaymentsScoreParameter, numOfEarlyRepaymentsParameter, numOfEarlyRepaymentsWeightParameter, numOfEarlyRepaymentsGradeParameter, numOfEarlyRepaymentsScoreParameter, totalScoreParameter, totalScoreNormalizedParameter, medalParameter, errorParameter, freeCashFlowValueParameter, tangibleEquityValueParameter, valueAddedParameter, basedOnHmrcValuesParameter);
        }
    
        public virtual int StoreNewMedalForComparison1(Nullable<int> customerId, Nullable<int> businessScore, Nullable<decimal> businessScoreWeight, Nullable<decimal> businessScoreGrade, Nullable<decimal> businessScoreScore, Nullable<decimal> freeCashFlow, Nullable<decimal> freeCashFlowWeight, Nullable<decimal> freeCashFlowGrade, Nullable<decimal> freeCashFlowScore, Nullable<decimal> annualTurnover, Nullable<decimal> annualTurnoverWeight, Nullable<decimal> annualTurnoverGrade, Nullable<decimal> annualTurnoverScore, Nullable<decimal> tangibleEquity, Nullable<decimal> tangibleEquityWeight, Nullable<decimal> tangibleEquityGrade, Nullable<decimal> tangibleEquityScore, Nullable<System.DateTime> businessSeniority, Nullable<decimal> businessSeniorityWeight, Nullable<decimal> businessSeniorityGrade, Nullable<decimal> businessSeniorityScore, Nullable<int> consumerScore, Nullable<decimal> consumerScoreWeight, Nullable<decimal> consumerScoreGrade, Nullable<decimal> consumerScoreScore, Nullable<decimal> netWorth, Nullable<decimal> netWorthWeight, Nullable<decimal> netWorthGrade, Nullable<decimal> netWorthScore, string maritalStatus, Nullable<decimal> maritalStatusWeight, Nullable<decimal> maritalStatusGrade, Nullable<decimal> maritalStatusScore, Nullable<System.DateTime> ezbobSeniority, Nullable<decimal> ezbobSeniorityWeight, Nullable<decimal> ezbobSeniorityGrade, Nullable<decimal> ezbobSeniorityScore, Nullable<int> numOfLoans, Nullable<decimal> numOfLoansWeight, Nullable<decimal> numOfLoansGrade, Nullable<decimal> numOfLoansScore, Nullable<int> numOfLateRepayments, Nullable<decimal> numOfLateRepaymentsWeight, Nullable<decimal> numOfLateRepaymentsGrade, Nullable<decimal> numOfLateRepaymentsScore, Nullable<int> numOfEarlyRepayments, Nullable<decimal> numOfEarlyRepaymentsWeight, Nullable<decimal> numOfEarlyRepaymentsGrade, Nullable<decimal> numOfEarlyRepaymentsScore, Nullable<decimal> totalScore, Nullable<decimal> totalScoreNormalized, string medal, string error, Nullable<decimal> freeCashFlowValue, Nullable<decimal> tangibleEquityValue, Nullable<decimal> valueAdded, Nullable<bool> basedOnHmrcValues)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var businessScoreParameter = businessScore.HasValue ?
                new ObjectParameter("BusinessScore", businessScore) :
                new ObjectParameter("BusinessScore", typeof(int));
    
            var businessScoreWeightParameter = businessScoreWeight.HasValue ?
                new ObjectParameter("BusinessScoreWeight", businessScoreWeight) :
                new ObjectParameter("BusinessScoreWeight", typeof(decimal));
    
            var businessScoreGradeParameter = businessScoreGrade.HasValue ?
                new ObjectParameter("BusinessScoreGrade", businessScoreGrade) :
                new ObjectParameter("BusinessScoreGrade", typeof(decimal));
    
            var businessScoreScoreParameter = businessScoreScore.HasValue ?
                new ObjectParameter("BusinessScoreScore", businessScoreScore) :
                new ObjectParameter("BusinessScoreScore", typeof(decimal));
    
            var freeCashFlowParameter = freeCashFlow.HasValue ?
                new ObjectParameter("FreeCashFlow", freeCashFlow) :
                new ObjectParameter("FreeCashFlow", typeof(decimal));
    
            var freeCashFlowWeightParameter = freeCashFlowWeight.HasValue ?
                new ObjectParameter("FreeCashFlowWeight", freeCashFlowWeight) :
                new ObjectParameter("FreeCashFlowWeight", typeof(decimal));
    
            var freeCashFlowGradeParameter = freeCashFlowGrade.HasValue ?
                new ObjectParameter("FreeCashFlowGrade", freeCashFlowGrade) :
                new ObjectParameter("FreeCashFlowGrade", typeof(decimal));
    
            var freeCashFlowScoreParameter = freeCashFlowScore.HasValue ?
                new ObjectParameter("FreeCashFlowScore", freeCashFlowScore) :
                new ObjectParameter("FreeCashFlowScore", typeof(decimal));
    
            var annualTurnoverParameter = annualTurnover.HasValue ?
                new ObjectParameter("AnnualTurnover", annualTurnover) :
                new ObjectParameter("AnnualTurnover", typeof(decimal));
    
            var annualTurnoverWeightParameter = annualTurnoverWeight.HasValue ?
                new ObjectParameter("AnnualTurnoverWeight", annualTurnoverWeight) :
                new ObjectParameter("AnnualTurnoverWeight", typeof(decimal));
    
            var annualTurnoverGradeParameter = annualTurnoverGrade.HasValue ?
                new ObjectParameter("AnnualTurnoverGrade", annualTurnoverGrade) :
                new ObjectParameter("AnnualTurnoverGrade", typeof(decimal));
    
            var annualTurnoverScoreParameter = annualTurnoverScore.HasValue ?
                new ObjectParameter("AnnualTurnoverScore", annualTurnoverScore) :
                new ObjectParameter("AnnualTurnoverScore", typeof(decimal));
    
            var tangibleEquityParameter = tangibleEquity.HasValue ?
                new ObjectParameter("TangibleEquity", tangibleEquity) :
                new ObjectParameter("TangibleEquity", typeof(decimal));
    
            var tangibleEquityWeightParameter = tangibleEquityWeight.HasValue ?
                new ObjectParameter("TangibleEquityWeight", tangibleEquityWeight) :
                new ObjectParameter("TangibleEquityWeight", typeof(decimal));
    
            var tangibleEquityGradeParameter = tangibleEquityGrade.HasValue ?
                new ObjectParameter("TangibleEquityGrade", tangibleEquityGrade) :
                new ObjectParameter("TangibleEquityGrade", typeof(decimal));
    
            var tangibleEquityScoreParameter = tangibleEquityScore.HasValue ?
                new ObjectParameter("TangibleEquityScore", tangibleEquityScore) :
                new ObjectParameter("TangibleEquityScore", typeof(decimal));
    
            var businessSeniorityParameter = businessSeniority.HasValue ?
                new ObjectParameter("BusinessSeniority", businessSeniority) :
                new ObjectParameter("BusinessSeniority", typeof(System.DateTime));
    
            var businessSeniorityWeightParameter = businessSeniorityWeight.HasValue ?
                new ObjectParameter("BusinessSeniorityWeight", businessSeniorityWeight) :
                new ObjectParameter("BusinessSeniorityWeight", typeof(decimal));
    
            var businessSeniorityGradeParameter = businessSeniorityGrade.HasValue ?
                new ObjectParameter("BusinessSeniorityGrade", businessSeniorityGrade) :
                new ObjectParameter("BusinessSeniorityGrade", typeof(decimal));
    
            var businessSeniorityScoreParameter = businessSeniorityScore.HasValue ?
                new ObjectParameter("BusinessSeniorityScore", businessSeniorityScore) :
                new ObjectParameter("BusinessSeniorityScore", typeof(decimal));
    
            var consumerScoreParameter = consumerScore.HasValue ?
                new ObjectParameter("ConsumerScore", consumerScore) :
                new ObjectParameter("ConsumerScore", typeof(int));
    
            var consumerScoreWeightParameter = consumerScoreWeight.HasValue ?
                new ObjectParameter("ConsumerScoreWeight", consumerScoreWeight) :
                new ObjectParameter("ConsumerScoreWeight", typeof(decimal));
    
            var consumerScoreGradeParameter = consumerScoreGrade.HasValue ?
                new ObjectParameter("ConsumerScoreGrade", consumerScoreGrade) :
                new ObjectParameter("ConsumerScoreGrade", typeof(decimal));
    
            var consumerScoreScoreParameter = consumerScoreScore.HasValue ?
                new ObjectParameter("ConsumerScoreScore", consumerScoreScore) :
                new ObjectParameter("ConsumerScoreScore", typeof(decimal));
    
            var netWorthParameter = netWorth.HasValue ?
                new ObjectParameter("NetWorth", netWorth) :
                new ObjectParameter("NetWorth", typeof(decimal));
    
            var netWorthWeightParameter = netWorthWeight.HasValue ?
                new ObjectParameter("NetWorthWeight", netWorthWeight) :
                new ObjectParameter("NetWorthWeight", typeof(decimal));
    
            var netWorthGradeParameter = netWorthGrade.HasValue ?
                new ObjectParameter("NetWorthGrade", netWorthGrade) :
                new ObjectParameter("NetWorthGrade", typeof(decimal));
    
            var netWorthScoreParameter = netWorthScore.HasValue ?
                new ObjectParameter("NetWorthScore", netWorthScore) :
                new ObjectParameter("NetWorthScore", typeof(decimal));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var maritalStatusWeightParameter = maritalStatusWeight.HasValue ?
                new ObjectParameter("MaritalStatusWeight", maritalStatusWeight) :
                new ObjectParameter("MaritalStatusWeight", typeof(decimal));
    
            var maritalStatusGradeParameter = maritalStatusGrade.HasValue ?
                new ObjectParameter("MaritalStatusGrade", maritalStatusGrade) :
                new ObjectParameter("MaritalStatusGrade", typeof(decimal));
    
            var maritalStatusScoreParameter = maritalStatusScore.HasValue ?
                new ObjectParameter("MaritalStatusScore", maritalStatusScore) :
                new ObjectParameter("MaritalStatusScore", typeof(decimal));
    
            var ezbobSeniorityParameter = ezbobSeniority.HasValue ?
                new ObjectParameter("EzbobSeniority", ezbobSeniority) :
                new ObjectParameter("EzbobSeniority", typeof(System.DateTime));
    
            var ezbobSeniorityWeightParameter = ezbobSeniorityWeight.HasValue ?
                new ObjectParameter("EzbobSeniorityWeight", ezbobSeniorityWeight) :
                new ObjectParameter("EzbobSeniorityWeight", typeof(decimal));
    
            var ezbobSeniorityGradeParameter = ezbobSeniorityGrade.HasValue ?
                new ObjectParameter("EzbobSeniorityGrade", ezbobSeniorityGrade) :
                new ObjectParameter("EzbobSeniorityGrade", typeof(decimal));
    
            var ezbobSeniorityScoreParameter = ezbobSeniorityScore.HasValue ?
                new ObjectParameter("EzbobSeniorityScore", ezbobSeniorityScore) :
                new ObjectParameter("EzbobSeniorityScore", typeof(decimal));
    
            var numOfLoansParameter = numOfLoans.HasValue ?
                new ObjectParameter("NumOfLoans", numOfLoans) :
                new ObjectParameter("NumOfLoans", typeof(int));
    
            var numOfLoansWeightParameter = numOfLoansWeight.HasValue ?
                new ObjectParameter("NumOfLoansWeight", numOfLoansWeight) :
                new ObjectParameter("NumOfLoansWeight", typeof(decimal));
    
            var numOfLoansGradeParameter = numOfLoansGrade.HasValue ?
                new ObjectParameter("NumOfLoansGrade", numOfLoansGrade) :
                new ObjectParameter("NumOfLoansGrade", typeof(decimal));
    
            var numOfLoansScoreParameter = numOfLoansScore.HasValue ?
                new ObjectParameter("NumOfLoansScore", numOfLoansScore) :
                new ObjectParameter("NumOfLoansScore", typeof(decimal));
    
            var numOfLateRepaymentsParameter = numOfLateRepayments.HasValue ?
                new ObjectParameter("NumOfLateRepayments", numOfLateRepayments) :
                new ObjectParameter("NumOfLateRepayments", typeof(int));
    
            var numOfLateRepaymentsWeightParameter = numOfLateRepaymentsWeight.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsWeight", numOfLateRepaymentsWeight) :
                new ObjectParameter("NumOfLateRepaymentsWeight", typeof(decimal));
    
            var numOfLateRepaymentsGradeParameter = numOfLateRepaymentsGrade.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsGrade", numOfLateRepaymentsGrade) :
                new ObjectParameter("NumOfLateRepaymentsGrade", typeof(decimal));
    
            var numOfLateRepaymentsScoreParameter = numOfLateRepaymentsScore.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsScore", numOfLateRepaymentsScore) :
                new ObjectParameter("NumOfLateRepaymentsScore", typeof(decimal));
    
            var numOfEarlyRepaymentsParameter = numOfEarlyRepayments.HasValue ?
                new ObjectParameter("NumOfEarlyRepayments", numOfEarlyRepayments) :
                new ObjectParameter("NumOfEarlyRepayments", typeof(int));
    
            var numOfEarlyRepaymentsWeightParameter = numOfEarlyRepaymentsWeight.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsWeight", numOfEarlyRepaymentsWeight) :
                new ObjectParameter("NumOfEarlyRepaymentsWeight", typeof(decimal));
    
            var numOfEarlyRepaymentsGradeParameter = numOfEarlyRepaymentsGrade.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsGrade", numOfEarlyRepaymentsGrade) :
                new ObjectParameter("NumOfEarlyRepaymentsGrade", typeof(decimal));
    
            var numOfEarlyRepaymentsScoreParameter = numOfEarlyRepaymentsScore.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsScore", numOfEarlyRepaymentsScore) :
                new ObjectParameter("NumOfEarlyRepaymentsScore", typeof(decimal));
    
            var totalScoreParameter = totalScore.HasValue ?
                new ObjectParameter("TotalScore", totalScore) :
                new ObjectParameter("TotalScore", typeof(decimal));
    
            var totalScoreNormalizedParameter = totalScoreNormalized.HasValue ?
                new ObjectParameter("TotalScoreNormalized", totalScoreNormalized) :
                new ObjectParameter("TotalScoreNormalized", typeof(decimal));
    
            var medalParameter = medal != null ?
                new ObjectParameter("Medal", medal) :
                new ObjectParameter("Medal", typeof(string));
    
            var errorParameter = error != null ?
                new ObjectParameter("Error", error) :
                new ObjectParameter("Error", typeof(string));
    
            var freeCashFlowValueParameter = freeCashFlowValue.HasValue ?
                new ObjectParameter("FreeCashFlowValue", freeCashFlowValue) :
                new ObjectParameter("FreeCashFlowValue", typeof(decimal));
    
            var tangibleEquityValueParameter = tangibleEquityValue.HasValue ?
                new ObjectParameter("TangibleEquityValue", tangibleEquityValue) :
                new ObjectParameter("TangibleEquityValue", typeof(decimal));
    
            var valueAddedParameter = valueAdded.HasValue ?
                new ObjectParameter("ValueAdded", valueAdded) :
                new ObjectParameter("ValueAdded", typeof(decimal));
    
            var basedOnHmrcValuesParameter = basedOnHmrcValues.HasValue ?
                new ObjectParameter("BasedOnHmrcValues", basedOnHmrcValues) :
                new ObjectParameter("BasedOnHmrcValues", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreNewMedalForComparison1", customerIdParameter, businessScoreParameter, businessScoreWeightParameter, businessScoreGradeParameter, businessScoreScoreParameter, freeCashFlowParameter, freeCashFlowWeightParameter, freeCashFlowGradeParameter, freeCashFlowScoreParameter, annualTurnoverParameter, annualTurnoverWeightParameter, annualTurnoverGradeParameter, annualTurnoverScoreParameter, tangibleEquityParameter, tangibleEquityWeightParameter, tangibleEquityGradeParameter, tangibleEquityScoreParameter, businessSeniorityParameter, businessSeniorityWeightParameter, businessSeniorityGradeParameter, businessSeniorityScoreParameter, consumerScoreParameter, consumerScoreWeightParameter, consumerScoreGradeParameter, consumerScoreScoreParameter, netWorthParameter, netWorthWeightParameter, netWorthGradeParameter, netWorthScoreParameter, maritalStatusParameter, maritalStatusWeightParameter, maritalStatusGradeParameter, maritalStatusScoreParameter, ezbobSeniorityParameter, ezbobSeniorityWeightParameter, ezbobSeniorityGradeParameter, ezbobSeniorityScoreParameter, numOfLoansParameter, numOfLoansWeightParameter, numOfLoansGradeParameter, numOfLoansScoreParameter, numOfLateRepaymentsParameter, numOfLateRepaymentsWeightParameter, numOfLateRepaymentsGradeParameter, numOfLateRepaymentsScoreParameter, numOfEarlyRepaymentsParameter, numOfEarlyRepaymentsWeightParameter, numOfEarlyRepaymentsGradeParameter, numOfEarlyRepaymentsScoreParameter, totalScoreParameter, totalScoreNormalizedParameter, medalParameter, errorParameter, freeCashFlowValueParameter, tangibleEquityValueParameter, valueAddedParameter, basedOnHmrcValuesParameter);
        }
    
        public virtual int StoreNewMedalForComparison2(Nullable<int> customerId, Nullable<int> businessScore, Nullable<decimal> businessScoreWeight, Nullable<decimal> businessScoreGrade, Nullable<decimal> businessScoreScore, Nullable<decimal> freeCashFlow, Nullable<decimal> freeCashFlowWeight, Nullable<decimal> freeCashFlowGrade, Nullable<decimal> freeCashFlowScore, Nullable<decimal> annualTurnover, Nullable<decimal> annualTurnoverWeight, Nullable<decimal> annualTurnoverGrade, Nullable<decimal> annualTurnoverScore, Nullable<decimal> tangibleEquity, Nullable<decimal> tangibleEquityWeight, Nullable<decimal> tangibleEquityGrade, Nullable<decimal> tangibleEquityScore, Nullable<System.DateTime> businessSeniority, Nullable<decimal> businessSeniorityWeight, Nullable<decimal> businessSeniorityGrade, Nullable<decimal> businessSeniorityScore, Nullable<int> consumerScore, Nullable<decimal> consumerScoreWeight, Nullable<decimal> consumerScoreGrade, Nullable<decimal> consumerScoreScore, Nullable<decimal> netWorth, Nullable<decimal> netWorthWeight, Nullable<decimal> netWorthGrade, Nullable<decimal> netWorthScore, string maritalStatus, Nullable<decimal> maritalStatusWeight, Nullable<decimal> maritalStatusGrade, Nullable<decimal> maritalStatusScore, Nullable<System.DateTime> ezbobSeniority, Nullable<decimal> ezbobSeniorityWeight, Nullable<decimal> ezbobSeniorityGrade, Nullable<decimal> ezbobSeniorityScore, Nullable<int> numOfLoans, Nullable<decimal> numOfLoansWeight, Nullable<decimal> numOfLoansGrade, Nullable<decimal> numOfLoansScore, Nullable<int> numOfLateRepayments, Nullable<decimal> numOfLateRepaymentsWeight, Nullable<decimal> numOfLateRepaymentsGrade, Nullable<decimal> numOfLateRepaymentsScore, Nullable<int> numOfEarlyRepayments, Nullable<decimal> numOfEarlyRepaymentsWeight, Nullable<decimal> numOfEarlyRepaymentsGrade, Nullable<decimal> numOfEarlyRepaymentsScore, Nullable<decimal> totalScore, Nullable<decimal> totalScoreNormalized, string medal, string error, Nullable<decimal> freeCashFlowValue, Nullable<decimal> tangibleEquityValue, Nullable<decimal> valueAdded, Nullable<bool> basedOnHmrcValues)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var businessScoreParameter = businessScore.HasValue ?
                new ObjectParameter("BusinessScore", businessScore) :
                new ObjectParameter("BusinessScore", typeof(int));
    
            var businessScoreWeightParameter = businessScoreWeight.HasValue ?
                new ObjectParameter("BusinessScoreWeight", businessScoreWeight) :
                new ObjectParameter("BusinessScoreWeight", typeof(decimal));
    
            var businessScoreGradeParameter = businessScoreGrade.HasValue ?
                new ObjectParameter("BusinessScoreGrade", businessScoreGrade) :
                new ObjectParameter("BusinessScoreGrade", typeof(decimal));
    
            var businessScoreScoreParameter = businessScoreScore.HasValue ?
                new ObjectParameter("BusinessScoreScore", businessScoreScore) :
                new ObjectParameter("BusinessScoreScore", typeof(decimal));
    
            var freeCashFlowParameter = freeCashFlow.HasValue ?
                new ObjectParameter("FreeCashFlow", freeCashFlow) :
                new ObjectParameter("FreeCashFlow", typeof(decimal));
    
            var freeCashFlowWeightParameter = freeCashFlowWeight.HasValue ?
                new ObjectParameter("FreeCashFlowWeight", freeCashFlowWeight) :
                new ObjectParameter("FreeCashFlowWeight", typeof(decimal));
    
            var freeCashFlowGradeParameter = freeCashFlowGrade.HasValue ?
                new ObjectParameter("FreeCashFlowGrade", freeCashFlowGrade) :
                new ObjectParameter("FreeCashFlowGrade", typeof(decimal));
    
            var freeCashFlowScoreParameter = freeCashFlowScore.HasValue ?
                new ObjectParameter("FreeCashFlowScore", freeCashFlowScore) :
                new ObjectParameter("FreeCashFlowScore", typeof(decimal));
    
            var annualTurnoverParameter = annualTurnover.HasValue ?
                new ObjectParameter("AnnualTurnover", annualTurnover) :
                new ObjectParameter("AnnualTurnover", typeof(decimal));
    
            var annualTurnoverWeightParameter = annualTurnoverWeight.HasValue ?
                new ObjectParameter("AnnualTurnoverWeight", annualTurnoverWeight) :
                new ObjectParameter("AnnualTurnoverWeight", typeof(decimal));
    
            var annualTurnoverGradeParameter = annualTurnoverGrade.HasValue ?
                new ObjectParameter("AnnualTurnoverGrade", annualTurnoverGrade) :
                new ObjectParameter("AnnualTurnoverGrade", typeof(decimal));
    
            var annualTurnoverScoreParameter = annualTurnoverScore.HasValue ?
                new ObjectParameter("AnnualTurnoverScore", annualTurnoverScore) :
                new ObjectParameter("AnnualTurnoverScore", typeof(decimal));
    
            var tangibleEquityParameter = tangibleEquity.HasValue ?
                new ObjectParameter("TangibleEquity", tangibleEquity) :
                new ObjectParameter("TangibleEquity", typeof(decimal));
    
            var tangibleEquityWeightParameter = tangibleEquityWeight.HasValue ?
                new ObjectParameter("TangibleEquityWeight", tangibleEquityWeight) :
                new ObjectParameter("TangibleEquityWeight", typeof(decimal));
    
            var tangibleEquityGradeParameter = tangibleEquityGrade.HasValue ?
                new ObjectParameter("TangibleEquityGrade", tangibleEquityGrade) :
                new ObjectParameter("TangibleEquityGrade", typeof(decimal));
    
            var tangibleEquityScoreParameter = tangibleEquityScore.HasValue ?
                new ObjectParameter("TangibleEquityScore", tangibleEquityScore) :
                new ObjectParameter("TangibleEquityScore", typeof(decimal));
    
            var businessSeniorityParameter = businessSeniority.HasValue ?
                new ObjectParameter("BusinessSeniority", businessSeniority) :
                new ObjectParameter("BusinessSeniority", typeof(System.DateTime));
    
            var businessSeniorityWeightParameter = businessSeniorityWeight.HasValue ?
                new ObjectParameter("BusinessSeniorityWeight", businessSeniorityWeight) :
                new ObjectParameter("BusinessSeniorityWeight", typeof(decimal));
    
            var businessSeniorityGradeParameter = businessSeniorityGrade.HasValue ?
                new ObjectParameter("BusinessSeniorityGrade", businessSeniorityGrade) :
                new ObjectParameter("BusinessSeniorityGrade", typeof(decimal));
    
            var businessSeniorityScoreParameter = businessSeniorityScore.HasValue ?
                new ObjectParameter("BusinessSeniorityScore", businessSeniorityScore) :
                new ObjectParameter("BusinessSeniorityScore", typeof(decimal));
    
            var consumerScoreParameter = consumerScore.HasValue ?
                new ObjectParameter("ConsumerScore", consumerScore) :
                new ObjectParameter("ConsumerScore", typeof(int));
    
            var consumerScoreWeightParameter = consumerScoreWeight.HasValue ?
                new ObjectParameter("ConsumerScoreWeight", consumerScoreWeight) :
                new ObjectParameter("ConsumerScoreWeight", typeof(decimal));
    
            var consumerScoreGradeParameter = consumerScoreGrade.HasValue ?
                new ObjectParameter("ConsumerScoreGrade", consumerScoreGrade) :
                new ObjectParameter("ConsumerScoreGrade", typeof(decimal));
    
            var consumerScoreScoreParameter = consumerScoreScore.HasValue ?
                new ObjectParameter("ConsumerScoreScore", consumerScoreScore) :
                new ObjectParameter("ConsumerScoreScore", typeof(decimal));
    
            var netWorthParameter = netWorth.HasValue ?
                new ObjectParameter("NetWorth", netWorth) :
                new ObjectParameter("NetWorth", typeof(decimal));
    
            var netWorthWeightParameter = netWorthWeight.HasValue ?
                new ObjectParameter("NetWorthWeight", netWorthWeight) :
                new ObjectParameter("NetWorthWeight", typeof(decimal));
    
            var netWorthGradeParameter = netWorthGrade.HasValue ?
                new ObjectParameter("NetWorthGrade", netWorthGrade) :
                new ObjectParameter("NetWorthGrade", typeof(decimal));
    
            var netWorthScoreParameter = netWorthScore.HasValue ?
                new ObjectParameter("NetWorthScore", netWorthScore) :
                new ObjectParameter("NetWorthScore", typeof(decimal));
    
            var maritalStatusParameter = maritalStatus != null ?
                new ObjectParameter("MaritalStatus", maritalStatus) :
                new ObjectParameter("MaritalStatus", typeof(string));
    
            var maritalStatusWeightParameter = maritalStatusWeight.HasValue ?
                new ObjectParameter("MaritalStatusWeight", maritalStatusWeight) :
                new ObjectParameter("MaritalStatusWeight", typeof(decimal));
    
            var maritalStatusGradeParameter = maritalStatusGrade.HasValue ?
                new ObjectParameter("MaritalStatusGrade", maritalStatusGrade) :
                new ObjectParameter("MaritalStatusGrade", typeof(decimal));
    
            var maritalStatusScoreParameter = maritalStatusScore.HasValue ?
                new ObjectParameter("MaritalStatusScore", maritalStatusScore) :
                new ObjectParameter("MaritalStatusScore", typeof(decimal));
    
            var ezbobSeniorityParameter = ezbobSeniority.HasValue ?
                new ObjectParameter("EzbobSeniority", ezbobSeniority) :
                new ObjectParameter("EzbobSeniority", typeof(System.DateTime));
    
            var ezbobSeniorityWeightParameter = ezbobSeniorityWeight.HasValue ?
                new ObjectParameter("EzbobSeniorityWeight", ezbobSeniorityWeight) :
                new ObjectParameter("EzbobSeniorityWeight", typeof(decimal));
    
            var ezbobSeniorityGradeParameter = ezbobSeniorityGrade.HasValue ?
                new ObjectParameter("EzbobSeniorityGrade", ezbobSeniorityGrade) :
                new ObjectParameter("EzbobSeniorityGrade", typeof(decimal));
    
            var ezbobSeniorityScoreParameter = ezbobSeniorityScore.HasValue ?
                new ObjectParameter("EzbobSeniorityScore", ezbobSeniorityScore) :
                new ObjectParameter("EzbobSeniorityScore", typeof(decimal));
    
            var numOfLoansParameter = numOfLoans.HasValue ?
                new ObjectParameter("NumOfLoans", numOfLoans) :
                new ObjectParameter("NumOfLoans", typeof(int));
    
            var numOfLoansWeightParameter = numOfLoansWeight.HasValue ?
                new ObjectParameter("NumOfLoansWeight", numOfLoansWeight) :
                new ObjectParameter("NumOfLoansWeight", typeof(decimal));
    
            var numOfLoansGradeParameter = numOfLoansGrade.HasValue ?
                new ObjectParameter("NumOfLoansGrade", numOfLoansGrade) :
                new ObjectParameter("NumOfLoansGrade", typeof(decimal));
    
            var numOfLoansScoreParameter = numOfLoansScore.HasValue ?
                new ObjectParameter("NumOfLoansScore", numOfLoansScore) :
                new ObjectParameter("NumOfLoansScore", typeof(decimal));
    
            var numOfLateRepaymentsParameter = numOfLateRepayments.HasValue ?
                new ObjectParameter("NumOfLateRepayments", numOfLateRepayments) :
                new ObjectParameter("NumOfLateRepayments", typeof(int));
    
            var numOfLateRepaymentsWeightParameter = numOfLateRepaymentsWeight.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsWeight", numOfLateRepaymentsWeight) :
                new ObjectParameter("NumOfLateRepaymentsWeight", typeof(decimal));
    
            var numOfLateRepaymentsGradeParameter = numOfLateRepaymentsGrade.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsGrade", numOfLateRepaymentsGrade) :
                new ObjectParameter("NumOfLateRepaymentsGrade", typeof(decimal));
    
            var numOfLateRepaymentsScoreParameter = numOfLateRepaymentsScore.HasValue ?
                new ObjectParameter("NumOfLateRepaymentsScore", numOfLateRepaymentsScore) :
                new ObjectParameter("NumOfLateRepaymentsScore", typeof(decimal));
    
            var numOfEarlyRepaymentsParameter = numOfEarlyRepayments.HasValue ?
                new ObjectParameter("NumOfEarlyRepayments", numOfEarlyRepayments) :
                new ObjectParameter("NumOfEarlyRepayments", typeof(int));
    
            var numOfEarlyRepaymentsWeightParameter = numOfEarlyRepaymentsWeight.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsWeight", numOfEarlyRepaymentsWeight) :
                new ObjectParameter("NumOfEarlyRepaymentsWeight", typeof(decimal));
    
            var numOfEarlyRepaymentsGradeParameter = numOfEarlyRepaymentsGrade.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsGrade", numOfEarlyRepaymentsGrade) :
                new ObjectParameter("NumOfEarlyRepaymentsGrade", typeof(decimal));
    
            var numOfEarlyRepaymentsScoreParameter = numOfEarlyRepaymentsScore.HasValue ?
                new ObjectParameter("NumOfEarlyRepaymentsScore", numOfEarlyRepaymentsScore) :
                new ObjectParameter("NumOfEarlyRepaymentsScore", typeof(decimal));
    
            var totalScoreParameter = totalScore.HasValue ?
                new ObjectParameter("TotalScore", totalScore) :
                new ObjectParameter("TotalScore", typeof(decimal));
    
            var totalScoreNormalizedParameter = totalScoreNormalized.HasValue ?
                new ObjectParameter("TotalScoreNormalized", totalScoreNormalized) :
                new ObjectParameter("TotalScoreNormalized", typeof(decimal));
    
            var medalParameter = medal != null ?
                new ObjectParameter("Medal", medal) :
                new ObjectParameter("Medal", typeof(string));
    
            var errorParameter = error != null ?
                new ObjectParameter("Error", error) :
                new ObjectParameter("Error", typeof(string));
    
            var freeCashFlowValueParameter = freeCashFlowValue.HasValue ?
                new ObjectParameter("FreeCashFlowValue", freeCashFlowValue) :
                new ObjectParameter("FreeCashFlowValue", typeof(decimal));
    
            var tangibleEquityValueParameter = tangibleEquityValue.HasValue ?
                new ObjectParameter("TangibleEquityValue", tangibleEquityValue) :
                new ObjectParameter("TangibleEquityValue", typeof(decimal));
    
            var valueAddedParameter = valueAdded.HasValue ?
                new ObjectParameter("ValueAdded", valueAdded) :
                new ObjectParameter("ValueAdded", typeof(decimal));
    
            var basedOnHmrcValuesParameter = basedOnHmrcValues.HasValue ?
                new ObjectParameter("BasedOnHmrcValues", basedOnHmrcValues) :
                new ObjectParameter("BasedOnHmrcValues", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StoreNewMedalForComparison2", customerIdParameter, businessScoreParameter, businessScoreWeightParameter, businessScoreGradeParameter, businessScoreScoreParameter, freeCashFlowParameter, freeCashFlowWeightParameter, freeCashFlowGradeParameter, freeCashFlowScoreParameter, annualTurnoverParameter, annualTurnoverWeightParameter, annualTurnoverGradeParameter, annualTurnoverScoreParameter, tangibleEquityParameter, tangibleEquityWeightParameter, tangibleEquityGradeParameter, tangibleEquityScoreParameter, businessSeniorityParameter, businessSeniorityWeightParameter, businessSeniorityGradeParameter, businessSeniorityScoreParameter, consumerScoreParameter, consumerScoreWeightParameter, consumerScoreGradeParameter, consumerScoreScoreParameter, netWorthParameter, netWorthWeightParameter, netWorthGradeParameter, netWorthScoreParameter, maritalStatusParameter, maritalStatusWeightParameter, maritalStatusGradeParameter, maritalStatusScoreParameter, ezbobSeniorityParameter, ezbobSeniorityWeightParameter, ezbobSeniorityGradeParameter, ezbobSeniorityScoreParameter, numOfLoansParameter, numOfLoansWeightParameter, numOfLoansGradeParameter, numOfLoansScoreParameter, numOfLateRepaymentsParameter, numOfLateRepaymentsWeightParameter, numOfLateRepaymentsGradeParameter, numOfLateRepaymentsScoreParameter, numOfEarlyRepaymentsParameter, numOfEarlyRepaymentsWeightParameter, numOfEarlyRepaymentsGradeParameter, numOfEarlyRepaymentsScoreParameter, totalScoreParameter, totalScoreNormalizedParameter, medalParameter, errorParameter, freeCashFlowValueParameter, tangibleEquityValueParameter, valueAddedParameter, basedOnHmrcValuesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Temp_GetAllCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Temp_GetAllCustomers");
        }
    
        public virtual ObjectResult<Nullable<int>> UiEventBrowserVersion(string version)
        {
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UiEventBrowserVersion", versionParameter);
        }
    
        public virtual ObjectResult<string> UiEventSave(string actionName, string userName, string controlName, string eventArgs, Nullable<int> browserVersionID, string htmlID, Nullable<long> refNum, string remoteIP, string sessionCookie, Nullable<System.DateTime> eventTime)
        {
            var actionNameParameter = actionName != null ?
                new ObjectParameter("ActionName", actionName) :
                new ObjectParameter("ActionName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var controlNameParameter = controlName != null ?
                new ObjectParameter("ControlName", controlName) :
                new ObjectParameter("ControlName", typeof(string));
    
            var eventArgsParameter = eventArgs != null ?
                new ObjectParameter("EventArgs", eventArgs) :
                new ObjectParameter("EventArgs", typeof(string));
    
            var browserVersionIDParameter = browserVersionID.HasValue ?
                new ObjectParameter("BrowserVersionID", browserVersionID) :
                new ObjectParameter("BrowserVersionID", typeof(int));
    
            var htmlIDParameter = htmlID != null ?
                new ObjectParameter("HtmlID", htmlID) :
                new ObjectParameter("HtmlID", typeof(string));
    
            var refNumParameter = refNum.HasValue ?
                new ObjectParameter("RefNum", refNum) :
                new ObjectParameter("RefNum", typeof(long));
    
            var remoteIPParameter = remoteIP != null ?
                new ObjectParameter("RemoteIP", remoteIP) :
                new ObjectParameter("RemoteIP", typeof(string));
    
            var sessionCookieParameter = sessionCookie != null ?
                new ObjectParameter("SessionCookie", sessionCookie) :
                new ObjectParameter("SessionCookie", typeof(string));
    
            var eventTimeParameter = eventTime.HasValue ?
                new ObjectParameter("EventTime", eventTime) :
                new ObjectParameter("EventTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UiEventSave", actionNameParameter, userNameParameter, controlNameParameter, eventArgsParameter, browserVersionIDParameter, htmlIDParameter, refNumParameter, remoteIPParameter, sessionCookieParameter, eventTimeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Update_Main_Strat_Finish_Date(Nullable<int> userId, Nullable<System.DateTime> now)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Update_Main_Strat_Finish_Date", userIdParameter, nowParameter);
        }
    
        public virtual int UpdateAmlResult(Nullable<int> customerId, string amlResult, Nullable<int> amlScore, string amlDescription)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var amlResultParameter = amlResult != null ?
                new ObjectParameter("AmlResult", amlResult) :
                new ObjectParameter("AmlResult", typeof(string));
    
            var amlScoreParameter = amlScore.HasValue ?
                new ObjectParameter("AmlScore", amlScore) :
                new ObjectParameter("AmlScore", typeof(int));
    
            var amlDescriptionParameter = amlDescription != null ?
                new ObjectParameter("AmlDescription", amlDescription) :
                new ObjectParameter("AmlDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAmlResult", customerIdParameter, amlResultParameter, amlScoreParameter, amlDescriptionParameter);
        }
    
        public virtual int UpdateAutoApproval(Nullable<int> customerId, Nullable<int> autoApproveAmount)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var autoApproveAmountParameter = autoApproveAmount.HasValue ?
                new ObjectParameter("AutoApproveAmount", autoApproveAmount) :
                new ObjectParameter("AutoApproveAmount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAutoApproval", customerIdParameter, autoApproveAmountParameter);
        }
    
        public virtual int UpdateBankBasedAutoApproval(Nullable<int> customerId, Nullable<int> autoApproveAmount, Nullable<int> repaymentPeriod)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var autoApproveAmountParameter = autoApproveAmount.HasValue ?
                new ObjectParameter("AutoApproveAmount", autoApproveAmount) :
                new ObjectParameter("AutoApproveAmount", typeof(int));
    
            var repaymentPeriodParameter = repaymentPeriod.HasValue ?
                new ObjectParameter("RepaymentPeriod", repaymentPeriod) :
                new ObjectParameter("RepaymentPeriod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBankBasedAutoApproval", customerIdParameter, autoApproveAmountParameter, repaymentPeriodParameter);
        }
    
        public virtual int UpdateBwaResult(Nullable<int> customerId, string bwaResult)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var bwaResultParameter = bwaResult != null ?
                new ObjectParameter("BwaResult", bwaResult) :
                new ObjectParameter("BwaResult", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBwaResult", customerIdParameter, bwaResultParameter);
        }
    
        public virtual int UpdateCashRequestsNew(Nullable<int> customerId, Nullable<int> systemCalculatedAmount, Nullable<int> managerApprovedSum, string systemDecision, string medalType, Nullable<decimal> scorePoints, Nullable<int> expirianRating, Nullable<int> anualTurnover, Nullable<decimal> interestRate, Nullable<int> manualSetupFeeAmount, Nullable<decimal> manualSetupFeePercent, Nullable<int> repaymentPeriod, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var systemCalculatedAmountParameter = systemCalculatedAmount.HasValue ?
                new ObjectParameter("SystemCalculatedAmount", systemCalculatedAmount) :
                new ObjectParameter("SystemCalculatedAmount", typeof(int));
    
            var managerApprovedSumParameter = managerApprovedSum.HasValue ?
                new ObjectParameter("ManagerApprovedSum", managerApprovedSum) :
                new ObjectParameter("ManagerApprovedSum", typeof(int));
    
            var systemDecisionParameter = systemDecision != null ?
                new ObjectParameter("SystemDecision", systemDecision) :
                new ObjectParameter("SystemDecision", typeof(string));
    
            var medalTypeParameter = medalType != null ?
                new ObjectParameter("MedalType", medalType) :
                new ObjectParameter("MedalType", typeof(string));
    
            var scorePointsParameter = scorePoints.HasValue ?
                new ObjectParameter("ScorePoints", scorePoints) :
                new ObjectParameter("ScorePoints", typeof(decimal));
    
            var expirianRatingParameter = expirianRating.HasValue ?
                new ObjectParameter("ExpirianRating", expirianRating) :
                new ObjectParameter("ExpirianRating", typeof(int));
    
            var anualTurnoverParameter = anualTurnover.HasValue ?
                new ObjectParameter("AnualTurnover", anualTurnover) :
                new ObjectParameter("AnualTurnover", typeof(int));
    
            var interestRateParameter = interestRate.HasValue ?
                new ObjectParameter("InterestRate", interestRate) :
                new ObjectParameter("InterestRate", typeof(decimal));
    
            var manualSetupFeeAmountParameter = manualSetupFeeAmount.HasValue ?
                new ObjectParameter("ManualSetupFeeAmount", manualSetupFeeAmount) :
                new ObjectParameter("ManualSetupFeeAmount", typeof(int));
    
            var manualSetupFeePercentParameter = manualSetupFeePercent.HasValue ?
                new ObjectParameter("ManualSetupFeePercent", manualSetupFeePercent) :
                new ObjectParameter("ManualSetupFeePercent", typeof(decimal));
    
            var repaymentPeriodParameter = repaymentPeriod.HasValue ?
                new ObjectParameter("RepaymentPeriod", repaymentPeriod) :
                new ObjectParameter("RepaymentPeriod", typeof(int));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCashRequestsNew", customerIdParameter, systemCalculatedAmountParameter, managerApprovedSumParameter, systemDecisionParameter, medalTypeParameter, scorePointsParameter, expirianRatingParameter, anualTurnoverParameter, interestRateParameter, manualSetupFeeAmountParameter, manualSetupFeePercentParameter, repaymentPeriodParameter, nowParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateCashRequestsReApproval(Nullable<int> customerId, string underwriterDecision, Nullable<decimal> managerApprovedSum, Nullable<decimal> aPR, Nullable<int> repaymentPeriod, Nullable<decimal> interestRate, Nullable<int> useSetupFee, Nullable<int> emailSendingBanned, Nullable<int> loanTypeId, string underwriterComment, Nullable<int> isLoanTypeSelectionAllowed, Nullable<int> discountPlanId, Nullable<int> experianRating, Nullable<int> loanSourceId, Nullable<int> isCustomerRepaymentPeriodSelectionAllowed, Nullable<bool> useBrokerSetupFee, Nullable<System.DateTime> now)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var underwriterDecisionParameter = underwriterDecision != null ?
                new ObjectParameter("UnderwriterDecision", underwriterDecision) :
                new ObjectParameter("UnderwriterDecision", typeof(string));
    
            var managerApprovedSumParameter = managerApprovedSum.HasValue ?
                new ObjectParameter("ManagerApprovedSum", managerApprovedSum) :
                new ObjectParameter("ManagerApprovedSum", typeof(decimal));
    
            var aPRParameter = aPR.HasValue ?
                new ObjectParameter("APR", aPR) :
                new ObjectParameter("APR", typeof(decimal));
    
            var repaymentPeriodParameter = repaymentPeriod.HasValue ?
                new ObjectParameter("RepaymentPeriod", repaymentPeriod) :
                new ObjectParameter("RepaymentPeriod", typeof(int));
    
            var interestRateParameter = interestRate.HasValue ?
                new ObjectParameter("InterestRate", interestRate) :
                new ObjectParameter("InterestRate", typeof(decimal));
    
            var useSetupFeeParameter = useSetupFee.HasValue ?
                new ObjectParameter("UseSetupFee", useSetupFee) :
                new ObjectParameter("UseSetupFee", typeof(int));
    
            var emailSendingBannedParameter = emailSendingBanned.HasValue ?
                new ObjectParameter("EmailSendingBanned", emailSendingBanned) :
                new ObjectParameter("EmailSendingBanned", typeof(int));
    
            var loanTypeIdParameter = loanTypeId.HasValue ?
                new ObjectParameter("LoanTypeId", loanTypeId) :
                new ObjectParameter("LoanTypeId", typeof(int));
    
            var underwriterCommentParameter = underwriterComment != null ?
                new ObjectParameter("UnderwriterComment", underwriterComment) :
                new ObjectParameter("UnderwriterComment", typeof(string));
    
            var isLoanTypeSelectionAllowedParameter = isLoanTypeSelectionAllowed.HasValue ?
                new ObjectParameter("IsLoanTypeSelectionAllowed", isLoanTypeSelectionAllowed) :
                new ObjectParameter("IsLoanTypeSelectionAllowed", typeof(int));
    
            var discountPlanIdParameter = discountPlanId.HasValue ?
                new ObjectParameter("DiscountPlanId", discountPlanId) :
                new ObjectParameter("DiscountPlanId", typeof(int));
    
            var experianRatingParameter = experianRating.HasValue ?
                new ObjectParameter("ExperianRating", experianRating) :
                new ObjectParameter("ExperianRating", typeof(int));
    
            var loanSourceIdParameter = loanSourceId.HasValue ?
                new ObjectParameter("LoanSourceId", loanSourceId) :
                new ObjectParameter("LoanSourceId", typeof(int));
    
            var isCustomerRepaymentPeriodSelectionAllowedParameter = isCustomerRepaymentPeriodSelectionAllowed.HasValue ?
                new ObjectParameter("IsCustomerRepaymentPeriodSelectionAllowed", isCustomerRepaymentPeriodSelectionAllowed) :
                new ObjectParameter("IsCustomerRepaymentPeriodSelectionAllowed", typeof(int));
    
            var useBrokerSetupFeeParameter = useBrokerSetupFee.HasValue ?
                new ObjectParameter("UseBrokerSetupFee", useBrokerSetupFee) :
                new ObjectParameter("UseBrokerSetupFee", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateCashRequestsReApproval", customerIdParameter, underwriterDecisionParameter, managerApprovedSumParameter, aPRParameter, repaymentPeriodParameter, interestRateParameter, useSetupFeeParameter, emailSendingBannedParameter, loanTypeIdParameter, underwriterCommentParameter, isLoanTypeSelectionAllowedParameter, discountPlanIdParameter, experianRatingParameter, loanSourceIdParameter, isCustomerRepaymentPeriodSelectionAllowedParameter, useBrokerSetupFeeParameter, nowParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateCollection(Nullable<int> loanId, Nullable<decimal> late30, Nullable<int> late30Num, Nullable<decimal> late60, Nullable<int> late60Num, Nullable<decimal> late90, Nullable<int> late90Num, Nullable<decimal> pastDues, Nullable<int> pastDuesNum, Nullable<int> isDefaulted, Nullable<decimal> late90Plus, Nullable<decimal> late90PlusNum)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            var late30Parameter = late30.HasValue ?
                new ObjectParameter("Late30", late30) :
                new ObjectParameter("Late30", typeof(decimal));
    
            var late30NumParameter = late30Num.HasValue ?
                new ObjectParameter("Late30Num", late30Num) :
                new ObjectParameter("Late30Num", typeof(int));
    
            var late60Parameter = late60.HasValue ?
                new ObjectParameter("Late60", late60) :
                new ObjectParameter("Late60", typeof(decimal));
    
            var late60NumParameter = late60Num.HasValue ?
                new ObjectParameter("Late60Num", late60Num) :
                new ObjectParameter("Late60Num", typeof(int));
    
            var late90Parameter = late90.HasValue ?
                new ObjectParameter("Late90", late90) :
                new ObjectParameter("Late90", typeof(decimal));
    
            var late90NumParameter = late90Num.HasValue ?
                new ObjectParameter("Late90Num", late90Num) :
                new ObjectParameter("Late90Num", typeof(int));
    
            var pastDuesParameter = pastDues.HasValue ?
                new ObjectParameter("PastDues", pastDues) :
                new ObjectParameter("PastDues", typeof(decimal));
    
            var pastDuesNumParameter = pastDuesNum.HasValue ?
                new ObjectParameter("PastDuesNum", pastDuesNum) :
                new ObjectParameter("PastDuesNum", typeof(int));
    
            var isDefaultedParameter = isDefaulted.HasValue ?
                new ObjectParameter("IsDefaulted", isDefaulted) :
                new ObjectParameter("IsDefaulted", typeof(int));
    
            var late90PlusParameter = late90Plus.HasValue ?
                new ObjectParameter("Late90Plus", late90Plus) :
                new ObjectParameter("Late90Plus", typeof(decimal));
    
            var late90PlusNumParameter = late90PlusNum.HasValue ?
                new ObjectParameter("Late90PlusNum", late90PlusNum) :
                new ObjectParameter("Late90PlusNum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateCollection", loanIdParameter, late30Parameter, late30NumParameter, late60Parameter, late60NumParameter, late90Parameter, late90NumParameter, pastDuesParameter, pastDuesNumParameter, isDefaultedParameter, late90PlusParameter, late90PlusNumParameter);
        }
    
        public virtual int UpdateExperianDirectorDetails(Nullable<int> directorID, string email, string mobilePhone, string line1, string line2, string line3, string town, string county, string postcode)
        {
            var directorIDParameter = directorID.HasValue ?
                new ObjectParameter("DirectorID", directorID) :
                new ObjectParameter("DirectorID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var mobilePhoneParameter = mobilePhone != null ?
                new ObjectParameter("MobilePhone", mobilePhone) :
                new ObjectParameter("MobilePhone", typeof(string));
    
            var line1Parameter = line1 != null ?
                new ObjectParameter("Line1", line1) :
                new ObjectParameter("Line1", typeof(string));
    
            var line2Parameter = line2 != null ?
                new ObjectParameter("Line2", line2) :
                new ObjectParameter("Line2", typeof(string));
    
            var line3Parameter = line3 != null ?
                new ObjectParameter("Line3", line3) :
                new ObjectParameter("Line3", typeof(string));
    
            var townParameter = town != null ?
                new ObjectParameter("Town", town) :
                new ObjectParameter("Town", typeof(string));
    
            var countyParameter = county != null ?
                new ObjectParameter("County", county) :
                new ObjectParameter("County", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExperianDirectorDetails", directorIDParameter, emailParameter, mobilePhoneParameter, line1Parameter, line2Parameter, line3Parameter, townParameter, countyParameter, postcodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateFiveDaysDueMailSent(Nullable<int> id, Nullable<bool> updateFiveDaysDueMailSent)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var updateFiveDaysDueMailSentParameter = updateFiveDaysDueMailSent.HasValue ?
                new ObjectParameter("UpdateFiveDaysDueMailSent", updateFiveDaysDueMailSent) :
                new ObjectParameter("UpdateFiveDaysDueMailSent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateFiveDaysDueMailSent", idParameter, updateFiveDaysDueMailSentParameter);
        }
    
        public virtual int UpdateLastNotice(Nullable<int> loanScheduleId)
        {
            var loanScheduleIdParameter = loanScheduleId.HasValue ?
                new ObjectParameter("LoanScheduleId", loanScheduleId) :
                new ObjectParameter("LoanScheduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLastNotice", loanScheduleIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateLastReportedCAISstatus(Nullable<int> loanId, string cAISStatus)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            var cAISStatusParameter = cAISStatus != null ?
                new ObjectParameter("CAISStatus", cAISStatus) :
                new ObjectParameter("CAISStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateLastReportedCAISstatus", loanIdParameter, cAISStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateLoanScheduleCustomDate(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateLoanScheduleCustomDate", idParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateLoanScheduleStatus(Nullable<int> id, string status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateLoanScheduleStatus", idParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateLoanStatusToLate(Nullable<int> loanId, Nullable<int> customerId, string paymentStatus, string loanStatus)
        {
            var loanIdParameter = loanId.HasValue ?
                new ObjectParameter("LoanId", loanId) :
                new ObjectParameter("LoanId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var paymentStatusParameter = paymentStatus != null ?
                new ObjectParameter("PaymentStatus", paymentStatus) :
                new ObjectParameter("PaymentStatus", typeof(string));
    
            var loanStatusParameter = loanStatus != null ?
                new ObjectParameter("LoanStatus", loanStatus) :
                new ObjectParameter("LoanStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateLoanStatusToLate", loanIdParameter, customerIdParameter, paymentStatusParameter, loanStatusParameter);
        }
    
        public virtual int UpdateMarketplaceSecurityData(Nullable<int> customerMarketplaceID, byte[] securityData)
        {
            var customerMarketplaceIDParameter = customerMarketplaceID.HasValue ?
                new ObjectParameter("CustomerMarketplaceID", customerMarketplaceID) :
                new ObjectParameter("CustomerMarketplaceID", typeof(int));
    
            var securityDataParameter = securityData != null ?
                new ObjectParameter("SecurityData", securityData) :
                new ObjectParameter("SecurityData", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateMarketplaceSecurityData", customerMarketplaceIDParameter, securityDataParameter);
        }
    
        public virtual int UpdateScoringResultsNew(Nullable<int> customerId, string creditResult, string systemDecision, string status, string medal, Nullable<System.DateTime> validFor, Nullable<System.DateTime> now, Nullable<bool> overrideApprovedRejected)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var creditResultParameter = creditResult != null ?
                new ObjectParameter("CreditResult", creditResult) :
                new ObjectParameter("CreditResult", typeof(string));
    
            var systemDecisionParameter = systemDecision != null ?
                new ObjectParameter("SystemDecision", systemDecision) :
                new ObjectParameter("SystemDecision", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var medalParameter = medal != null ?
                new ObjectParameter("Medal", medal) :
                new ObjectParameter("Medal", typeof(string));
    
            var validForParameter = validFor.HasValue ?
                new ObjectParameter("ValidFor", validFor) :
                new ObjectParameter("ValidFor", typeof(System.DateTime));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            var overrideApprovedRejectedParameter = overrideApprovedRejected.HasValue ?
                new ObjectParameter("OverrideApprovedRejected", overrideApprovedRejected) :
                new ObjectParameter("OverrideApprovedRejected", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateScoringResultsNew", customerIdParameter, creditResultParameter, systemDecisionParameter, statusParameter, medalParameter, validForParameter, nowParameter, overrideApprovedRejectedParameter);
        }
    
        public virtual int UpdateServiceLogData(Nullable<long> serviceLogId, string firstname, string surname, string postcode, Nullable<System.DateTime> dateOfBirth, Nullable<int> score, Nullable<int> customerId, Nullable<int> directorId)
        {
            var serviceLogIdParameter = serviceLogId.HasValue ?
                new ObjectParameter("ServiceLogId", serviceLogId) :
                new ObjectParameter("ServiceLogId", typeof(long));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            var dateOfBirthParameter = dateOfBirth.HasValue ?
                new ObjectParameter("DateOfBirth", dateOfBirth) :
                new ObjectParameter("DateOfBirth", typeof(System.DateTime));
    
            var scoreParameter = score.HasValue ?
                new ObjectParameter("Score", score) :
                new ObjectParameter("Score", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var directorIdParameter = directorId.HasValue ?
                new ObjectParameter("DirectorId", directorId) :
                new ObjectParameter("DirectorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServiceLogData", serviceLogIdParameter, firstnameParameter, surnameParameter, postcodeParameter, dateOfBirthParameter, scoreParameter, customerIdParameter, directorIdParameter);
        }
    
        public virtual int UpdateTransactionStatus(string trackingId, string transactionStatus, string description)
        {
            var trackingIdParameter = trackingId != null ?
                new ObjectParameter("TrackingId", trackingId) :
                new ObjectParameter("TrackingId", typeof(string));
    
            var transactionStatusParameter = transactionStatus != null ?
                new ObjectParameter("TransactionStatus", transactionStatus) :
                new ObjectParameter("TransactionStatus", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTransactionStatus", trackingIdParameter, transactionStatusParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UpdateTwoDaysDueMailSent(Nullable<int> id, Nullable<bool> updateTwoDaysDueMailSent)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var updateTwoDaysDueMailSentParameter = updateTwoDaysDueMailSent.HasValue ?
                new ObjectParameter("UpdateTwoDaysDueMailSent", updateTwoDaysDueMailSent) :
                new ObjectParameter("UpdateTwoDaysDueMailSent", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UpdateTwoDaysDueMailSent", idParameter, updateTwoDaysDueMailSentParameter);
        }
    
        public virtual ObjectResult<string> UserChangeEmail(Nullable<int> userID, string email, string ezPassword, Nullable<System.Guid> requestID, string requestState, Nullable<System.DateTime> now)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ezPasswordParameter = ezPassword != null ?
                new ObjectParameter("EzPassword", ezPassword) :
                new ObjectParameter("EzPassword", typeof(string));
    
            var requestIDParameter = requestID.HasValue ?
                new ObjectParameter("RequestID", requestID) :
                new ObjectParameter("RequestID", typeof(System.Guid));
    
            var requestStateParameter = requestState != null ?
                new ObjectParameter("RequestState", requestState) :
                new ObjectParameter("RequestState", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserChangeEmail", userIDParameter, emailParameter, ezPasswordParameter, requestIDParameter, requestStateParameter, nowParameter);
        }
    
        public virtual ObjectResult<string> UserChangePassword(Nullable<int> userID, string ezPassword, Nullable<System.DateTime> now)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var ezPasswordParameter = ezPassword != null ?
                new ObjectParameter("EzPassword", ezPassword) :
                new ObjectParameter("EzPassword", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserChangePassword", userIDParameter, ezPasswordParameter, nowParameter);
        }
    
        public virtual ObjectResult<UserDataForLogin_Result> UserDataForLogin(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDataForLogin_Result>("UserDataForLogin", emailParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UserLoginCheckResult(Nullable<int> userID, string ezPassword, Nullable<int> isDeleted, Nullable<System.DateTime> lastBadLogin, Nullable<int> loginFailedCount, Nullable<bool> success, string errorMessage, string ip, Nullable<System.DateTime> now)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var ezPasswordParameter = ezPassword != null ?
                new ObjectParameter("EzPassword", ezPassword) :
                new ObjectParameter("EzPassword", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(int));
    
            var lastBadLoginParameter = lastBadLogin.HasValue ?
                new ObjectParameter("LastBadLogin", lastBadLogin) :
                new ObjectParameter("LastBadLogin", typeof(System.DateTime));
    
            var loginFailedCountParameter = loginFailedCount.HasValue ?
                new ObjectParameter("LoginFailedCount", loginFailedCount) :
                new ObjectParameter("LoginFailedCount", typeof(int));
    
            var successParameter = success.HasValue ?
                new ObjectParameter("Success", success) :
                new ObjectParameter("Success", typeof(bool));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("Ip", ip) :
                new ObjectParameter("Ip", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UserLoginCheckResult", userIDParameter, ezPasswordParameter, isDeletedParameter, lastBadLoginParameter, loginFailedCountParameter, successParameter, errorMessageParameter, ipParameter, nowParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UserResetPassword(string email, string ezPassword, Nullable<System.DateTime> now)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var ezPasswordParameter = ezPassword != null ?
                new ObjectParameter("EzPassword", ezPassword) :
                new ObjectParameter("EzPassword", typeof(string));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UserResetPassword", emailParameter, ezPasswordParameter, nowParameter);
        }
    
        public virtual ObjectResult<string> UserUpdateSecurityQuestion(Nullable<int> userID, Nullable<long> questionID, string answer)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var questionIDParameter = questionID.HasValue ?
                new ObjectParameter("QuestionID", questionID) :
                new ObjectParameter("QuestionID", typeof(long));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UserUpdateSecurityQuestion", userIDParameter, questionIDParameter, answerParameter);
        }
    
        public virtual ObjectResult<UwGetCounters_Result> UwGetCounters(Nullable<bool> isTest)
        {
            var isTestParameter = isTest.HasValue ?
                new ObjectParameter("isTest", isTest) :
                new ObjectParameter("isTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGetCounters_Result>("UwGetCounters", isTestParameter);
        }
    
        public virtual ObjectResult<UwGridAll_Result> UwGridAll(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridAll_Result>("UwGridAll", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridApproved_Result> UwGridApproved(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridApproved_Result>("UwGridApproved", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridBrokers_Result> UwGridBrokers(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridBrokers_Result>("UwGridBrokers", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridCollection_Result> UwGridCollection(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridCollection_Result>("UwGridCollection", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridEscalated_Result> UwGridEscalated(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridEscalated_Result>("UwGridEscalated", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridLate_Result> UwGridLate(Nullable<bool> withTest, Nullable<System.DateTime> now)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridLate_Result>("UwGridLate", withTestParameter, nowParameter);
        }
    
        public virtual ObjectResult<UwGridLoans_Result> UwGridLoans(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridLoans_Result>("UwGridLoans", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridLogbook_Result> UwGridLogbook(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridLogbook_Result>("UwGridLogbook", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridPending_Result> UwGridPending(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridPending_Result>("UwGridPending", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridRegistered_Result> UwGridRegistered(Nullable<bool> withTest, Nullable<bool> withAll, Nullable<System.DateTime> now)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            var withAllParameter = withAll.HasValue ?
                new ObjectParameter("WithAll", withAll) :
                new ObjectParameter("WithAll", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridRegistered_Result>("UwGridRegistered", withTestParameter, withAllParameter, nowParameter);
        }
    
        public virtual ObjectResult<UwGridRejected_Result> UwGridRejected(Nullable<bool> withTest, Nullable<System.DateTime> now)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridRejected_Result>("UwGridRejected", withTestParameter, nowParameter);
        }
    
        public virtual ObjectResult<UwGridSales_Result> UwGridSales(Nullable<bool> withTest, Nullable<System.DateTime> now)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            var nowParameter = now.HasValue ?
                new ObjectParameter("Now", now) :
                new ObjectParameter("Now", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridSales_Result>("UwGridSales", withTestParameter, nowParameter);
        }
    
        public virtual ObjectResult<UwGridSignature_Result> UwGridSignature(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridSignature_Result>("UwGridSignature", withTestParameter);
        }
    
        public virtual ObjectResult<UwGridWaiting_Result> UwGridWaiting(Nullable<bool> withTest)
        {
            var withTestParameter = withTest.HasValue ?
                new ObjectParameter("WithTest", withTest) :
                new ObjectParameter("WithTest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UwGridWaiting_Result>("UwGridWaiting", withTestParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> ValidateMobileCode(string phone, string code)
        {
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("ValidateMobileCode", phoneParameter, codeParameter);
        }
    }
}
