//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EzServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionMetaData", Namespace="http://schemas.datacontract.org/2004/07/EzService")]
    [System.SerializableAttribute()]
    public partial class ActionMetaData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ActionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSynchronousField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EzServiceReference.ActionStatus StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ActionID {
            get {
                return this.ActionIDField;
            }
            set {
                if ((this.ActionIDField.Equals(value) != true)) {
                    this.ActionIDField = value;
                    this.RaisePropertyChanged("ActionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSynchronous {
            get {
                return this.IsSynchronousField;
            }
            set {
                if ((this.IsSynchronousField.Equals(value) != true)) {
                    this.IsSynchronousField = value;
                    this.RaisePropertyChanged("IsSynchronous");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EzServiceReference.ActionStatus Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionStatus", Namespace="http://schemas.datacontract.org/2004/07/EzService")]
    public enum ActionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Done = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Finished = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Terminated = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActionResult", Namespace="http://schemas.datacontract.org/2004/07/EzService")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(EzServiceReference.StringListActionResult))]
    public partial class ActionResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EzServiceReference.ActionMetaData MetaDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EzServiceReference.ActionMetaData MetaData {
            get {
                return this.MetaDataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetaDataField, value) != true)) {
                    this.MetaDataField = value;
                    this.RaisePropertyChanged("MetaData");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StringListActionResult", Namespace="http://schemas.datacontract.org/2004/07/EzService")]
    [System.SerializableAttribute()]
    public partial class StringListActionResult : EzServiceReference.ActionResult {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RecordsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Records {
            get {
                return this.RecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordsField, value) != true)) {
                    this.RecordsField = value;
                    this.RaisePropertyChanged("Records");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EzServiceReference.IEzServiceAdmin")]
    public interface IEzServiceAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/Shutdown", ReplyAction="http://tempuri.org/IEzServiceAdmin/ShutdownResponse")]
        EzServiceReference.ActionMetaData Shutdown();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/Shutdown", ReplyAction="http://tempuri.org/IEzServiceAdmin/ShutdownResponse")]
        System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> ShutdownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/Nop", ReplyAction="http://tempuri.org/IEzServiceAdmin/NopResponse")]
        EzServiceReference.ActionMetaData Nop(int nLengthInSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/Nop", ReplyAction="http://tempuri.org/IEzServiceAdmin/NopResponse")]
        System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> NopAsync(int nLengthInSeconds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/Terminate", ReplyAction="http://tempuri.org/IEzServiceAdmin/TerminateResponse")]
        EzServiceReference.ActionMetaData Terminate(System.Guid sActionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/Terminate", ReplyAction="http://tempuri.org/IEzServiceAdmin/TerminateResponse")]
        System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> TerminateAsync(System.Guid sActionID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/ListActiveActions", ReplyAction="http://tempuri.org/IEzServiceAdmin/ListActiveActionsResponse")]
        EzServiceReference.StringListActionResult ListActiveActions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceAdmin/ListActiveActions", ReplyAction="http://tempuri.org/IEzServiceAdmin/ListActiveActionsResponse")]
        System.Threading.Tasks.Task<EzServiceReference.StringListActionResult> ListActiveActionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEzServiceAdminChannel : EzServiceReference.IEzServiceAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EzServiceAdminClient : System.ServiceModel.ClientBase<EzServiceReference.IEzServiceAdmin>, EzServiceReference.IEzServiceAdmin {
        
        public EzServiceAdminClient() {
        }
        
        public EzServiceAdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EzServiceAdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EzServiceAdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EzServiceAdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EzServiceReference.ActionMetaData Shutdown() {
            return base.Channel.Shutdown();
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> ShutdownAsync() {
            return base.Channel.ShutdownAsync();
        }
        
        public EzServiceReference.ActionMetaData Nop(int nLengthInSeconds) {
            return base.Channel.Nop(nLengthInSeconds);
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> NopAsync(int nLengthInSeconds) {
            return base.Channel.NopAsync(nLengthInSeconds);
        }
        
        public EzServiceReference.ActionMetaData Terminate(System.Guid sActionID) {
            return base.Channel.Terminate(sActionID);
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> TerminateAsync(System.Guid sActionID) {
            return base.Channel.TerminateAsync(sActionID);
        }
        
        public EzServiceReference.StringListActionResult ListActiveActions() {
            return base.Channel.ListActiveActions();
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.StringListActionResult> ListActiveActionsAsync() {
            return base.Channel.ListActiveActionsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EzServiceReference.IEzServiceClient")]
    public interface IEzServiceClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceClient/GetStrategiesList", ReplyAction="http://tempuri.org/IEzServiceClient/GetStrategiesListResponse")]
        EzServiceReference.StringListActionResult GetStrategiesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceClient/GetStrategiesList", ReplyAction="http://tempuri.org/IEzServiceClient/GetStrategiesListResponse")]
        System.Threading.Tasks.Task<EzServiceReference.StringListActionResult> GetStrategiesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceClient/GreetingMailStrategy", ReplyAction="http://tempuri.org/IEzServiceClient/GreetingMailStrategyResponse")]
        EzServiceReference.ActionMetaData GreetingMailStrategy(int nCustomerID, string sConfirmationEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceClient/GreetingMailStrategy", ReplyAction="http://tempuri.org/IEzServiceClient/GreetingMailStrategyResponse")]
        System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> GreetingMailStrategyAsync(int nCustomerID, string sConfirmationEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceClient/CustomerMarketplaceAdded", ReplyAction="http://tempuri.org/IEzServiceClient/CustomerMarketplaceAddedResponse")]
        EzServiceReference.ActionMetaData CustomerMarketplaceAdded(int nCustomerID, int nMarketplaceID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEzServiceClient/CustomerMarketplaceAdded", ReplyAction="http://tempuri.org/IEzServiceClient/CustomerMarketplaceAddedResponse")]
        System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> CustomerMarketplaceAddedAsync(int nCustomerID, int nMarketplaceID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEzServiceClientChannel : EzServiceReference.IEzServiceClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EzServiceClientClient : System.ServiceModel.ClientBase<EzServiceReference.IEzServiceClient>, EzServiceReference.IEzServiceClient {
        
        public EzServiceClientClient() {
        }
        
        public EzServiceClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EzServiceClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EzServiceClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EzServiceClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EzServiceReference.StringListActionResult GetStrategiesList() {
            return base.Channel.GetStrategiesList();
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.StringListActionResult> GetStrategiesListAsync() {
            return base.Channel.GetStrategiesListAsync();
        }
        
        public EzServiceReference.ActionMetaData GreetingMailStrategy(int nCustomerID, string sConfirmationEmail) {
            return base.Channel.GreetingMailStrategy(nCustomerID, sConfirmationEmail);
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> GreetingMailStrategyAsync(int nCustomerID, string sConfirmationEmail) {
            return base.Channel.GreetingMailStrategyAsync(nCustomerID, sConfirmationEmail);
        }
        
        public EzServiceReference.ActionMetaData CustomerMarketplaceAdded(int nCustomerID, int nMarketplaceID) {
            return base.Channel.CustomerMarketplaceAdded(nCustomerID, nMarketplaceID);
        }
        
        public System.Threading.Tasks.Task<EzServiceReference.ActionMetaData> CustomerMarketplaceAddedAsync(int nCustomerID, int nMarketplaceID) {
            return base.Channel.CustomerMarketplaceAddedAsync(nCustomerID, nMarketplaceID);
        }
    }
}
