IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ExpiredNodeExecutionsList]') AND type in (N'P', N'PC'))
DROP PROCEDURE [dbo].[ExpiredNodeExecutionsList]
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].ExpiredNodeExecutionsList
AS

BEGIN

SELECT
    STRATEGYENGINE_EXECUTIONSTATE.ID,
    STRATEGY_NODE.NODEID,
    STRATEGYENGINE_EXECUTIONSTATE.APPLICATIONID,
    APPLICATION_APPLICATION.CREATORUSERID,
    APPLICATION_APPLICATION.VERSION,
    STRATEGY_NODE.ISHARDREACTION,
    S.ID as SignalId,
    STRATEGYENGINE_EXECUTIONSTATE.STARTTIME as StartTime,
    STRATEGY_NODE.EXECUTIONDURATION as ExecutionDuration,
    APPLICATION_APPLICATION.AppCounter as OwnerApplicationId
FROM
    STRATEGYENGINE_EXECUTIONSTATE
    INNER JOIN STRATEGY_NODE WITH(NOLOCK)
        ON STRATEGY_NODE.NODEID = STRATEGYENGINE_EXECUTIONSTATE.CURRENTNODEID
    INNER JOIN APPLICATION_APPLICATION WITH(NOLOCK)
        ON STRATEGYENGINE_EXECUTIONSTATE.APPLICATIONID = APPLICATION_APPLICATION.APPLICATIONID
    LEFT OUTER JOIN Application_NodeSetting WITH(NOLOCK)
        ON STRATEGYENGINE_EXECUTIONSTATE.APPLICATIONID = Application_NodeSetting.APPLICATIONID 
           AND STRATEGYENGINE_EXECUTIONSTATE.CURRENTNODEID = Application_NodeSetting.NODEID
           AND STRATEGYENGINE_EXECUTIONSTATE.CURRENTNODEPOSTFIX = Application_NodeSetting.NODEPOSTFIX
           AND Application_NodeSetting.Name='timelimit'
    INNER JOIN Signal S WITH(NOLOCK)
        ON S.APPLICATIONID = APPLICATION_APPLICATION.APPLICATIONID
WHERE
    ((NOT(Application_NodeSetting.VALUE IS NULL)
      AND (getdate() > DATEADD(second, Application_NodeSetting.VALUE, STRATEGYENGINE_EXECUTIONSTATE.STARTTIME)))
     OR
     ((Application_NodeSetting.VALUE IS NULL)
      AND NOT(STRATEGY_NODE.ExecutionDURATION IS NULL OR STRATEGY_NODE.ExecutionDURATION = -1)
    AND getdate() > DATEADD(second, STRATEGY_NODE.ExecutionDURATION, STRATEGYENGINE_EXECUTIONSTATE.STARTTIME)))
    AND STRATEGYENGINE_EXECUTIONSTATE.ISTIMEOUTREPORTED IS NULL

UNION

SELECT
    STRATEGYENGINE_EXECUTIONSTATE.ID,
    NULL AS NODEID,
    STRATEGYENGINE_EXECUTIONSTATE.APPLICATIONID,
    APPLICATION_APPLICATION.CREATORUSERID,
    APPLICATION_APPLICATION.VERSION,
    1 AS ISHARDREACTION,
    S.ID as SignalId,
    STRATEGYENGINE_EXECUTIONSTATE.STARTTIME as StartTime,
    NULL as ExecutionDuration,
    APPLICATION_APPLICATION.AppCounter as OwnerApplicationId
FROM
    STRATEGYENGINE_EXECUTIONSTATE
    INNER JOIN APPLICATION_APPLICATION WITH(NOLOCK)
        ON STRATEGYENGINE_EXECUTIONSTATE.APPLICATIONID = APPLICATION_APPLICATION.APPLICATIONID
    INNER JOIN Application_NodeSetting WITH(NOLOCK)
        ON STRATEGYENGINE_EXECUTIONSTATE.APPLICATIONID = Application_NodeSetting.APPLICATIONID 
           AND STRATEGYENGINE_EXECUTIONSTATE.CURRENTNODEID IS NULL
           AND Application_NodeSetting.NODEID IS NULL
           AND STRATEGYENGINE_EXECUTIONSTATE.CURRENTNODEPOSTFIX = Application_NodeSetting.NODEPOSTFIX
           AND Application_NodeSetting.Name='timelimit'
    INNER JOIN Signal S WITH(NOLOCK)
        ON S.APPLICATIONID = APPLICATION_APPLICATION.APPLICATIONID
WHERE
    (NOT(Application_NodeSetting.VALUE IS NULL)
      AND (getdate() > DATEADD(second, Application_NodeSetting.VALUE, STRATEGYENGINE_EXECUTIONSTATE.STARTTIME)))
    AND STRATEGYENGINE_EXECUTIONSTATE.ISTIMEOUTREPORTED IS NULL

END;
GO
