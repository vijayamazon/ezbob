<?xml version="1.0" encoding="UTF-8"?><wsdl:definitions xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:ns0="http://svcs.paypal.com/services" xmlns:types="http://svcs.paypal.com/types/perm" xmlns:common="http://svcs.paypal.com/types/common" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="http://svcs.paypal.com/services">

	<wsdl:types>
		<xs:schema xmlns:tns="http://svcs.paypal.com/types/common" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://svcs.paypal.com/types/common">


			<xs:complexType name="ErrorData">
				<xs:sequence>
					<xs:element name="errorId" type="xs:long"/>
					<xs:element name="domain" type="xs:string"/>
					<xs:element name="subdomain" type="xs:string" minOccurs="0"/>
					<xs:element name="severity" type="tns:ErrorSeverity"/>
					<xs:element name="category" type="tns:ErrorCategory"/>
					<xs:element name="message" type="xs:string"/>
					<xs:element name="exceptionId" type="xs:token" minOccurs="0"/>
					<xs:element name="parameter" type="tns:ErrorParameter" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
				</xs:sequence>
			</xs:complexType>

			<xs:complexType name="ErrorParameter">
				<xs:simpleContent>
					<xs:extension base="xs:string">
						<xs:attribute name="name" type="xs:string"/>
					</xs:extension>
				</xs:simpleContent>
			</xs:complexType>

			<xs:simpleType name="ErrorSeverity">
				<xs:restriction base="xs:string">
					<xs:enumeration value="Error"/>
					<xs:enumeration value="Warning"/>
				</xs:restriction>
			</xs:simpleType>

			<xs:simpleType name="ErrorCategory">
				<xs:restriction base="xs:string">
					<xs:enumeration value="System"/>
					<xs:enumeration value="Application"/>
					<xs:enumeration value="Request"/>
				</xs:restriction>
			</xs:simpleType>

			<xs:complexType name="ResponseEnvelope">
				<xs:annotation>
					<xs:documentation>
						This is the sample message
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="timestamp" type="xs:dateTime" minOccurs="1" maxOccurs="1"/>
					<xs:element name="ack" minOccurs="0" type="tns:AckCode">
						<xs:annotation>
							<xs:documentation>
								Application level acknowledgment code.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="correlationId" type="xs:string" minOccurs="1" maxOccurs="1"/>
					<xs:element name="build" type="xs:string" minOccurs="1" maxOccurs="1"/>
					<xs:any namespace="other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="RequestEnvelope">
				<xs:annotation>
					<xs:documentation>
						This specifies the list of parameters with every
						request to the service.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<!-- This section was removed because the detailLevel was not found -->
					<!--  	<xs:element name="detailLevel"
						type="common:DetailLevelCode" minOccurs="0">
						<xs:annotation>
						<xs:documentation>
						This specifies the required detail level
						that is needed by a client application
						pertaining to a particular data
						component (e.g., Item, Transaction,
						etc.). The detail level is specified in
						the DetailLevelCodeType which has all
						the enumerated values of the detail
						level for each component.
						</xs:documentation>
						</xs:annotation>
						</xs:element>-->
					<xs:element name="errorLanguage" type="xs:string" minOccurs="1" default="en_US">
						<xs:annotation>
							<xs:documentation>
								This should be the standard RFC 3066
								language identification tag, e.g.,
								en_US.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:simpleType name="AckCode">
				<xs:annotation>
					<xs:documentation>
						AckCodeType This code identifies the
						acknowledgment code types that could be used to
						communicate the status of processing a (request)
						message to an application. This code would be
						used as part of a response message that contains
						an application level acknowledgment element.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:token">
					<xs:enumeration value="Success">
						<xs:annotation>
							<xs:documentation>
								Request processing succeeded.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Failure">
						<xs:annotation>
							<xs:documentation>
								Request processing failed.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="Warning">
						<xs:annotation>
							<xs:documentation>
								Request processing completed with
								warning information being included in
								the response message.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="SuccessWithWarning">
						<xs:annotation>
							<xs:documentation>
								Request processing completed successful
								with some with some warning information
								that could be useful for the requesting
								application to process and/or record.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="FailureWithWarning">
						<xs:annotation>
							<xs:documentation>
								Request processing failed with some
								error and warning information that
								requesting application should process to
								determine cause(s) of failure.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
					<xs:enumeration value="CustomCode">
						<xs:annotation>
							<xs:documentation>
								Reserved for internal or future use.
							</xs:documentation>
						</xs:annotation>
					</xs:enumeration>
				</xs:restriction>
			</xs:simpleType>

			<xs:complexType name="FaultMessage">
				<xs:sequence>
					<xs:element name="responseEnvelope" type="tns:ResponseEnvelope" minOccurs="1"/>
					<xs:element name="error" type="tns:ErrorData" minOccurs="0" maxOccurs="unbounded" nillable="true"/>
				</xs:sequence>
			</xs:complexType>

			<xs:element name="FaultMessage" nillable="true" type="common:FaultMessage"/>


		</xs:schema>

		<xs:schema xmlns:tns="http://svcs.paypal.com/types/perm" xmlns:jaxb="http://java.sun.com/xml/ns/jaxb" xmlns:annox="http://annox.dev.java.net" xmlns:ppv="http://annox.dev.java.net/com.paypal.foundation.validation.oval" xmlns:ov="http://annox.dev.java.net/net.sf.oval.constraint" attributeFormDefault="unqualified" elementFormDefault="unqualified" jaxb:version="2.1" targetNamespace="http://svcs.paypal.com/types/perm">

			<!--  jaxb:extensionBindingPrefixes="annox" -->

			<xs:import namespace="http://svcs.paypal.com/types/common"/>



			<!-- Begin: Request/Response for RequestPermissions operation -->
			<xs:complexType name="RequestPermissionsRequest">
				<xs:annotation>
					<xs:documentation>
						Describes the request for permissions over an
						account. Primary element is "scope", which lists
						the permissions needed.
					</xs:documentation>
					
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="requestEnvelope" type="common:RequestEnvelope">
						
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="unbounded" name="scope" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								URI of the permissions being requested.
							</xs:documentation>
							
						</xs:annotation>
					</xs:element>
					<xs:element minOccurs="1" maxOccurs="1" name="callback" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								URL on the client side that will be used
								to communicate completion of the user
								flow. The URL can include query
								parameters.
							</xs:documentation>
							
						</xs:annotation>
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="RequestPermissionsResponse">
				<xs:annotation>
					<xs:documentation>
						Returns the temporary request token
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="responseEnvelope" type="common:ResponseEnvelope"/>
					<xs:element name="token" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Temporary token that identifies the
								request for permissions. This token
								cannot be used to access resources on
								the account. It can only be used to
								instruct the user to authorize the
								permissions.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>



			<xs:complexType name="GetAccessTokenRequest">
				<xs:annotation>
					<xs:documentation>
						The request use to retrieve a permanent access
						token. The client can either send the token and
						verifier, or a subject.
					</xs:documentation>
					
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="requestEnvelope" type="common:RequestEnvelope">
						
					</xs:element>
					<xs:element name="token" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The temporary request token received
								from the RequestPermissions call.
							</xs:documentation>
							
						</xs:annotation>
					</xs:element>
					<xs:element name="verifier" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The verifier code returned to the client
								after the user authorization flow
								completed.
							</xs:documentation>
							
						</xs:annotation>
					</xs:element>
					<xs:element name="subjectAlias" type="xs:string" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The subject email address used to
								represent existing 3rd Party Permissions
								relationship. This field can be used in
								lieu of the token and verifier.
							</xs:documentation>
							
						</xs:annotation>
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GetAccessTokenResponse">
				<xs:annotation>
					<xs:documentation>
						Permanent access token and token secret that can
						be used to make requests for protected resources
						owned by another account.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>

					<xs:element name="responseEnvelope" type="common:ResponseEnvelope"/>
						<xs:element name="scope" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Identifier for the permissions approved
								for this relationship.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="token" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								Permanent access token that identifies
								the relationship that the user
								authorized.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="tokenSecret" type="xs:string">
						<xs:annotation>
							<xs:documentation>
								The token secret/password that will need
								to be used when generating the
								signature.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>



			<!-- Begin: Request/Response for GetPermissionsRequest operation -->
			<xs:complexType name="GetPermissionsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to retrieve the approved list of
						permissions associated with a token.
					</xs:documentation>
					
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="requestEnvelope" type="common:RequestEnvelope">
						
					</xs:element>
					<xs:element name="token" type="xs:string" minOccurs="1" maxOccurs="1">
						<xs:annotation>
							<xs:documentation>
								The permanent access token to ask about.
							</xs:documentation>
							
						</xs:annotation>
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GetPermissionsResponse">
				<xs:annotation>
					<xs:documentation>
						The list of permissions associated with the
						token.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="responseEnvelope" type="common:ResponseEnvelope"/>
					<xs:element name="scope" type="xs:string" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								Identifier for the permissions approved
								for this relationship.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:complexType>



			<!-- Begin: Request/Response for CancelPermissionsRequest operation -->
			<xs:complexType name="CancelPermissionsRequest">
				<xs:annotation>
					<xs:documentation>
						Request to invalidate an access token and revoke
						the permissions associated with it.
					</xs:documentation>
					
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="requestEnvelope" type="common:RequestEnvelope">
						
					</xs:element>
					<xs:element name="token" type="xs:string" minOccurs="1" maxOccurs="1">
						
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="CancelPermissionsResponse">
				
				<xs:sequence>
					<xs:element name="responseEnvelope" type="common:ResponseEnvelope"/>
				</xs:sequence>
			</xs:complexType>

			<!--Begin: Personal attribute types -->
			<xs:simpleType name="PersonalAttribute">
				<xs:annotation>
					<xs:documentation>
						Enumeration for Personal Attributes of a user.
					</xs:documentation>
				</xs:annotation>
				<xs:restriction base="xs:string">
					<xs:enumeration id="firstName" value="http://axschema.org/namePerson/first"/>
					<xs:enumeration id="lastName" value="http://axschema.org/namePerson/last"/>
					<xs:enumeration id="email" value="http://axschema.org/contact/email"/>
					<xs:enumeration id="fullName" value="http://schema.openid.net/contact/fullname"/>
					<xs:enumeration id="businessName" value="http://axschema.org/company/name"/>
					<xs:enumeration id="countryCode" value="http://axschema.org/contact/country/home"/>
					<xs:enumeration id="dateOfBirth" value="http://axschema.org/birthDate"/>
					<xs:enumeration id="postalCode" value="http://axschema.org/contact/postalCode/home"/>
					<xs:enumeration id="line1" value="http://schema.openid.net/contact/street1"/>
					<xs:enumeration id="line2" value="http://schema.openid.net/contact/street2"/>
					<xs:enumeration id="city" value="http://axschema.org/contact/city/home"/>
					<xs:enumeration id="state" value="http://axschema.org/contact/state/home"/>
					<xs:enumeration id="phone" value="http://axschema.org/contact/phone/default"/>
					<xs:enumeration id="payerId" value="https://www.paypal.com/webapps/auth/schema/payerID"/>
				</xs:restriction>
			</xs:simpleType>
			<xs:complexType name="PersonalAttributeList">
				<xs:annotation>
					<xs:documentation>
						List of Personal Attributes to be sent as a request. 
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="attribute" type="tns:PersonalAttribute" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="PersonalData">
				<xs:annotation>
					<xs:documentation>
						A property of User Identity data , represented as a Name-value pair with Name being the PersonalAttribute requested and value being the data.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="personalDataKey" type="tns:PersonalAttribute" minOccurs="1" maxOccurs="1"/>
					<xs:element name="personalDataValue" type="xs:string" minOccurs="1" maxOccurs="1"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="PersonalDataList">
				<xs:annotation>
					<xs:documentation>
						Set of personal data which forms the response of GetPersonalData call.
					</xs:documentation>
				</xs:annotation>
				<xs:sequence>
					<xs:element name="personalData" type="tns:PersonalData" minOccurs="0" maxOccurs="unbounded"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GetBasicPersonalDataRequest">
				<xs:annotation>
					<xs:documentation>
						Request to retrieve basic personal data.Accepts PersonalAttributeList as request and responds with PersonalDataList.
						This call will accept only 'Basic' attributes and ignore others. 
					</xs:documentation>
					
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="requestEnvelope" type="common:RequestEnvelope">
						
					</xs:element>
					<xs:element name="attributeList" type="tns:PersonalAttributeList" minOccurs="1" maxOccurs="1">
						
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GetAdvancedPersonalDataRequest">
				<xs:annotation>
					<xs:documentation>
						Request to retrieve personal data.Accepts PersonalAttributeList as request and responds with PersonalDataList.
						This call will accept both 'Basic' and Advanced attributes. 
					</xs:documentation>
					
				</xs:annotation>
				<xs:sequence>
					<xs:element minOccurs="0" name="requestEnvelope" type="common:RequestEnvelope">
						
					</xs:element>
					<xs:element name="attributeList" type="tns:PersonalAttributeList" minOccurs="1" maxOccurs="1">
						
					</xs:element>
					<xs:any maxOccurs="unbounded" minOccurs="0" namespace="##other" processContents="lax"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GetBasicPersonalDataResponse">
				
				<xs:sequence>
					<xs:element name="responseEnvelope" type="common:ResponseEnvelope"/>
					<xs:element name="response" type="tns:PersonalDataList"/>
				</xs:sequence>
			</xs:complexType>
			<xs:complexType name="GetAdvancedPersonalDataResponse">
				
				<xs:sequence>
					<xs:element name="responseEnvelope" type="common:ResponseEnvelope"/>
					<xs:element name="response" type="tns:PersonalDataList"/>
				</xs:sequence>
			</xs:complexType>
			<!--End: Personal attribute types -->



			<xs:element name="RequestPermissionsRequest" type="tns:RequestPermissionsRequest" nillable="true"/>
			<xs:element name="RequestPermissionsResponse" type="tns:RequestPermissionsResponse" nillable="true"/>

			<xs:element name="GetAccessTokenRequest" type="tns:GetAccessTokenRequest" nillable="true"/>
			<xs:element name="GetAccessTokenResponse" type="tns:GetAccessTokenResponse" nillable="true"/>
			<xs:element name="GetPermissionsRequest" type="tns:GetPermissionsRequest" nillable="true"/>
			<xs:element name="GetPermissionsResponse" type="tns:GetPermissionsResponse" nillable="true"/>
			<xs:element name="CancelPermissionsRequest" type="tns:CancelPermissionsRequest" nillable="true"/>
			<xs:element name="CancelPermissionsResponse" type="tns:CancelPermissionsResponse" nillable="true"/>

			<xs:element name="GetBasicPersonalDataRequest" type="tns:GetBasicPersonalDataRequest" nillable="true"/>
			<xs:element name="GetAdvancedPersonalDataRequest" type="tns:GetAdvancedPersonalDataRequest" nillable="true"/>
			<xs:element name="GetBasicPersonalDataResponse" type="tns:GetBasicPersonalDataResponse" nillable="true"/>
			<xs:element name="GetAdvancedPersonalDataResponse" type="tns:GetAdvancedPersonalDataResponse" nillable="true"/>

		</xs:schema>

	</wsdl:types>

	<wsdl:message name="RequestPermissionsRequest">
		<wsdl:part name="reqparameters" element="types:RequestPermissionsRequest"/>
	</wsdl:message>
	<wsdl:message name="RequestPermissionsResponse">
		<wsdl:part name="resparameters" element="types:RequestPermissionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAccessTokenRequest">
		<wsdl:part name="reqparameters" element="types:GetAccessTokenRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAccessTokenResponse">
		<wsdl:part name="resparameters" element="types:GetAccessTokenResponse"/>
	</wsdl:message>
	<wsdl:message name="GetPermissionsRequest">
		<wsdl:part name="reqparameters" element="types:GetPermissionsRequest"/>
	</wsdl:message>
	<wsdl:message name="GetPermissionsResponse">
		<wsdl:part name="resparameters" element="types:GetPermissionsResponse"/>
	</wsdl:message>
	<wsdl:message name="CancelPermissionsRequest">
		<wsdl:part name="reqparameters" element="types:CancelPermissionsRequest"/>
	</wsdl:message>
	<wsdl:message name="CancelPermissionsResponse">
		<wsdl:part name="resparameters" element="types:CancelPermissionsResponse"/>
	</wsdl:message>
	<wsdl:message name="GetBasicPersonalDataRequest">
		<wsdl:part name="reqparameters" element="types:GetBasicPersonalDataRequest"/>
	</wsdl:message>
	<wsdl:message name="GetBasicPersonalDataResponse">
		<wsdl:part name="resparameters" element="types:GetBasicPersonalDataResponse"/>
	</wsdl:message>
	<wsdl:message name="GetAdvancedPersonalDataRequest">
		<wsdl:part name="reqparameters" element="types:GetAdvancedPersonalDataRequest"/>
	</wsdl:message>
	<wsdl:message name="GetAdvancedPersonalDataResponse">
		<wsdl:part name="resparameters" element="types:GetAdvancedPersonalDataResponse"/>
	</wsdl:message>
	<wsdl:message name="PPFaultMessage">
		<wsdl:part name="faultparameters" element="common:FaultMessage"/>
	</wsdl:message>

	<wsdl:portType name="PermissionsPortType">
		<wsdl:operation name="RequestPermissions">
			<wsdl:input message="ns0:RequestPermissionsRequest"/>
			<wsdl:output message="ns0:RequestPermissionsResponse"/>
			<wsdl:fault message="ns0:PPFaultMessage" name="PPFaultMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetAccessToken">
			<wsdl:input message="ns0:GetAccessTokenRequest"/>
			<wsdl:output message="ns0:GetAccessTokenResponse"/>
			<wsdl:fault message="ns0:PPFaultMessage" name="PPFaultMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetPermissions">
			<wsdl:input message="ns0:GetPermissionsRequest"/>
			<wsdl:output message="ns0:GetPermissionsResponse"/>
			<wsdl:fault message="ns0:PPFaultMessage" name="PPFaultMessage"/>
		</wsdl:operation>
		<wsdl:operation name="CancelPermissions">
			<wsdl:input message="ns0:CancelPermissionsRequest"/>
			<wsdl:output message="ns0:CancelPermissionsResponse"/>
			<wsdl:fault message="ns0:PPFaultMessage" name="PPFaultMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetBasicPersonalData">
			<wsdl:input message="ns0:GetBasicPersonalDataRequest"/>
			<wsdl:output message="ns0:GetBasicPersonalDataResponse"/>
			<wsdl:fault name="PPFaultMessage" message="ns0:PPFaultMessage"/>
		</wsdl:operation>
		<wsdl:operation name="GetAdvancedPersonalData">
			<wsdl:input message="ns0:GetAdvancedPersonalDataRequest"/>
			<wsdl:output message="ns0:GetAdvancedPersonalDataResponse"/>
			<wsdl:fault name="PPFaultMessage" message="ns0:PPFaultMessage"/>
		</wsdl:operation>
	</wsdl:portType>

	<wsdl:binding name="PermissionsSOAP11Binding" type="ns0:PermissionsPortType">
		<soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>
		<wsdl:operation name="RequestPermissions">
			<wsdl:documentation>
				Clients will invoke this operation when they want to request access
				to a user's account.  This operation will establish the details of the 
				request and return a token that represents that request.
				
				This token will need to be used to redirect the user to Paypal so that
				they can authorize the access to their account.
				
				The 'scope' parameters identify the permissions needed in URI format,
				and the 'callback' parameter defines where to send the user after the
				authorization flow is complete.
				
				The list of possible error codes for this operation are:
				580022 - Invalid Argument.  See additional error messages for details.
				580028 - Invalid Redirect URL.
				560022 - Invalid API Caller Account.
				550001 - Your vetting level does not allow you to request permissions
				         for this API.
				520002 - Internal System Error.
			</wsdl:documentation>
			<soap:operation soapAction="urn:RequestPermissions" style="document"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PPFaultMessage">
				<soap:fault use="literal" name="PPFaultMessage"/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetAccessToken">
			<wsdl:documentation>
				After completing the user authorization flow, the client
				will need to invoke this operation to convert the
				request token into a permanent access token that can be
				used to make request for protected resources. The
				request will need to include the temporary token as well
				as the verifier code that was returned when completing
				the flow.

				This operation can also be used to convert a "subject"
				email into a token/secret pair. If the client has an
				existing relationship with a Paypal user, they might be
				using their email address to identify the relationship.
				This operation will allow them to migrate to using a
				token-based approach instead without having to contact
				the user again.

				In either case, if the request represents valid
				permissions, a permanent access token and a token secret
				is returned. The token secret will be used to generate a
				signature that will be sent with each subsequent request
				but should never be part of a request.

				The list of possible error codes for this operation are:
				579058 - Request Token is Expired.
				580022 - Invalid Request Token or Verifier Code.
				520002 - Internal System Error.
			</wsdl:documentation>
			<soap:operation soapAction="urn:GetAccessToken" style="document"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PPFaultMessage">
				<soap:fault name="PPFaultMessage" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetPermissions">
			<wsdl:documentation>
				This operation can be used to retrieve the list of
				permissions that are associated with an access token.
				
				The list of possible error codes for this operation are:
				580022 - Invalid Access Token.
				520002 - Internal System Error.
				
				Otherwise, the list of permissions will be returned.
			</wsdl:documentation>
			<soap:operation soapAction="urn:GetPermissions" style="document"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PPFaultMessage">
				<soap:fault name="PPFaultMessage" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="CancelPermissions">
			<wsdl:documentation>
				This operation is used to invalidate an access token and
				sever a previously established relationship. Users can
				always manage their relationships from the Paypal.com
				site, but this operation allows clients to initiate the
				cancellation.
				
				The list of possible error codes for this operation are:
				580022 - Invalid Access Token.
				520002 - Internal System Error.

				Otherwise, there is no specific data returned by this operation.
			</wsdl:documentation>
			<soap:operation soapAction="urn:CancelPermissions" style="document"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PPFaultMessage">
				<soap:fault name="PPFaultMessage" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetBasicPersonalData">
			<wsdl:documentation>
				This operations returns the basic personal data of the reuquestor in case of first party call or subject in case of third
				party calls. it accepts a list of attributes as input and returns the value of those attributes.
				
				The list of possible error codes for this operation are:
				580022 - Invalid Access Token.
				520002 - Internal System Error.

				Otherwise, there is no specific data returned by this operation.
			</wsdl:documentation>
			<soap:operation soapAction="urn:GetBasicPersonalData" style="document"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PPFaultMessage">
				<soap:fault name="PPFaultMessage" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
		<wsdl:operation name="GetAdvancedPersonalData">
			<wsdl:documentation>
				This operation is used to retrieve personal data of the required account.
				In case of a third-party call, this call would need to caled with the access token
				The list of possible error codes for this operation are:
				580022 - Invalid Access Token.
				520002 - Internal System Error.

				Otherwise, there is no specific data returned by this operation.
			</wsdl:documentation>
			<soap:operation soapAction="urn:GetBasicPersonalData" style="document"/>
			<wsdl:input>
				<soap:body use="literal"/>
			</wsdl:input>
			<wsdl:output>
				<soap:body use="literal"/>
			</wsdl:output>
			<wsdl:fault name="PPFaultMessage">
				<soap:fault name="PPFaultMessage" use="literal"/>
			</wsdl:fault>
		</wsdl:operation>
	</wsdl:binding>

	<wsdl:service name="Permissions">
		<wsdl:port name="PermissionsSOAP11port_http" binding="ns0:PermissionsSOAP11Binding">
			<soap:address location="https://svcs.paypal.com/Permissions"/>
		</wsdl:port>
	</wsdl:service>
</wsdl:definitions>