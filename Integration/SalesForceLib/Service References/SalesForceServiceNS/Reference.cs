//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesForceLib.SalesForceServiceNS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", ConfigurationName="SalesForceServiceNS.EzbobWebServicesPortType")]
    public interface EzbobWebServicesPortType {
        
        // CODEGEN: Generating message contract since message ChangeEmailRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.ChangeEmailResponse ChangeEmail(SalesForceLib.SalesForceServiceNS.ChangeEmailRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.ChangeEmailResponse> ChangeEmailAsync(SalesForceLib.SalesForceServiceNS.ChangeEmailRequest request);
        
        // CODEGEN: Generating message contract since message ContactServiceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.ContactServiceResponse ContactService(SalesForceLib.SalesForceServiceNS.ContactServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.ContactServiceResponse> ContactServiceAsync(SalesForceLib.SalesForceServiceNS.ContactServiceRequest request);
        
        // CODEGEN: Generating message contract since message CreateActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.CreateActivityResponse CreateActivity(SalesForceLib.SalesForceServiceNS.CreateActivityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateActivityResponse> CreateActivityAsync(SalesForceLib.SalesForceServiceNS.CreateActivityRequest request);
        
        // CODEGEN: Generating message contract since message CreateOpportunityServiceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceResponse CreateOpportunityService(SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceResponse> CreateOpportunityServiceAsync(SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest request);
        
        // CODEGEN: Generating message contract since message CreateTaskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.CreateTaskResponse CreateTask(SalesForceLib.SalesForceServiceNS.CreateTaskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateTaskResponse> CreateTaskAsync(SalesForceLib.SalesForceServiceNS.CreateTaskRequest request);
        
        // CODEGEN: Generating message contract since message GetActivityRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.GetActivityResponse GetActivity(SalesForceLib.SalesForceServiceNS.GetActivityRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.GetActivityResponse> GetActivityAsync(SalesForceLib.SalesForceServiceNS.GetActivityRequest request);
        
        // CODEGEN: Generating message contract since message LeadAccountServiceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.LeadAccountServiceResponse LeadAccountService(SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.LeadAccountServiceResponse> LeadAccountServiceAsync(SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest request);
        
        // CODEGEN: Generating message contract since message UpdateCloseOpportunityServiceRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceResponse UpdateCloseOpportunityService(SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceResponse> UpdateCloseOpportunityServiceAsync(SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public partial class SessionHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
                this.RaisePropertyChanged("sessionId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public partial class LogInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LogCategory categoryField;
        
        private LogCategoryLevel levelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LogCategory category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
                this.RaisePropertyChanged("category");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LogCategoryLevel level {
            get {
                return this.levelField;
            }
            set {
                this.levelField = value;
                this.RaisePropertyChanged("level");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public enum LogCategory {
        
        /// <remarks/>
        Db,
        
        /// <remarks/>
        Workflow,
        
        /// <remarks/>
        Validation,
        
        /// <remarks/>
        Callout,
        
        /// <remarks/>
        Apex_code,
        
        /// <remarks/>
        Apex_profiling,
        
        /// <remarks/>
        Visualforce,
        
        /// <remarks/>
        System,
        
        /// <remarks/>
        All,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public enum LogCategoryLevel {
        
        /// <remarks/>
        Internal,
        
        /// <remarks/>
        Finest,
        
        /// <remarks/>
        Finer,
        
        /// <remarks/>
        Fine,
        
        /// <remarks/>
        Debug,
        
        /// <remarks/>
        Info,
        
        /// <remarks/>
        Warn,
        
        /// <remarks/>
        Error,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public partial class CallOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string client {
            get {
                return this.clientField;
            }
            set {
                this.clientField = value;
                this.RaisePropertyChanged("client");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public partial class DebuggingHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LogInfo[] categoriesField;
        
        private LogType debugLevelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("categories", Order=0)]
        public LogInfo[] categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
                this.RaisePropertyChanged("categories");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LogType debugLevel {
            get {
                return this.debugLevelField;
            }
            set {
                this.debugLevelField = value;
                this.RaisePropertyChanged("debugLevel");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public enum LogType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Debugonly,
        
        /// <remarks/>
        Db,
        
        /// <remarks/>
        Profiling,
        
        /// <remarks/>
        Callout,
        
        /// <remarks/>
        Detail,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public partial class AllowFieldTruncationHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool allowFieldTruncationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool allowFieldTruncation {
            get {
                return this.allowFieldTruncationField;
            }
            set {
                this.allowFieldTruncationField = value;
                this.RaisePropertyChanged("allowFieldTruncation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
    public partial class DebuggingInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string debugLogField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string debugLog {
            get {
                return this.debugLogField;
            }
            set {
                this.debugLogField = value;
                this.RaisePropertyChanged("debugLog");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeEmail", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class ChangeEmailRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public ChangeEmailRequest() {
        }
        
        public ChangeEmailRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ChangeEmailResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class ChangeEmailResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public ChangeEmailResponse() {
        }
        
        public ChangeEmailResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ContactService", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class ContactServiceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public ContactServiceRequest() {
        }
        
        public ContactServiceRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ContactServiceResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class ContactServiceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public ContactServiceResponse() {
        }
        
        public ContactServiceResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateActivity", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class CreateActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public CreateActivityRequest() {
        }
        
        public CreateActivityRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateActivityResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class CreateActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public CreateActivityResponse() {
        }
        
        public CreateActivityResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOpportunityService", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class CreateOpportunityServiceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public CreateOpportunityServiceRequest() {
        }
        
        public CreateOpportunityServiceRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateOpportunityServiceResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class CreateOpportunityServiceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public CreateOpportunityServiceResponse() {
        }
        
        public CreateOpportunityServiceResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTask", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class CreateTaskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public CreateTaskRequest() {
        }
        
        public CreateTaskRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CreateTaskResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class CreateTaskResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public CreateTaskResponse() {
        }
        
        public CreateTaskResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivity", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class GetActivityRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public GetActivityRequest() {
        }
        
        public GetActivityRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetActivityResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class GetActivityResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public GetActivityResponse() {
        }
        
        public GetActivityResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LeadAccountService", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class LeadAccountServiceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public LeadAccountServiceRequest() {
        }
        
        public LeadAccountServiceRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="LeadAccountServiceResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class LeadAccountServiceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public LeadAccountServiceResponse() {
        }
        
        public LeadAccountServiceResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCloseOpportunityService", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class UpdateCloseOpportunityServiceRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.CallOptions CallOptions;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string jsonInput;
        
        public UpdateCloseOpportunityServiceRequest() {
        }
        
        public UpdateCloseOpportunityServiceRequest(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            this.SessionHeader = SessionHeader;
            this.CallOptions = CallOptions;
            this.DebuggingHeader = DebuggingHeader;
            this.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            this.jsonInput = jsonInput;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateCloseOpportunityServiceResponse", WrapperNamespace="http://soap.sforce.com/schemas/class/EzbobWebServices", IsWrapped=true)]
    public partial class UpdateCloseOpportunityServiceResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices")]
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://soap.sforce.com/schemas/class/EzbobWebServices", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string result;
        
        public UpdateCloseOpportunityServiceResponse() {
        }
        
        public UpdateCloseOpportunityServiceResponse(SalesForceLib.SalesForceServiceNS.DebuggingInfo DebuggingInfo, string result) {
            this.DebuggingInfo = DebuggingInfo;
            this.result = result;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EzbobWebServicesPortTypeChannel : SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EzbobWebServicesPortTypeClient : System.ServiceModel.ClientBase<SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType>, SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType {
        
        public EzbobWebServicesPortTypeClient() {
        }
        
        public EzbobWebServicesPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EzbobWebServicesPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EzbobWebServicesPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EzbobWebServicesPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.ChangeEmailResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.ChangeEmail(SalesForceLib.SalesForceServiceNS.ChangeEmailRequest request) {
            return base.Channel.ChangeEmail(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo ChangeEmail(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.ChangeEmailRequest inValue = new SalesForceLib.SalesForceServiceNS.ChangeEmailRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.ChangeEmailResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).ChangeEmail(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.ChangeEmailResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.ChangeEmailAsync(SalesForceLib.SalesForceServiceNS.ChangeEmailRequest request) {
            return base.Channel.ChangeEmailAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.ChangeEmailResponse> ChangeEmailAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.ChangeEmailRequest inValue = new SalesForceLib.SalesForceServiceNS.ChangeEmailRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).ChangeEmailAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.ContactServiceResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.ContactService(SalesForceLib.SalesForceServiceNS.ContactServiceRequest request) {
            return base.Channel.ContactService(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo ContactService(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.ContactServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.ContactServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.ContactServiceResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).ContactService(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.ContactServiceResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.ContactServiceAsync(SalesForceLib.SalesForceServiceNS.ContactServiceRequest request) {
            return base.Channel.ContactServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.ContactServiceResponse> ContactServiceAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.ContactServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.ContactServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).ContactServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.CreateActivityResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.CreateActivity(SalesForceLib.SalesForceServiceNS.CreateActivityRequest request) {
            return base.Channel.CreateActivity(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo CreateActivity(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.CreateActivityRequest inValue = new SalesForceLib.SalesForceServiceNS.CreateActivityRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.CreateActivityResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).CreateActivity(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateActivityResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.CreateActivityAsync(SalesForceLib.SalesForceServiceNS.CreateActivityRequest request) {
            return base.Channel.CreateActivityAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateActivityResponse> CreateActivityAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.CreateActivityRequest inValue = new SalesForceLib.SalesForceServiceNS.CreateActivityRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).CreateActivityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.CreateOpportunityService(SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest request) {
            return base.Channel.CreateOpportunityService(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo CreateOpportunityService(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).CreateOpportunityService(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.CreateOpportunityServiceAsync(SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest request) {
            return base.Channel.CreateOpportunityServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceResponse> CreateOpportunityServiceAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.CreateOpportunityServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).CreateOpportunityServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.CreateTaskResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.CreateTask(SalesForceLib.SalesForceServiceNS.CreateTaskRequest request) {
            return base.Channel.CreateTask(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo CreateTask(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.CreateTaskRequest inValue = new SalesForceLib.SalesForceServiceNS.CreateTaskRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.CreateTaskResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).CreateTask(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateTaskResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.CreateTaskAsync(SalesForceLib.SalesForceServiceNS.CreateTaskRequest request) {
            return base.Channel.CreateTaskAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.CreateTaskResponse> CreateTaskAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.CreateTaskRequest inValue = new SalesForceLib.SalesForceServiceNS.CreateTaskRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).CreateTaskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.GetActivityResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.GetActivity(SalesForceLib.SalesForceServiceNS.GetActivityRequest request) {
            return base.Channel.GetActivity(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo GetActivity(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.GetActivityRequest inValue = new SalesForceLib.SalesForceServiceNS.GetActivityRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.GetActivityResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).GetActivity(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.GetActivityResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.GetActivityAsync(SalesForceLib.SalesForceServiceNS.GetActivityRequest request) {
            return base.Channel.GetActivityAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.GetActivityResponse> GetActivityAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.GetActivityRequest inValue = new SalesForceLib.SalesForceServiceNS.GetActivityRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).GetActivityAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.LeadAccountServiceResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.LeadAccountService(SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest request) {
            return base.Channel.LeadAccountService(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo LeadAccountService(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.LeadAccountServiceResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).LeadAccountService(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.LeadAccountServiceResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.LeadAccountServiceAsync(SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest request) {
            return base.Channel.LeadAccountServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.LeadAccountServiceResponse> LeadAccountServiceAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.LeadAccountServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).LeadAccountServiceAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceResponse SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.UpdateCloseOpportunityService(SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest request) {
            return base.Channel.UpdateCloseOpportunityService(request);
        }
        
        public SalesForceLib.SalesForceServiceNS.DebuggingInfo UpdateCloseOpportunityService(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput, out string result) {
            SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceResponse retVal = ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).UpdateCloseOpportunityService(inValue);
            result = retVal.result;
            return retVal.DebuggingInfo;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceResponse> SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType.UpdateCloseOpportunityServiceAsync(SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest request) {
            return base.Channel.UpdateCloseOpportunityServiceAsync(request);
        }
        
        public System.Threading.Tasks.Task<SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceResponse> UpdateCloseOpportunityServiceAsync(SalesForceLib.SalesForceServiceNS.SessionHeader SessionHeader, SalesForceLib.SalesForceServiceNS.CallOptions CallOptions, SalesForceLib.SalesForceServiceNS.DebuggingHeader DebuggingHeader, SalesForceLib.SalesForceServiceNS.AllowFieldTruncationHeader AllowFieldTruncationHeader, string jsonInput) {
            SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest inValue = new SalesForceLib.SalesForceServiceNS.UpdateCloseOpportunityServiceRequest();
            inValue.SessionHeader = SessionHeader;
            inValue.CallOptions = CallOptions;
            inValue.DebuggingHeader = DebuggingHeader;
            inValue.AllowFieldTruncationHeader = AllowFieldTruncationHeader;
            inValue.jsonInput = jsonInput;
            return ((SalesForceLib.SalesForceServiceNS.EzbobWebServicesPortType)(this)).UpdateCloseOpportunityServiceAsync(inValue);
        }
    }
}
