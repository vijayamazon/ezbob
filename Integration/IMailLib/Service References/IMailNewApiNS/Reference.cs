//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IMailLib.IMailNewApiNS {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://www.imail.co.uk", ConfigurationName="IMailNewApiNS.imail_apiSoap")]
    public interface imail_apiSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/GetSessionOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetSessionOptions();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/GetSessionOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetSessionOptionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/QueryDocumentStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode QueryDocumentStatus(string refID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/QueryDocumentStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> QueryDocumentStatusAsync(string refID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/RecallDocument", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode RecallDocument(string refID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/RecallDocument", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> RecallDocumentAsync(string refID);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/RecallDocumentExtAuth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode RecallDocumentExtAuth(string refID, string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/RecallDocumentExtAuth", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> RecallDocumentExtAuthAsync(string refID, string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/GetReturns", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetReturns(string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/GetReturns", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetReturnsAsync(string startDate, string endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/Authenticate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode Authenticate(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/Authenticate", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> AuthenticateAsync(string Username, string Password);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/SetPrintPreviewEmailAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SetPrintPreviewEmailAddress(string EmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/SetPrintPreviewEmailAddress", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> SetPrintPreviewEmailAddressAsync(string EmailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ListAttachments", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ListAttachments();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ListAttachments", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ListAttachmentsAsync();
        
        // CODEGEN: Parameter 'attachmentPDFdata' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/UpdateAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.UpdateAttachmentResponse UpdateAttachment(IMailLib.IMailNewApiNS.UpdateAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/UpdateAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.UpdateAttachmentResponse> UpdateAttachmentAsync(IMailLib.IMailNewApiNS.UpdateAttachmentRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/DeleteAttachment", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DeleteAttachment(string attachmentPDFfilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/DeleteAttachment", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DeleteAttachmentAsync(string attachmentPDFfilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ListBackgrounds", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ListBackgrounds();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ListBackgrounds", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ListBackgroundsAsync();
        
        // CODEGEN: Parameter 'backgroundPDFdata' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/UpdateBackground", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.UpdateBackgroundResponse UpdateBackground(IMailLib.IMailNewApiNS.UpdateBackgroundRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/UpdateBackground", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.UpdateBackgroundResponse> UpdateBackgroundAsync(IMailLib.IMailNewApiNS.UpdateBackgroundRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/DeleteBackground", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode DeleteBackground(string backgroundPDFfilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/DeleteBackground", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> DeleteBackgroundAsync(string backgroundPDFfilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/SetPostingOptions", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode SetPostingOptions(int Options);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/SetPostingOptions", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> SetPostingOptionsAsync(int Options);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/GetCreditBalance", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode GetCreditBalance();
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/GetCreditBalance", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> GetCreditBalanceAsync();
        
        // CODEGEN: Parameter 'logoJpgdata' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/SetCardLogo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.SetCardLogoResponse SetCardLogo(IMailLib.IMailNewApiNS.SetCardLogoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/SetCardLogo", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.SetCardLogoResponse> SetCardLogoAsync(IMailLib.IMailNewApiNS.SetCardLogoRequest request);
        
        // CODEGEN: Parameter 'letterData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeMailshotCardsAuth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthResponse MailmergeMailshotCardsAuth(IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeMailshotCardsAuth", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthResponse> MailmergeMailshotCardsAuthAsync(IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest request);
        
        // CODEGEN: Parameter 'letterData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeMailshotCards", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.MailmergeMailshotCardsResponse MailmergeMailshotCards(IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeMailshotCards", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeMailshotCardsResponse> MailmergeMailshotCardsAsync(IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest request);
        
        // CODEGEN: Parameter 'PDFdata' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeLetterheadPDFAuth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthResponse MailmergeLetterheadPDFAuth(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeLetterheadPDFAuth", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthResponse> MailmergeLetterheadPDFAuthAsync(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest request);
        
        // CODEGEN: Parameter 'PDFdata' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeLetterheadPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.MailmergeLetterheadPDFResponse MailmergeLetterheadPDF(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailmergeLetterheadPDF", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeLetterheadPDFResponse> MailmergeLetterheadPDFAsync(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest request);
        
        // CODEGEN: Parameter 'letterData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDFExt", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtResponse ProcessPrintReadyPDFExt(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDFExt", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtResponse> ProcessPrintReadyPDFExtAsync(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDFExtAuth2", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Xml.XmlNode ProcessPrintReadyPDFExtAuth2(string base64LetterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDFExtAuth2", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Xml.XmlNode> ProcessPrintReadyPDFExtAuth2Async(string base64LetterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert);
        
        // CODEGEN: Parameter 'letterData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDFExtAuth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthResponse ProcessPrintReadyPDFExtAuth(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDFExtAuth", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthResponse> ProcessPrintReadyPDFExtAuthAsync(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest request);
        
        // CODEGEN: Parameter 'letterData' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDF", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.ProcessPrintReadyPDFResponse ProcessPrintReadyPDF(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/ProcessPrintReadyPDF", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFResponse> ProcessPrintReadyPDFAsync(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest request);
        
        // CODEGEN: Parameter 'CSVdata' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailMerge", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        IMailLib.IMailNewApiNS.MailMergeResponse MailMerge(IMailLib.IMailNewApiNS.MailMergeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://www.imail.co.uk/MailMerge", ReplyAction="*")]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailMergeResponse> MailMergeAsync(IMailLib.IMailNewApiNS.MailMergeRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAttachment", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class UpdateAttachmentRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public string attachmentPDFfilename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] attachmentPDFdata;
        
        public UpdateAttachmentRequest() {
        }
        
        public UpdateAttachmentRequest(string attachmentPDFfilename, byte[] attachmentPDFdata) {
            this.attachmentPDFfilename = attachmentPDFfilename;
            this.attachmentPDFdata = attachmentPDFdata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateAttachmentResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class UpdateAttachmentResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode UpdateAttachmentResult;
        
        public UpdateAttachmentResponse() {
        }
        
        public UpdateAttachmentResponse(System.Xml.XmlNode UpdateAttachmentResult) {
            this.UpdateAttachmentResult = UpdateAttachmentResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBackground", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class UpdateBackgroundRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public string backgroundPDFfilename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] backgroundPDFdata;
        
        public UpdateBackgroundRequest() {
        }
        
        public UpdateBackgroundRequest(string backgroundPDFfilename, byte[] backgroundPDFdata) {
            this.backgroundPDFfilename = backgroundPDFfilename;
            this.backgroundPDFdata = backgroundPDFdata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateBackgroundResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class UpdateBackgroundResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode UpdateBackgroundResult;
        
        public UpdateBackgroundResponse() {
        }
        
        public UpdateBackgroundResponse(System.Xml.XmlNode UpdateBackgroundResult) {
            this.UpdateBackgroundResult = UpdateBackgroundResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCardLogo", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class SetCardLogoRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] logoJpgdata;
        
        public SetCardLogoRequest() {
        }
        
        public SetCardLogoRequest(byte[] logoJpgdata) {
            this.logoJpgdata = logoJpgdata;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetCardLogoResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class SetCardLogoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode SetCardLogoResult;
        
        public SetCardLogoResponse() {
        }
        
        public SetCardLogoResponse(System.Xml.XmlNode SetCardLogoResult) {
            this.SetCardLogoResult = SetCardLogoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeMailshotCardsAuth", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeMailshotCardsAuthRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] letterData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CSVdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=4)]
        public string sideOneHTML;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=5)]
        public string sideTwoHTML;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=6)]
        public bool Is2DayService;
        
        public MailmergeMailshotCardsAuthRequest() {
        }
        
        public MailmergeMailshotCardsAuthRequest(string Username, string Password, byte[] letterData, byte[] CSVdata, string sideOneHTML, string sideTwoHTML, bool Is2DayService) {
            this.Username = Username;
            this.Password = Password;
            this.letterData = letterData;
            this.CSVdata = CSVdata;
            this.sideOneHTML = sideOneHTML;
            this.sideTwoHTML = sideTwoHTML;
            this.Is2DayService = Is2DayService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeMailshotCardsAuthResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeMailshotCardsAuthResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode MailmergeMailshotCardsAuthResult;
        
        public MailmergeMailshotCardsAuthResponse() {
        }
        
        public MailmergeMailshotCardsAuthResponse(System.Xml.XmlNode MailmergeMailshotCardsAuthResult) {
            this.MailmergeMailshotCardsAuthResult = MailmergeMailshotCardsAuthResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeMailshotCards", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeMailshotCardsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] letterData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CSVdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        public string sideOneHTML;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        public string sideTwoHTML;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=4)]
        public bool Is2DayService;
        
        public MailmergeMailshotCardsRequest() {
        }
        
        public MailmergeMailshotCardsRequest(byte[] letterData, byte[] CSVdata, string sideOneHTML, string sideTwoHTML, bool Is2DayService) {
            this.letterData = letterData;
            this.CSVdata = CSVdata;
            this.sideOneHTML = sideOneHTML;
            this.sideTwoHTML = sideTwoHTML;
            this.Is2DayService = Is2DayService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeMailshotCardsResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeMailshotCardsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode MailmergeMailshotCardsResult;
        
        public MailmergeMailshotCardsResponse() {
        }
        
        public MailmergeMailshotCardsResponse(System.Xml.XmlNode MailmergeMailshotCardsResult) {
            this.MailmergeMailshotCardsResult = MailmergeMailshotCardsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeLetterheadPDFAuth", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeLetterheadPDFAuthRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PDFdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CSVdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=4)]
        public string bodyHTML;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=5)]
        public bool Is2DayService;
        
        public MailmergeLetterheadPDFAuthRequest() {
        }
        
        public MailmergeLetterheadPDFAuthRequest(string Username, string Password, byte[] PDFdata, byte[] CSVdata, string bodyHTML, bool Is2DayService) {
            this.Username = Username;
            this.Password = Password;
            this.PDFdata = PDFdata;
            this.CSVdata = CSVdata;
            this.bodyHTML = bodyHTML;
            this.Is2DayService = Is2DayService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeLetterheadPDFAuthResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeLetterheadPDFAuthResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode MailmergeLetterheadPDFAuthResult;
        
        public MailmergeLetterheadPDFAuthResponse() {
        }
        
        public MailmergeLetterheadPDFAuthResponse(System.Xml.XmlNode MailmergeLetterheadPDFAuthResult) {
            this.MailmergeLetterheadPDFAuthResult = MailmergeLetterheadPDFAuthResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeLetterheadPDF", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeLetterheadPDFRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PDFdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CSVdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        public string bodyHTML;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        public bool Is2DayService;
        
        public MailmergeLetterheadPDFRequest() {
        }
        
        public MailmergeLetterheadPDFRequest(byte[] PDFdata, byte[] CSVdata, string bodyHTML, bool Is2DayService) {
            this.PDFdata = PDFdata;
            this.CSVdata = CSVdata;
            this.bodyHTML = bodyHTML;
            this.Is2DayService = Is2DayService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailmergeLetterheadPDFResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailmergeLetterheadPDFResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode MailmergeLetterheadPDFResult;
        
        public MailmergeLetterheadPDFResponse() {
        }
        
        public MailmergeLetterheadPDFResponse(System.Xml.XmlNode MailmergeLetterheadPDFResult) {
            this.MailmergeLetterheadPDFResult = MailmergeLetterheadPDFResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPrintReadyPDFExt", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class ProcessPrintReadyPDFExtRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] letterData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        public bool Is2DayService;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        public bool IsColour;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        public bool IsDuplex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=4)]
        public string refID;
        
        public ProcessPrintReadyPDFExtRequest() {
        }
        
        public ProcessPrintReadyPDFExtRequest(byte[] letterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID) {
            this.letterData = letterData;
            this.Is2DayService = Is2DayService;
            this.IsColour = IsColour;
            this.IsDuplex = IsDuplex;
            this.refID = refID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPrintReadyPDFExtResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class ProcessPrintReadyPDFExtResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode ProcessPrintReadyPDFExtResult;
        
        public ProcessPrintReadyPDFExtResponse() {
        }
        
        public ProcessPrintReadyPDFExtResponse(System.Xml.XmlNode ProcessPrintReadyPDFExtResult) {
            this.ProcessPrintReadyPDFExtResult = ProcessPrintReadyPDFExtResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPrintReadyPDFExtAuth", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class ProcessPrintReadyPDFExtAuthRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] letterData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        public bool Is2DayService;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        public bool IsColour;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        public bool IsDuplex;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=4)]
        public string refID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=5)]
        public string Username;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=6)]
        public string Password;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=7)]
        public string includeInsert;
        
        public ProcessPrintReadyPDFExtAuthRequest() {
        }
        
        public ProcessPrintReadyPDFExtAuthRequest(byte[] letterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert) {
            this.letterData = letterData;
            this.Is2DayService = Is2DayService;
            this.IsColour = IsColour;
            this.IsDuplex = IsDuplex;
            this.refID = refID;
            this.Username = Username;
            this.Password = Password;
            this.includeInsert = includeInsert;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPrintReadyPDFExtAuthResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class ProcessPrintReadyPDFExtAuthResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode ProcessPrintReadyPDFExtAuthResult;
        
        public ProcessPrintReadyPDFExtAuthResponse() {
        }
        
        public ProcessPrintReadyPDFExtAuthResponse(System.Xml.XmlNode ProcessPrintReadyPDFExtAuthResult) {
            this.ProcessPrintReadyPDFExtAuthResult = ProcessPrintReadyPDFExtAuthResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPrintReadyPDF", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class ProcessPrintReadyPDFRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] letterData;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        public string backgroundFilename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        public bool Is2DayService;
        
        public ProcessPrintReadyPDFRequest() {
        }
        
        public ProcessPrintReadyPDFRequest(byte[] letterData, string backgroundFilename, bool Is2DayService) {
            this.letterData = letterData;
            this.backgroundFilename = backgroundFilename;
            this.Is2DayService = Is2DayService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ProcessPrintReadyPDFResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class ProcessPrintReadyPDFResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode ProcessPrintReadyPDFResult;
        
        public ProcessPrintReadyPDFResponse() {
        }
        
        public ProcessPrintReadyPDFResponse(System.Xml.XmlNode ProcessPrintReadyPDFResult) {
            this.ProcessPrintReadyPDFResult = ProcessPrintReadyPDFResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailMerge", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailMergeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] CSVdata;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=1)]
        public string templateName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=2)]
        public string PDFattachmentFilename;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=3)]
        public bool Is2DayService;
        
        public MailMergeRequest() {
        }
        
        public MailMergeRequest(byte[] CSVdata, string templateName, string PDFattachmentFilename, bool Is2DayService) {
            this.CSVdata = CSVdata;
            this.templateName = templateName;
            this.PDFattachmentFilename = PDFattachmentFilename;
            this.Is2DayService = Is2DayService;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="MailMergeResponse", WrapperNamespace="https://www.imail.co.uk", IsWrapped=true)]
    public partial class MailMergeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="https://www.imail.co.uk", Order=0)]
        public System.Xml.XmlNode MailMergeResult;
        
        public MailMergeResponse() {
        }
        
        public MailMergeResponse(System.Xml.XmlNode MailMergeResult) {
            this.MailMergeResult = MailMergeResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface imail_apiSoapChannel : IMailLib.IMailNewApiNS.imail_apiSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class imail_apiSoapClient : System.ServiceModel.ClientBase<IMailLib.IMailNewApiNS.imail_apiSoap>, IMailLib.IMailNewApiNS.imail_apiSoap {
        
        public imail_apiSoapClient() {
        }
        
        public imail_apiSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public imail_apiSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public imail_apiSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public imail_apiSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Xml.XmlNode GetSessionOptions() {
            return base.Channel.GetSessionOptions();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetSessionOptionsAsync() {
            return base.Channel.GetSessionOptionsAsync();
        }
        
        public System.Xml.XmlNode QueryDocumentStatus(string refID) {
            return base.Channel.QueryDocumentStatus(refID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> QueryDocumentStatusAsync(string refID) {
            return base.Channel.QueryDocumentStatusAsync(refID);
        }
        
        public System.Xml.XmlNode RecallDocument(string refID) {
            return base.Channel.RecallDocument(refID);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> RecallDocumentAsync(string refID) {
            return base.Channel.RecallDocumentAsync(refID);
        }
        
        public System.Xml.XmlNode RecallDocumentExtAuth(string refID, string Username, string Password) {
            return base.Channel.RecallDocumentExtAuth(refID, Username, Password);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> RecallDocumentExtAuthAsync(string refID, string Username, string Password) {
            return base.Channel.RecallDocumentExtAuthAsync(refID, Username, Password);
        }
        
        public System.Xml.XmlNode GetReturns(string startDate, string endDate) {
            return base.Channel.GetReturns(startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetReturnsAsync(string startDate, string endDate) {
            return base.Channel.GetReturnsAsync(startDate, endDate);
        }
        
        public System.Xml.XmlNode Authenticate(string Username, string Password) {
            return base.Channel.Authenticate(Username, Password);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> AuthenticateAsync(string Username, string Password) {
            return base.Channel.AuthenticateAsync(Username, Password);
        }
        
        public System.Xml.XmlNode SetPrintPreviewEmailAddress(string EmailAddress) {
            return base.Channel.SetPrintPreviewEmailAddress(EmailAddress);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> SetPrintPreviewEmailAddressAsync(string EmailAddress) {
            return base.Channel.SetPrintPreviewEmailAddressAsync(EmailAddress);
        }
        
        public System.Xml.XmlNode ListAttachments() {
            return base.Channel.ListAttachments();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ListAttachmentsAsync() {
            return base.Channel.ListAttachmentsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.UpdateAttachmentResponse IMailLib.IMailNewApiNS.imail_apiSoap.UpdateAttachment(IMailLib.IMailNewApiNS.UpdateAttachmentRequest request) {
            return base.Channel.UpdateAttachment(request);
        }
        
        public System.Xml.XmlNode UpdateAttachment(string attachmentPDFfilename, byte[] attachmentPDFdata) {
            IMailLib.IMailNewApiNS.UpdateAttachmentRequest inValue = new IMailLib.IMailNewApiNS.UpdateAttachmentRequest();
            inValue.attachmentPDFfilename = attachmentPDFfilename;
            inValue.attachmentPDFdata = attachmentPDFdata;
            IMailLib.IMailNewApiNS.UpdateAttachmentResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).UpdateAttachment(inValue);
            return retVal.UpdateAttachmentResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.UpdateAttachmentResponse> IMailLib.IMailNewApiNS.imail_apiSoap.UpdateAttachmentAsync(IMailLib.IMailNewApiNS.UpdateAttachmentRequest request) {
            return base.Channel.UpdateAttachmentAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.UpdateAttachmentResponse> UpdateAttachmentAsync(string attachmentPDFfilename, byte[] attachmentPDFdata) {
            IMailLib.IMailNewApiNS.UpdateAttachmentRequest inValue = new IMailLib.IMailNewApiNS.UpdateAttachmentRequest();
            inValue.attachmentPDFfilename = attachmentPDFfilename;
            inValue.attachmentPDFdata = attachmentPDFdata;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).UpdateAttachmentAsync(inValue);
        }
        
        public System.Xml.XmlNode DeleteAttachment(string attachmentPDFfilename) {
            return base.Channel.DeleteAttachment(attachmentPDFfilename);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DeleteAttachmentAsync(string attachmentPDFfilename) {
            return base.Channel.DeleteAttachmentAsync(attachmentPDFfilename);
        }
        
        public System.Xml.XmlNode ListBackgrounds() {
            return base.Channel.ListBackgrounds();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ListBackgroundsAsync() {
            return base.Channel.ListBackgroundsAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.UpdateBackgroundResponse IMailLib.IMailNewApiNS.imail_apiSoap.UpdateBackground(IMailLib.IMailNewApiNS.UpdateBackgroundRequest request) {
            return base.Channel.UpdateBackground(request);
        }
        
        public System.Xml.XmlNode UpdateBackground(string backgroundPDFfilename, byte[] backgroundPDFdata) {
            IMailLib.IMailNewApiNS.UpdateBackgroundRequest inValue = new IMailLib.IMailNewApiNS.UpdateBackgroundRequest();
            inValue.backgroundPDFfilename = backgroundPDFfilename;
            inValue.backgroundPDFdata = backgroundPDFdata;
            IMailLib.IMailNewApiNS.UpdateBackgroundResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).UpdateBackground(inValue);
            return retVal.UpdateBackgroundResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.UpdateBackgroundResponse> IMailLib.IMailNewApiNS.imail_apiSoap.UpdateBackgroundAsync(IMailLib.IMailNewApiNS.UpdateBackgroundRequest request) {
            return base.Channel.UpdateBackgroundAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.UpdateBackgroundResponse> UpdateBackgroundAsync(string backgroundPDFfilename, byte[] backgroundPDFdata) {
            IMailLib.IMailNewApiNS.UpdateBackgroundRequest inValue = new IMailLib.IMailNewApiNS.UpdateBackgroundRequest();
            inValue.backgroundPDFfilename = backgroundPDFfilename;
            inValue.backgroundPDFdata = backgroundPDFdata;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).UpdateBackgroundAsync(inValue);
        }
        
        public System.Xml.XmlNode DeleteBackground(string backgroundPDFfilename) {
            return base.Channel.DeleteBackground(backgroundPDFfilename);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> DeleteBackgroundAsync(string backgroundPDFfilename) {
            return base.Channel.DeleteBackgroundAsync(backgroundPDFfilename);
        }
        
        public System.Xml.XmlNode SetPostingOptions(int Options) {
            return base.Channel.SetPostingOptions(Options);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> SetPostingOptionsAsync(int Options) {
            return base.Channel.SetPostingOptionsAsync(Options);
        }
        
        public System.Xml.XmlNode GetCreditBalance() {
            return base.Channel.GetCreditBalance();
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> GetCreditBalanceAsync() {
            return base.Channel.GetCreditBalanceAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.SetCardLogoResponse IMailLib.IMailNewApiNS.imail_apiSoap.SetCardLogo(IMailLib.IMailNewApiNS.SetCardLogoRequest request) {
            return base.Channel.SetCardLogo(request);
        }
        
        public System.Xml.XmlNode SetCardLogo(byte[] logoJpgdata) {
            IMailLib.IMailNewApiNS.SetCardLogoRequest inValue = new IMailLib.IMailNewApiNS.SetCardLogoRequest();
            inValue.logoJpgdata = logoJpgdata;
            IMailLib.IMailNewApiNS.SetCardLogoResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).SetCardLogo(inValue);
            return retVal.SetCardLogoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.SetCardLogoResponse> IMailLib.IMailNewApiNS.imail_apiSoap.SetCardLogoAsync(IMailLib.IMailNewApiNS.SetCardLogoRequest request) {
            return base.Channel.SetCardLogoAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.SetCardLogoResponse> SetCardLogoAsync(byte[] logoJpgdata) {
            IMailLib.IMailNewApiNS.SetCardLogoRequest inValue = new IMailLib.IMailNewApiNS.SetCardLogoRequest();
            inValue.logoJpgdata = logoJpgdata;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).SetCardLogoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthResponse IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeMailshotCardsAuth(IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest request) {
            return base.Channel.MailmergeMailshotCardsAuth(request);
        }
        
        public System.Xml.XmlNode MailmergeMailshotCardsAuth(string Username, string Password, byte[] letterData, byte[] CSVdata, string sideOneHTML, string sideTwoHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest inValue = new IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.letterData = letterData;
            inValue.CSVdata = CSVdata;
            inValue.sideOneHTML = sideOneHTML;
            inValue.sideTwoHTML = sideTwoHTML;
            inValue.Is2DayService = Is2DayService;
            IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeMailshotCardsAuth(inValue);
            return retVal.MailmergeMailshotCardsAuthResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthResponse> IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeMailshotCardsAuthAsync(IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest request) {
            return base.Channel.MailmergeMailshotCardsAuthAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthResponse> MailmergeMailshotCardsAuthAsync(string Username, string Password, byte[] letterData, byte[] CSVdata, string sideOneHTML, string sideTwoHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest inValue = new IMailLib.IMailNewApiNS.MailmergeMailshotCardsAuthRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.letterData = letterData;
            inValue.CSVdata = CSVdata;
            inValue.sideOneHTML = sideOneHTML;
            inValue.sideTwoHTML = sideTwoHTML;
            inValue.Is2DayService = Is2DayService;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeMailshotCardsAuthAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.MailmergeMailshotCardsResponse IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeMailshotCards(IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest request) {
            return base.Channel.MailmergeMailshotCards(request);
        }
        
        public System.Xml.XmlNode MailmergeMailshotCards(byte[] letterData, byte[] CSVdata, string sideOneHTML, string sideTwoHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest inValue = new IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest();
            inValue.letterData = letterData;
            inValue.CSVdata = CSVdata;
            inValue.sideOneHTML = sideOneHTML;
            inValue.sideTwoHTML = sideTwoHTML;
            inValue.Is2DayService = Is2DayService;
            IMailLib.IMailNewApiNS.MailmergeMailshotCardsResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeMailshotCards(inValue);
            return retVal.MailmergeMailshotCardsResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeMailshotCardsResponse> IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeMailshotCardsAsync(IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest request) {
            return base.Channel.MailmergeMailshotCardsAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeMailshotCardsResponse> MailmergeMailshotCardsAsync(byte[] letterData, byte[] CSVdata, string sideOneHTML, string sideTwoHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest inValue = new IMailLib.IMailNewApiNS.MailmergeMailshotCardsRequest();
            inValue.letterData = letterData;
            inValue.CSVdata = CSVdata;
            inValue.sideOneHTML = sideOneHTML;
            inValue.sideTwoHTML = sideTwoHTML;
            inValue.Is2DayService = Is2DayService;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeMailshotCardsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthResponse IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeLetterheadPDFAuth(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest request) {
            return base.Channel.MailmergeLetterheadPDFAuth(request);
        }
        
        public System.Xml.XmlNode MailmergeLetterheadPDFAuth(string Username, string Password, byte[] PDFdata, byte[] CSVdata, string bodyHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest inValue = new IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.PDFdata = PDFdata;
            inValue.CSVdata = CSVdata;
            inValue.bodyHTML = bodyHTML;
            inValue.Is2DayService = Is2DayService;
            IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeLetterheadPDFAuth(inValue);
            return retVal.MailmergeLetterheadPDFAuthResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthResponse> IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeLetterheadPDFAuthAsync(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest request) {
            return base.Channel.MailmergeLetterheadPDFAuthAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthResponse> MailmergeLetterheadPDFAuthAsync(string Username, string Password, byte[] PDFdata, byte[] CSVdata, string bodyHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest inValue = new IMailLib.IMailNewApiNS.MailmergeLetterheadPDFAuthRequest();
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.PDFdata = PDFdata;
            inValue.CSVdata = CSVdata;
            inValue.bodyHTML = bodyHTML;
            inValue.Is2DayService = Is2DayService;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeLetterheadPDFAuthAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.MailmergeLetterheadPDFResponse IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeLetterheadPDF(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest request) {
            return base.Channel.MailmergeLetterheadPDF(request);
        }
        
        public System.Xml.XmlNode MailmergeLetterheadPDF(byte[] PDFdata, byte[] CSVdata, string bodyHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest inValue = new IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest();
            inValue.PDFdata = PDFdata;
            inValue.CSVdata = CSVdata;
            inValue.bodyHTML = bodyHTML;
            inValue.Is2DayService = Is2DayService;
            IMailLib.IMailNewApiNS.MailmergeLetterheadPDFResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeLetterheadPDF(inValue);
            return retVal.MailmergeLetterheadPDFResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeLetterheadPDFResponse> IMailLib.IMailNewApiNS.imail_apiSoap.MailmergeLetterheadPDFAsync(IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest request) {
            return base.Channel.MailmergeLetterheadPDFAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailmergeLetterheadPDFResponse> MailmergeLetterheadPDFAsync(byte[] PDFdata, byte[] CSVdata, string bodyHTML, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest inValue = new IMailLib.IMailNewApiNS.MailmergeLetterheadPDFRequest();
            inValue.PDFdata = PDFdata;
            inValue.CSVdata = CSVdata;
            inValue.bodyHTML = bodyHTML;
            inValue.Is2DayService = Is2DayService;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailmergeLetterheadPDFAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtResponse IMailLib.IMailNewApiNS.imail_apiSoap.ProcessPrintReadyPDFExt(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest request) {
            return base.Channel.ProcessPrintReadyPDFExt(request);
        }
        
        public System.Xml.XmlNode ProcessPrintReadyPDFExt(byte[] letterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID) {
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest inValue = new IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest();
            inValue.letterData = letterData;
            inValue.Is2DayService = Is2DayService;
            inValue.IsColour = IsColour;
            inValue.IsDuplex = IsDuplex;
            inValue.refID = refID;
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).ProcessPrintReadyPDFExt(inValue);
            return retVal.ProcessPrintReadyPDFExtResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtResponse> IMailLib.IMailNewApiNS.imail_apiSoap.ProcessPrintReadyPDFExtAsync(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest request) {
            return base.Channel.ProcessPrintReadyPDFExtAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtResponse> ProcessPrintReadyPDFExtAsync(byte[] letterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID) {
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest inValue = new IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtRequest();
            inValue.letterData = letterData;
            inValue.Is2DayService = Is2DayService;
            inValue.IsColour = IsColour;
            inValue.IsDuplex = IsDuplex;
            inValue.refID = refID;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).ProcessPrintReadyPDFExtAsync(inValue);
        }
        
        public System.Xml.XmlNode ProcessPrintReadyPDFExtAuth2(string base64LetterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert) {
            return base.Channel.ProcessPrintReadyPDFExtAuth2(base64LetterData, Is2DayService, IsColour, IsDuplex, refID, Username, Password, includeInsert);
        }
        
        public System.Threading.Tasks.Task<System.Xml.XmlNode> ProcessPrintReadyPDFExtAuth2Async(string base64LetterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert) {
            return base.Channel.ProcessPrintReadyPDFExtAuth2Async(base64LetterData, Is2DayService, IsColour, IsDuplex, refID, Username, Password, includeInsert);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthResponse IMailLib.IMailNewApiNS.imail_apiSoap.ProcessPrintReadyPDFExtAuth(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest request) {
            return base.Channel.ProcessPrintReadyPDFExtAuth(request);
        }
        
        public System.Xml.XmlNode ProcessPrintReadyPDFExtAuth(byte[] letterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert) {
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest inValue = new IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest();
            inValue.letterData = letterData;
            inValue.Is2DayService = Is2DayService;
            inValue.IsColour = IsColour;
            inValue.IsDuplex = IsDuplex;
            inValue.refID = refID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.includeInsert = includeInsert;
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).ProcessPrintReadyPDFExtAuth(inValue);
            return retVal.ProcessPrintReadyPDFExtAuthResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthResponse> IMailLib.IMailNewApiNS.imail_apiSoap.ProcessPrintReadyPDFExtAuthAsync(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest request) {
            return base.Channel.ProcessPrintReadyPDFExtAuthAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthResponse> ProcessPrintReadyPDFExtAuthAsync(byte[] letterData, bool Is2DayService, bool IsColour, bool IsDuplex, string refID, string Username, string Password, string includeInsert) {
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest inValue = new IMailLib.IMailNewApiNS.ProcessPrintReadyPDFExtAuthRequest();
            inValue.letterData = letterData;
            inValue.Is2DayService = Is2DayService;
            inValue.IsColour = IsColour;
            inValue.IsDuplex = IsDuplex;
            inValue.refID = refID;
            inValue.Username = Username;
            inValue.Password = Password;
            inValue.includeInsert = includeInsert;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).ProcessPrintReadyPDFExtAuthAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.ProcessPrintReadyPDFResponse IMailLib.IMailNewApiNS.imail_apiSoap.ProcessPrintReadyPDF(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest request) {
            return base.Channel.ProcessPrintReadyPDF(request);
        }
        
        public System.Xml.XmlNode ProcessPrintReadyPDF(byte[] letterData, string backgroundFilename, bool Is2DayService) {
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest inValue = new IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest();
            inValue.letterData = letterData;
            inValue.backgroundFilename = backgroundFilename;
            inValue.Is2DayService = Is2DayService;
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).ProcessPrintReadyPDF(inValue);
            return retVal.ProcessPrintReadyPDFResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFResponse> IMailLib.IMailNewApiNS.imail_apiSoap.ProcessPrintReadyPDFAsync(IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest request) {
            return base.Channel.ProcessPrintReadyPDFAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.ProcessPrintReadyPDFResponse> ProcessPrintReadyPDFAsync(byte[] letterData, string backgroundFilename, bool Is2DayService) {
            IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest inValue = new IMailLib.IMailNewApiNS.ProcessPrintReadyPDFRequest();
            inValue.letterData = letterData;
            inValue.backgroundFilename = backgroundFilename;
            inValue.Is2DayService = Is2DayService;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).ProcessPrintReadyPDFAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        IMailLib.IMailNewApiNS.MailMergeResponse IMailLib.IMailNewApiNS.imail_apiSoap.MailMerge(IMailLib.IMailNewApiNS.MailMergeRequest request) {
            return base.Channel.MailMerge(request);
        }
        
        public System.Xml.XmlNode MailMerge(byte[] CSVdata, string templateName, string PDFattachmentFilename, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailMergeRequest inValue = new IMailLib.IMailNewApiNS.MailMergeRequest();
            inValue.CSVdata = CSVdata;
            inValue.templateName = templateName;
            inValue.PDFattachmentFilename = PDFattachmentFilename;
            inValue.Is2DayService = Is2DayService;
            IMailLib.IMailNewApiNS.MailMergeResponse retVal = ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailMerge(inValue);
            return retVal.MailMergeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailMergeResponse> IMailLib.IMailNewApiNS.imail_apiSoap.MailMergeAsync(IMailLib.IMailNewApiNS.MailMergeRequest request) {
            return base.Channel.MailMergeAsync(request);
        }
        
        public System.Threading.Tasks.Task<IMailLib.IMailNewApiNS.MailMergeResponse> MailMergeAsync(byte[] CSVdata, string templateName, string PDFattachmentFilename, bool Is2DayService) {
            IMailLib.IMailNewApiNS.MailMergeRequest inValue = new IMailLib.IMailNewApiNS.MailMergeRequest();
            inValue.CSVdata = CSVdata;
            inValue.templateName = templateName;
            inValue.PDFattachmentFilename = PDFattachmentFilename;
            inValue.Is2DayService = Is2DayService;
            return ((IMailLib.IMailNewApiNS.imail_apiSoap)(this)).MailMergeAsync(inValue);
        }
    }
}
