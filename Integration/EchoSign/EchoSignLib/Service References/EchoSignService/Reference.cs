//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EchoSignLib.EchoSignService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CancelDocumentResult", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class CancelDocumentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.Result> resultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.Result> result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://dto.api.echosign")]
    public enum Result : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REMINDER_SENT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CANCELLED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALREADY_SIGNED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALREADY_CANCELLED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCreationInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UserCreationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customField1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customField2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string customField3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.OptIn> optInField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customField1 {
            get {
                return this.customField1Field;
            }
            set {
                if ((object.ReferenceEquals(this.customField1Field, value) != true)) {
                    this.customField1Field = value;
                    this.RaisePropertyChanged("customField1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customField2 {
            get {
                return this.customField2Field;
            }
            set {
                if ((object.ReferenceEquals(this.customField2Field, value) != true)) {
                    this.customField2Field = value;
                    this.RaisePropertyChanged("customField2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string customField3 {
            get {
                return this.customField3Field;
            }
            set {
                if ((object.ReferenceEquals(this.customField3Field, value) != true)) {
                    this.customField3Field = value;
                    this.RaisePropertyChanged("customField3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.groupKeyField, value) != true)) {
                    this.groupKeyField = value;
                    this.RaisePropertyChanged("groupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.OptIn> optIn {
            get {
                return this.optInField;
            }
            set {
                if ((this.optInField.Equals(value) != true)) {
                    this.optInField = value;
                    this.RaisePropertyChanged("optIn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptIn", Namespace="http://dto.api.echosign")]
    public enum OptIn : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        YES = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountCreationInfo", Namespace="http://dto7.api.echosign")]
    [System.SerializableAttribute()]
    public partial class AccountCreationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AccountType> accountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> numSeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AccountType> accountType {
            get {
                return this.accountTypeField;
            }
            set {
                if ((this.accountTypeField.Equals(value) != true)) {
                    this.accountTypeField = value;
                    this.RaisePropertyChanged("accountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string companyName {
            get {
                return this.companyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.companyNameField, value) != true)) {
                    this.companyNameField = value;
                    this.RaisePropertyChanged("companyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> numSeats {
            get {
                return this.numSeatsField;
            }
            set {
                if ((this.numSeatsField.Equals(value) != true)) {
                    this.numSeatsField = value;
                    this.RaisePropertyChanged("numSeats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountType", Namespace="http://dto7.api.echosign")]
    public enum AccountType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FREE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PRO = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEAM = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TEAM_TRIAL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENTERPRISE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENTERPRISE_TRIAL = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLOBAL = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLOBAL_TRIAL = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccountResult", Namespace="http://dto7.api.echosign")]
    [System.SerializableAttribute()]
    public partial class CreateAccountResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.CreateAccountResultCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.CreateAccountResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateAccountResultCode", Namespace="http://dto7.api.echosign")]
    public enum CreateAccountResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACCOUNT_CREATION_NOT_ENABLED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_SEAT_COUNT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER_CREATION_ERROR = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER_ALREADY_HAS_ACCOUNT = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SenderInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SenderInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userKey {
            get {
                return this.userKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.userKeyField, value) != true)) {
                    this.userKeyField = value;
                    this.RaisePropertyChanged("userKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetCreationInfo", Namespace="http://dto8.api.echosign")]
    [System.SerializableAttribute()]
    public partial class WidgetCreationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.CallbackInfo callbackInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.FileInfo[] fileInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.FileInfo[] formFieldLayerTemplatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string localeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.MergeFieldInfo mergeFieldInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SecurityOptions securityOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SignatureFlow> signatureFlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.VaultingInfo vaultingInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.WidgetCompletionInfo widgetAuthFailureInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.WidgetCompletionInfo widgetCompletionInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.CallbackInfo callbackInfo {
            get {
                return this.callbackInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.callbackInfoField, value) != true)) {
                    this.callbackInfoField = value;
                    this.RaisePropertyChanged("callbackInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.fileInfosField, value) != true)) {
                    this.fileInfosField = value;
                    this.RaisePropertyChanged("fileInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.FileInfo[] formFieldLayerTemplates {
            get {
                return this.formFieldLayerTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.formFieldLayerTemplatesField, value) != true)) {
                    this.formFieldLayerTemplatesField = value;
                    this.RaisePropertyChanged("formFieldLayerTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                if ((object.ReferenceEquals(this.localeField, value) != true)) {
                    this.localeField = value;
                    this.RaisePropertyChanged("locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.MergeFieldInfo mergeFieldInfo {
            get {
                return this.mergeFieldInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.mergeFieldInfoField, value) != true)) {
                    this.mergeFieldInfoField = value;
                    this.RaisePropertyChanged("mergeFieldInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SecurityOptions securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.securityOptionsField, value) != true)) {
                    this.securityOptionsField = value;
                    this.RaisePropertyChanged("securityOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SignatureFlow> signatureFlow {
            get {
                return this.signatureFlowField;
            }
            set {
                if ((this.signatureFlowField.Equals(value) != true)) {
                    this.signatureFlowField = value;
                    this.RaisePropertyChanged("signatureFlow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.VaultingInfo vaultingInfo {
            get {
                return this.vaultingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.vaultingInfoField, value) != true)) {
                    this.vaultingInfoField = value;
                    this.RaisePropertyChanged("vaultingInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.WidgetCompletionInfo widgetAuthFailureInfo {
            get {
                return this.widgetAuthFailureInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.widgetAuthFailureInfoField, value) != true)) {
                    this.widgetAuthFailureInfoField = value;
                    this.RaisePropertyChanged("widgetAuthFailureInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.WidgetCompletionInfo widgetCompletionInfo {
            get {
                return this.widgetCompletionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.widgetCompletionInfoField, value) != true)) {
                    this.widgetCompletionInfoField = value;
                    this.RaisePropertyChanged("widgetCompletionInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallbackInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class CallbackInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string signedDocumentUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string signedDocumentUrl {
            get {
                return this.signedDocumentUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.signedDocumentUrlField, value) != true)) {
                    this.signedDocumentUrlField = value;
                    this.RaisePropertyChanged("signedDocumentUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MergeFieldInfo", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class MergeFieldInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.MergeField[] mergeFieldsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.MergeField[] mergeFields {
            get {
                return this.mergeFieldsField;
            }
            set {
                if ((object.ReferenceEquals(this.mergeFieldsField, value) != true)) {
                    this.mergeFieldsField = value;
                    this.RaisePropertyChanged("mergeFields");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityOptions", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SecurityOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string externalPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string internalPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AppliesTo> kbaProtectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string openPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AppliesTo> passwordProtectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool protectOpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AppliesTo> webIdentityProtectionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string externalPassword {
            get {
                return this.externalPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.externalPasswordField, value) != true)) {
                    this.externalPasswordField = value;
                    this.RaisePropertyChanged("externalPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string internalPassword {
            get {
                return this.internalPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.internalPasswordField, value) != true)) {
                    this.internalPasswordField = value;
                    this.RaisePropertyChanged("internalPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AppliesTo> kbaProtection {
            get {
                return this.kbaProtectionField;
            }
            set {
                if ((this.kbaProtectionField.Equals(value) != true)) {
                    this.kbaProtectionField = value;
                    this.RaisePropertyChanged("kbaProtection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string openPassword {
            get {
                return this.openPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.openPasswordField, value) != true)) {
                    this.openPasswordField = value;
                    this.RaisePropertyChanged("openPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AppliesTo> passwordProtection {
            get {
                return this.passwordProtectionField;
            }
            set {
                if ((this.passwordProtectionField.Equals(value) != true)) {
                    this.passwordProtectionField = value;
                    this.RaisePropertyChanged("passwordProtection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool protectOpen {
            get {
                return this.protectOpenField;
            }
            set {
                if ((this.protectOpenField.Equals(value) != true)) {
                    this.protectOpenField = value;
                    this.RaisePropertyChanged("protectOpen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AppliesTo> webIdentityProtection {
            get {
                return this.webIdentityProtectionField;
            }
            set {
                if ((this.webIdentityProtectionField.Equals(value) != true)) {
                    this.webIdentityProtectionField = value;
                    this.RaisePropertyChanged("webIdentityProtection");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VaultingInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class VaultingInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool enabledField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool enabled {
            get {
                return this.enabledField;
            }
            set {
                if ((this.enabledField.Equals(value) != true)) {
                    this.enabledField = value;
                    this.RaisePropertyChanged("enabled");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetCompletionInfo", Namespace="http://dto8.api.echosign")]
    [System.SerializableAttribute()]
    public partial class WidgetCompletionInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool deframeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int delayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool deframe {
            get {
                return this.deframeField;
            }
            set {
                if ((this.deframeField.Equals(value) != true)) {
                    this.deframeField = value;
                    this.RaisePropertyChanged("deframe");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int delay {
            get {
                return this.delayField;
            }
            set {
                if ((this.delayField.Equals(value) != true)) {
                    this.delayField = value;
                    this.RaisePropertyChanged("delay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class FileInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] fileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string formKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string libraryDocumentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string libraryDocumentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mimeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] file {
            get {
                return this.fileField;
            }
            set {
                if ((object.ReferenceEquals(this.fileField, value) != true)) {
                    this.fileField = value;
                    this.RaisePropertyChanged("file");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string formKey {
            get {
                return this.formKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.formKeyField, value) != true)) {
                    this.formKeyField = value;
                    this.RaisePropertyChanged("formKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string libraryDocumentKey {
            get {
                return this.libraryDocumentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.libraryDocumentKeyField, value) != true)) {
                    this.libraryDocumentKeyField = value;
                    this.RaisePropertyChanged("libraryDocumentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string libraryDocumentName {
            get {
                return this.libraryDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.libraryDocumentNameField, value) != true)) {
                    this.libraryDocumentNameField = value;
                    this.RaisePropertyChanged("libraryDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.mimeTypeField, value) != true)) {
                    this.mimeTypeField = value;
                    this.RaisePropertyChanged("mimeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureFlow", Namespace="http://dto.api.echosign")]
    public enum SignatureFlow : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SENDER_SIGNS_LAST = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SENDER_SIGNS_FIRST = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SENDER_SIGNATURE_NOT_REQUIRED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SENDER_SIGNS_ONLY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEQUENTIAL = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PARALLEL = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MergeField", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class MergeField : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string defaultValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fieldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string defaultValue {
            get {
                return this.defaultValueField;
            }
            set {
                if ((object.ReferenceEquals(this.defaultValueField, value) != true)) {
                    this.defaultValueField = value;
                    this.RaisePropertyChanged("defaultValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fieldNameField, value) != true)) {
                    this.fieldNameField = value;
                    this.RaisePropertyChanged("fieldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AppliesTo", Namespace="http://dto.api.echosign")]
    public enum AppliesTo : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXTERNAL_USERS = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INTERNAL_USERS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL_USERS = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmbeddedWidgetCreationResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class EmbeddedWidgetCreationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string javascriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string javascript {
            get {
                return this.javascriptField;
            }
            set {
                if ((object.ReferenceEquals(this.javascriptField, value) != true)) {
                    this.javascriptField = value;
                    this.RaisePropertyChanged("javascript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmbeddedWidgetCreationResultErrorCode", Namespace="http://dto8.api.echosign")]
    public enum EmbeddedWidgetCreationResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_JAVASCRIPT = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_SIGNATURE_FLOW = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormCreationInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class FormCreationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ExternalId externalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.FileInfo[] fileInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.FormType> formTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ExternalId externalId {
            get {
                return this.externalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.externalIdField, value) != true)) {
                    this.externalIdField = value;
                    this.RaisePropertyChanged("externalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.fileInfosField, value) != true)) {
                    this.fileInfosField = value;
                    this.RaisePropertyChanged("fileInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.FormType> formType {
            get {
                return this.formTypeField;
            }
            set {
                if ((this.formTypeField.Equals(value) != true)) {
                    this.formTypeField = value;
                    this.RaisePropertyChanged("formType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalId", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class ExternalId : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string namespaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string id {
            get {
                return this.idField;
            }
            set {
                if ((object.ReferenceEquals(this.idField, value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string @namespace {
            get {
                return this.namespaceField;
            }
            set {
                if ((object.ReferenceEquals(this.namespaceField, value) != true)) {
                    this.namespaceField = value;
                    this.RaisePropertyChanged("namespace");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormType", Namespace="http://dto.api.echosign")]
    public enum FormType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NORMAL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FormCreationResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class FormCreationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentKey documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string widgetCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string widgetUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentKey documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string widgetCode {
            get {
                return this.widgetCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.widgetCodeField, value) != true)) {
                    this.widgetCodeField = value;
                    this.RaisePropertyChanged("widgetCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string widgetUrl {
            get {
                return this.widgetUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.widgetUrlField, value) != true)) {
                    this.widgetUrlField = value;
                    this.RaisePropertyChanged("widgetUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentKey", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentKey : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipientEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipientEmail {
            get {
                return this.recipientEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientEmailField, value) != true)) {
                    this.recipientEmailField = value;
                    this.RaisePropertyChanged("recipientEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateGroupResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class CreateGroupResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.CreateGroupResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.groupKeyField, value) != true)) {
                    this.groupKeyField = value;
                    this.RaisePropertyChanged("groupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.CreateGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateGroupResultErrorCode", Namespace="http://dto15.api.echosign")]
    public enum CreateGroupResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_GROUP_NAME = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_IN_ACCOUNT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_NOT_ACCEPTED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryDocumentCreationInfo", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class LibraryDocumentCreationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.FileInfo[] fileInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.LibrarySharingMode> librarySharingModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfLibraryTemplateType libraryTemplateTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SignatureFlow> signatureFlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SignatureType> signatureTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.fileInfosField, value) != true)) {
                    this.fileInfosField = value;
                    this.RaisePropertyChanged("fileInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.LibrarySharingMode> librarySharingMode {
            get {
                return this.librarySharingModeField;
            }
            set {
                if ((this.librarySharingModeField.Equals(value) != true)) {
                    this.librarySharingModeField = value;
                    this.RaisePropertyChanged("librarySharingMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfLibraryTemplateType libraryTemplateTypes {
            get {
                return this.libraryTemplateTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.libraryTemplateTypesField, value) != true)) {
                    this.libraryTemplateTypesField = value;
                    this.RaisePropertyChanged("libraryTemplateTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SignatureFlow> signatureFlow {
            get {
                return this.signatureFlowField;
            }
            set {
                if ((this.signatureFlowField.Equals(value) != true)) {
                    this.signatureFlowField = value;
                    this.RaisePropertyChanged("signatureFlow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SignatureType> signatureType {
            get {
                return this.signatureTypeField;
            }
            set {
                if ((this.signatureTypeField.Equals(value) != true)) {
                    this.signatureTypeField = value;
                    this.RaisePropertyChanged("signatureType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibrarySharingMode", Namespace="http://dto9.api.echosign")]
    public enum LibrarySharingMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        USER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GROUP = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACCOUNT = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfLibraryTemplateType", Namespace="http://dto17.api.echosign", ItemName="LibraryTemplateType")]
    [System.SerializableAttribute()]
    public class ArrayOfLibraryTemplateType : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.LibraryTemplateType>> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureType", Namespace="http://dto.api.echosign")]
    public enum SignatureType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESIGN = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WRITTEN = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryTemplateType", Namespace="http://dto17.api.echosign")]
    public enum LibraryTemplateType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FORM_FIELD_LAYER = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryDocumentCreationResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class LibraryDocumentCreationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.LibraryDocumentCreationResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.LibraryDocumentCreationResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LibraryDocumentCreationResultErrorCode", Namespace="http://dto9.api.echosign")]
    public enum LibraryDocumentCreationResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetPersonalizationInfo", Namespace="http://dto8.api.echosign")]
    [System.SerializableAttribute()]
    public partial class WidgetPersonalizationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> allowManualVerificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime expirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> reusableField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> allowManualVerification {
            get {
                return this.allowManualVerificationField;
            }
            set {
                if ((this.allowManualVerificationField.Equals(value) != true)) {
                    this.allowManualVerificationField = value;
                    this.RaisePropertyChanged("allowManualVerification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                if ((object.ReferenceEquals(this.commentField, value) != true)) {
                    this.commentField = value;
                    this.RaisePropertyChanged("comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                if ((this.expirationField.Equals(value) != true)) {
                    this.expirationField = value;
                    this.RaisePropertyChanged("expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> reusable {
            get {
                return this.reusableField;
            }
            set {
                if ((this.reusableField.Equals(value) != true)) {
                    this.reusableField = value;
                    this.RaisePropertyChanged("reusable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UrlWidgetCreationResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UrlWidgetCreationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.UrlWidgetCreationResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.UrlWidgetCreationResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UrlWidgetCreationResultErrorCode", Namespace="http://dto8.api.echosign")]
    public enum UrlWidgetCreationResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_URL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_SIGNATURE_FLOW = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentials", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UserCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelegateSigningOptions", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DelegateSigningOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newSignerEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string newSignerEmail {
            get {
                return this.newSignerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.newSignerEmailField, value) != true)) {
                    this.newSignerEmailField = value;
                    this.RaisePropertyChanged("newSignerEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelegateSigningResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DelegateSigningResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DelegateSigningResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DelegateSigningResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DelegateSigningResultErrorCode", Namespace="http://dto17.api.echosign")]
    public enum DelegateSigningResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_OPTIONS = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_NEW_SIGNER = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_MESSAGE = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNING_DELEGATION_NOT_ALLOWED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteGroupResult", Namespace="http://dto15.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DeleteGroupResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DeleteGroupResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DeleteGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeleteGroupResultErrorCode", Namespace="http://dto15.api.echosign")]
    public enum DeleteGroupResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_GROUP_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GROUP_NOT_EMPTY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CANNOT_DELETE_DEFAULT_GROUP = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_NOT_ACCEPTED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_IN_ACCOUNT = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliverDocumentResult", Namespace="http://dto13.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DeliverDocumentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deliveryURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DeliverDocumentResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deliveryURL {
            get {
                return this.deliveryURLField;
            }
            set {
                if ((object.ReferenceEquals(this.deliveryURLField, value) != true)) {
                    this.deliveryURLField = value;
                    this.RaisePropertyChanged("deliveryURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DeliverDocumentResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliverDocumentResultErrorCode", Namespace="http://dto13.api.echosign")]
    public enum DeliverDocumentResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FILE_RETRIEVAL_ERROR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisableWidgetOptions", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DisableWidgetOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string redirectUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string redirectUrl {
            get {
                return this.redirectUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.redirectUrlField, value) != true)) {
                    this.redirectUrlField = value;
                    this.RaisePropertyChanged("redirectUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisableWidgetResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DisableWidgetResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DisableWidgetResultCode> resultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DisableWidgetResultCode> resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                if ((this.resultCodeField.Equals(value) != true)) {
                    this.resultCodeField = value;
                    this.RaisePropertyChanged("resultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisableWidgetResultCode", Namespace="http://dto16.api.echosign")]
    public enum DisableWidgetResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALREADY_DISABLED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TOO_MANY_ACTIONS_SPECIFIED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_ACTION_SPECIFIED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_URL = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnableWidgetOptions", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class EnableWidgetOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnableWidgetResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class EnableWidgetResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.EnableWidgetResultCode> resultCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.EnableWidgetResultCode> resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                if ((this.resultCodeField.Equals(value) != true)) {
                    this.resultCodeField = value;
                    this.RaisePropertyChanged("resultCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EnableWidgetResultCode", Namespace="http://dto16.api.echosign")]
    public enum EnableWidgetResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALREADY_ENABLED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditTrailResult", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class AuditTrailResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] auditTrailPdfField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AuditTrailResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] auditTrailPdf {
            get {
                return this.auditTrailPdfField;
            }
            set {
                if ((object.ReferenceEquals(this.auditTrailPdfField, value) != true)) {
                    this.auditTrailPdfField = value;
                    this.RaisePropertyChanged("auditTrailPdf");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AuditTrailResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditTrailResultErrorCode", Namespace="http://dto9.api.echosign")]
    public enum AuditTrailResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_DELETED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComposeDocumentInfo", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class ComposeDocumentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.ComposeDocumentType> composeDocumentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DeviceInfo deviceInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] fileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string localeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.RecipientInfo[] recipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SignatureLocation signatureLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.ComposeDocumentType> composeDocumentType {
            get {
                return this.composeDocumentTypeField;
            }
            set {
                if ((this.composeDocumentTypeField.Equals(value) != true)) {
                    this.composeDocumentTypeField = value;
                    this.RaisePropertyChanged("composeDocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DeviceInfo deviceInfo {
            get {
                return this.deviceInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceInfoField, value) != true)) {
                    this.deviceInfoField = value;
                    this.RaisePropertyChanged("deviceInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] file {
            get {
                return this.fileField;
            }
            set {
                if ((object.ReferenceEquals(this.fileField, value) != true)) {
                    this.fileField = value;
                    this.RaisePropertyChanged("file");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                if ((object.ReferenceEquals(this.localeField, value) != true)) {
                    this.localeField = value;
                    this.RaisePropertyChanged("locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.RecipientInfo[] recipients {
            get {
                return this.recipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientsField, value) != true)) {
                    this.recipientsField = value;
                    this.RaisePropertyChanged("recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SignatureLocation signatureLocation {
            get {
                return this.signatureLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.signatureLocationField, value) != true)) {
                    this.signatureLocationField = value;
                    this.RaisePropertyChanged("signatureLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceInfo", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DeviceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string applicationDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string deviceDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DeviceLocation deviceLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime deviceTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> deviceTimeZoneOffsetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string applicationDescription {
            get {
                return this.applicationDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.applicationDescriptionField, value) != true)) {
                    this.applicationDescriptionField = value;
                    this.RaisePropertyChanged("applicationDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deviceDescription {
            get {
                return this.deviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceDescriptionField, value) != true)) {
                    this.deviceDescriptionField = value;
                    this.RaisePropertyChanged("deviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DeviceLocation deviceLocation {
            get {
                return this.deviceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceLocationField, value) != true)) {
                    this.deviceLocationField = value;
                    this.RaisePropertyChanged("deviceLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime deviceTime {
            get {
                return this.deviceTimeField;
            }
            set {
                if ((this.deviceTimeField.Equals(value) != true)) {
                    this.deviceTimeField = value;
                    this.RaisePropertyChanged("deviceTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> deviceTimeZoneOffset {
            get {
                return this.deviceTimeZoneOffsetField;
            }
            set {
                if ((this.deviceTimeZoneOffsetField.Equals(value) != true)) {
                    this.deviceTimeZoneOffsetField = value;
                    this.RaisePropertyChanged("deviceTimeZoneOffset");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SignatureLocation", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SignatureLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> bottomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> leftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> pageNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> rightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> topField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> bottom {
            get {
                return this.bottomField;
            }
            set {
                if ((this.bottomField.Equals(value) != true)) {
                    this.bottomField = value;
                    this.RaisePropertyChanged("bottom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> left {
            get {
                return this.leftField;
            }
            set {
                if ((this.leftField.Equals(value) != true)) {
                    this.leftField = value;
                    this.RaisePropertyChanged("left");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> pageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                if ((this.pageNumberField.Equals(value) != true)) {
                    this.pageNumberField = value;
                    this.RaisePropertyChanged("pageNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> right {
            get {
                return this.rightField;
            }
            set {
                if ((this.rightField.Equals(value) != true)) {
                    this.rightField = value;
                    this.RaisePropertyChanged("right");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> top {
            get {
                return this.topField;
            }
            set {
                if ((this.topField.Equals(value) != true)) {
                    this.topField = value;
                    this.RaisePropertyChanged("top");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComposeDocumentType", Namespace="http://dto17.api.echosign")]
    public enum ComposeDocumentType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGN_THEN_DELIVER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELIVER_ONLY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGN_THEN_SEND = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SEND_ONLY = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipientInfo", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class RecipientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string faxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.RecipientRole> roleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.RecipientSecurityOption[] securityOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fax {
            get {
                return this.faxField;
            }
            set {
                if ((object.ReferenceEquals(this.faxField, value) != true)) {
                    this.faxField = value;
                    this.RaisePropertyChanged("fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.RecipientRole> role {
            get {
                return this.roleField;
            }
            set {
                if ((this.roleField.Equals(value) != true)) {
                    this.roleField = value;
                    this.RaisePropertyChanged("role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.RecipientSecurityOption[] securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.securityOptionsField, value) != true)) {
                    this.securityOptionsField = value;
                    this.RaisePropertyChanged("securityOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeviceLocation", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DeviceLocation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> latitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> longitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> latitude {
            get {
                return this.latitudeField;
            }
            set {
                if ((this.latitudeField.Equals(value) != true)) {
                    this.latitudeField = value;
                    this.RaisePropertyChanged("latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> longitude {
            get {
                return this.longitudeField;
            }
            set {
                if ((this.longitudeField.Equals(value) != true)) {
                    this.longitudeField = value;
                    this.RaisePropertyChanged("longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipientRole", Namespace="http://dto14.api.echosign")]
    public enum RecipientRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVER = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecipientSecurityOption", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class RecipientSecurityOption : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AuthenticationMethod> authenticationMethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AuthenticationMethod> authenticationMethod {
            get {
                return this.authenticationMethodField;
            }
            set {
                if ((this.authenticationMethodField.Equals(value) != true)) {
                    this.authenticationMethodField = value;
                    this.RaisePropertyChanged("authenticationMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationMethod", Namespace="http://dto18.api.echosign")]
    public enum AuthenticationMethod : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INHERITED_FROM_DOCUMENT = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PASSWORD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WEB_IDENTITY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBA = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetComposeDocumentUrlResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetComposeDocumentUrlResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string composeDocumentUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetComposeDocumentUrlResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string composeDocumentUrl {
            get {
                return this.composeDocumentUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.composeDocumentUrlField, value) != true)) {
                    this.composeDocumentUrlField = value;
                    this.RaisePropertyChanged("composeDocumentUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetComposeDocumentUrlResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetComposeDocumentUrlResultErrorCode", Namespace="http://dto17.api.echosign")]
    public enum GetComposeDocumentUrlResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_ACCESS_TOKEN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_ARGUMENTS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FILE_RETRIEVAL_ERROR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentEventsForUserOptions", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentEventsForUserOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime endDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfAgreementEventType filterEventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool onlyShowLatestEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime startDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime endDate {
            get {
                return this.endDateField;
            }
            set {
                if ((this.endDateField.Equals(value) != true)) {
                    this.endDateField = value;
                    this.RaisePropertyChanged("endDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfAgreementEventType filterEvents {
            get {
                return this.filterEventsField;
            }
            set {
                if ((object.ReferenceEquals(this.filterEventsField, value) != true)) {
                    this.filterEventsField = value;
                    this.RaisePropertyChanged("filterEvents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool onlyShowLatestEvent {
            get {
                return this.onlyShowLatestEventField;
            }
            set {
                if ((this.onlyShowLatestEventField.Equals(value) != true)) {
                    this.onlyShowLatestEventField = value;
                    this.RaisePropertyChanged("onlyShowLatestEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime startDate {
            get {
                return this.startDateField;
            }
            set {
                if ((this.startDateField.Equals(value) != true)) {
                    this.startDateField = value;
                    this.RaisePropertyChanged("startDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfAgreementEventType", Namespace="http://dto18.api.echosign", ItemName="AgreementEventType")]
    [System.SerializableAttribute()]
    public class ArrayOfAgreementEventType : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.AgreementEventType>> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgreementEventType", Namespace="http://dto18.api.echosign")]
    public enum AgreementEventType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CREATED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPLOADED_BY_SENDER = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAXED_BY_SENDER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ESIGNED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OFFLINE_SYNC = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FAXIN_RECEIVED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNATURE_REQUESTED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVAL_REQUESTED = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECALLED = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REJECTED = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXPIRED = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXPIRED_AUTOMATICALLY = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHARED = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMAIL_VIEWED = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUTO_CANCELLED_CONVERSION_PROBLEM = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNER_SUGGESTED_CHANGES = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SENDER_CREATED_NEW_REVISION = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PASSWORD_AUTHENTICATION_FAILED = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBA_AUTHENTICATION_FAILED = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBA_AUTHENTICATED = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WEB_IDENTITY_AUTHENTICATED = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WEB_IDENTITY_SPECIFIED = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EMAIL_BOUNCED = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET_ENABLED = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET_DISABLED = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELEGATED = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REPLACED_SIGNER = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VAULTED = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENTS_DELETED = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 31,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentEventsForUserResult", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentEventsForUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentEventForUser[] documentEventsForUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetDocumentEventsForUserResultCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentEventForUser[] documentEventsForUser {
            get {
                return this.documentEventsForUserField;
            }
            set {
                if ((object.ReferenceEquals(this.documentEventsForUserField, value) != true)) {
                    this.documentEventsForUserField = value;
                    this.RaisePropertyChanged("documentEventsForUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetDocumentEventsForUserResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentEventForUser", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentEventForUser : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentHistoryEvent eventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentHistoryEvent @event {
            get {
                return this.eventField;
            }
            set {
                if ((object.ReferenceEquals(this.eventField, value) != true)) {
                    this.eventField = value;
                    this.RaisePropertyChanged("event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentEventsForUserResultCode", Namespace="http://dto18.api.echosign")]
    public enum GetDocumentEventsForUserResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_USER_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DATE_RANGE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERMISSION_DENIED = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentHistoryEvent", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentHistoryEvent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AgreementEventType> typeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DeviceLocation deviceLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentVersionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string synchronizationKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string actingUserIpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string actingUserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string participantEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AgreementEventType> type {
            get {
                return this.typeField;
            }
            set {
                if ((this.typeField.Equals(value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public EchoSignLib.EchoSignService.DeviceLocation deviceLocation {
            get {
                return this.deviceLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.deviceLocationField, value) != true)) {
                    this.deviceLocationField = value;
                    this.RaisePropertyChanged("deviceLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string documentVersionKey {
            get {
                return this.documentVersionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentVersionKeyField, value) != true)) {
                    this.documentVersionKeyField = value;
                    this.RaisePropertyChanged("documentVersionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string synchronizationKey {
            get {
                return this.synchronizationKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.synchronizationKeyField, value) != true)) {
                    this.synchronizationKeyField = value;
                    this.RaisePropertyChanged("synchronizationKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string actingUserIpAddress {
            get {
                return this.actingUserIpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.actingUserIpAddressField, value) != true)) {
                    this.actingUserIpAddressField = value;
                    this.RaisePropertyChanged("actingUserIpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string actingUserEmail {
            get {
                return this.actingUserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.actingUserEmailField, value) != true)) {
                    this.actingUserEmailField = value;
                    this.RaisePropertyChanged("actingUserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                if ((object.ReferenceEquals(this.commentField, value) != true)) {
                    this.commentField = value;
                    this.RaisePropertyChanged("comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.participantEmailField, value) != true)) {
                    this.participantEmailField = value;
                    this.RaisePropertyChanged("participantEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentImageUrlsOptions", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentImageUrlsOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool attachSupportingDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.IncludeScalingTypes> includeScalingTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string participantEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool attachSupportingDocuments {
            get {
                return this.attachSupportingDocumentsField;
            }
            set {
                if ((this.attachSupportingDocumentsField.Equals(value) != true)) {
                    this.attachSupportingDocumentsField = value;
                    this.RaisePropertyChanged("attachSupportingDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.IncludeScalingTypes> includeScalingTypes {
            get {
                return this.includeScalingTypesField;
            }
            set {
                if ((this.includeScalingTypesField.Equals(value) != true)) {
                    this.includeScalingTypesField = value;
                    this.RaisePropertyChanged("includeScalingTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.participantEmailField, value) != true)) {
                    this.participantEmailField = value;
                    this.RaisePropertyChanged("participantEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string versionKey {
            get {
                return this.versionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.versionKeyField, value) != true)) {
                    this.versionKeyField = value;
                    this.RaisePropertyChanged("versionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IncludeScalingTypes", Namespace="http://dto14.api.echosign")]
    public enum IncludeScalingTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIXED_WIDTH = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERCENT_ZOOM = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentImageUrlsResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentImageUrlsResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentImageUrls[] imageUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SupportingDocumentImageUrls[] supportingDocumentImageUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetDocumentImageUrlsErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentImageUrls[] imageUrls {
            get {
                return this.imageUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.imageUrlsField, value) != true)) {
                    this.imageUrlsField = value;
                    this.RaisePropertyChanged("imageUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SupportingDocumentImageUrls[] supportingDocumentImageUrls {
            get {
                return this.supportingDocumentImageUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.supportingDocumentImageUrlsField, value) != true)) {
                    this.supportingDocumentImageUrlsField = value;
                    this.RaisePropertyChanged("supportingDocumentImageUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<EchoSignLib.EchoSignService.GetDocumentImageUrlsErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentImageUrls", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentImageUrls : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.PageImageUrls[] pagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.PageImageUrls[] pages {
            get {
                return this.pagesField;
            }
            set {
                if ((object.ReferenceEquals(this.pagesField, value) != true)) {
                    this.pagesField = value;
                    this.RaisePropertyChanged("pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportingDocumentImageUrls", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SupportingDocumentImageUrls : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.PageImageUrls[] pagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fieldNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.PageImageUrls[] pages {
            get {
                return this.pagesField;
            }
            set {
                if ((object.ReferenceEquals(this.pagesField, value) != true)) {
                    this.pagesField = value;
                    this.RaisePropertyChanged("pages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fieldNameField, value) != true)) {
                    this.fieldNameField = value;
                    this.RaisePropertyChanged("fieldName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentImageUrlsErrorCode", Namespace="http://dto14.api.echosign")]
    public enum GetDocumentImageUrlsErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_VERSION_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_PARTICIPANT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_AVAILABLE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_EXPOSED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_REMOVED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_DELETED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IMAGES_NOT_AVAILABLE = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INTERNAL_ERROR = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageImageUrls", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class PageImageUrls : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.PageImageUrl[] imagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.PageImageUrl[] images {
            get {
                return this.imagesField;
            }
            set {
                if ((object.ReferenceEquals(this.imagesField, value) != true)) {
                    this.imagesField = value;
                    this.RaisePropertyChanged("images");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PageImageUrl", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class PageImageUrl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.ScalingType> scalingTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> zoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> widthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.ScalingType> scalingType {
            get {
                return this.scalingTypeField;
            }
            set {
                if ((this.scalingTypeField.Equals(value) != true)) {
                    this.scalingTypeField = value;
                    this.RaisePropertyChanged("scalingType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> zoom {
            get {
                return this.zoomField;
            }
            set {
                if ((this.zoomField.Equals(value) != true)) {
                    this.zoomField = value;
                    this.RaisePropertyChanged("zoom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.Nullable<int> width {
            get {
                return this.widthField;
            }
            set {
                if ((this.widthField.Equals(value) != true)) {
                    this.widthField = value;
                    this.RaisePropertyChanged("width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScalingType", Namespace="http://dto16.api.echosign")]
    public enum ScalingType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FIXED_WIDTH = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERCENT_ZOOM = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentInfo", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentHistoryEvent[] eventsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ParticipantInfo[] participantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AgreementStatus> statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string latestDocumentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime expirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string localeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.NextParticipantInfo[] nextParticipantInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfSecurityOption securityOptionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentHistoryEvent[] events {
            get {
                return this.eventsField;
            }
            set {
                if ((object.ReferenceEquals(this.eventsField, value) != true)) {
                    this.eventsField = value;
                    this.RaisePropertyChanged("events");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ParticipantInfo[] participants {
            get {
                return this.participantsField;
            }
            set {
                if ((object.ReferenceEquals(this.participantsField, value) != true)) {
                    this.participantsField = value;
                    this.RaisePropertyChanged("participants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AgreementStatus> status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string latestDocumentKey {
            get {
                return this.latestDocumentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.latestDocumentKeyField, value) != true)) {
                    this.latestDocumentKeyField = value;
                    this.RaisePropertyChanged("latestDocumentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                if ((this.expirationField.Equals(value) != true)) {
                    this.expirationField = value;
                    this.RaisePropertyChanged("expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                if ((object.ReferenceEquals(this.localeField, value) != true)) {
                    this.localeField = value;
                    this.RaisePropertyChanged("locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public EchoSignLib.EchoSignService.NextParticipantInfo[] nextParticipantInfos {
            get {
                return this.nextParticipantInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.nextParticipantInfosField, value) != true)) {
                    this.nextParticipantInfosField = value;
                    this.RaisePropertyChanged("nextParticipantInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public EchoSignLib.EchoSignService.ArrayOfSecurityOption securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.securityOptionsField, value) != true)) {
                    this.securityOptionsField = value;
                    this.RaisePropertyChanged("securityOptions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipantInfo", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class ParticipantInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ParticipantInfo[] alternateParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.UserAgreementStatus> statusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfParticipantRole rolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfParticipantSecurityOption securityOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ParticipantInfo[] alternateParticipants {
            get {
                return this.alternateParticipantsField;
            }
            set {
                if ((object.ReferenceEquals(this.alternateParticipantsField, value) != true)) {
                    this.alternateParticipantsField = value;
                    this.RaisePropertyChanged("alternateParticipants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.UserAgreementStatus> status {
            get {
                return this.statusField;
            }
            set {
                if ((this.statusField.Equals(value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public EchoSignLib.EchoSignService.ArrayOfParticipantRole roles {
            get {
                return this.rolesField;
            }
            set {
                if ((object.ReferenceEquals(this.rolesField, value) != true)) {
                    this.rolesField = value;
                    this.RaisePropertyChanged("roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public EchoSignLib.EchoSignService.ArrayOfParticipantSecurityOption securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.securityOptionsField, value) != true)) {
                    this.securityOptionsField = value;
                    this.RaisePropertyChanged("securityOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgreementStatus", Namespace="http://dto17.api.echosign")]
    public enum AgreementStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OUT_FOR_SIGNATURE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_REVIEW = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ABORTED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_LIBRARY = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXPIRED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARCHIVED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PREFILL = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUTHORING = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_FAXIN = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_VERIFICATION = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET_WAITING_FOR_VERIFICATION = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_PAYMENT = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OUT_FOR_APPROVAL = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED_IN_ADOBE_ACROBAT = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED_IN_ADOBE_READER = 18,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NextParticipantInfo", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class NextParticipantInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime waitingSinceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime waitingSince {
            get {
                return this.waitingSinceField;
            }
            set {
                if ((this.waitingSinceField.Equals(value) != true)) {
                    this.waitingSinceField = value;
                    this.RaisePropertyChanged("waitingSince");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfSecurityOption", Namespace="http://dto13.api.echosign", ItemName="SecurityOption")]
    [System.SerializableAttribute()]
    public class ArrayOfSecurityOption : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.SecurityOption>> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserAgreementStatus", Namespace="http://dto17.api.echosign")]
    public enum UserAgreementStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_MY_SIGNATURE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_MY_APPROVAL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OUT_FOR_SIGNATURE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECALLED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HIDDEN = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_YET_VISIBLE = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_FAXIN = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARCHIVED = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNKNOWN = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PARTIAL = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FORM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_AUTHORING = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OUT_FOR_APPROVAL = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXPIRED = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_MY_REVIEW = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IN_REVIEW = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED_IN_ADOBE_ACROBAT = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED_IN_ADOBE_READER = 21,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfParticipantRole", Namespace="http://dto14.api.echosign", ItemName="ParticipantRole")]
    [System.SerializableAttribute()]
    public class ArrayOfParticipantRole : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.ParticipantRole>> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfParticipantSecurityOption", Namespace="http://dto13.api.echosign", ItemName="ParticipantSecurityOption")]
    [System.SerializableAttribute()]
    public class ArrayOfParticipantSecurityOption : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.ParticipantSecurityOption>> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipantRole", Namespace="http://dto14.api.echosign")]
    public enum ParticipantRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SENDER = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNER = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CC = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELEGATE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHARE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ParticipantSecurityOption", Namespace="http://dto13.api.echosign")]
    public enum ParticipantSecurityOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PASSWORD = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WEB_IDENTITY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        KBA = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityOption", Namespace="http://dto13.api.echosign")]
    public enum SecurityOption : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OPEN_PROTECTED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentInfoList", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentInfoList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentInfo[] documentInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DocumentInfoListErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentInfo[] documentInfos {
            get {
                return this.documentInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.documentInfosField, value) != true)) {
                    this.documentInfosField = value;
                    this.RaisePropertyChanged("documentInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DocumentInfoListErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentInfoListErrorCode", Namespace="http://dto11.api.echosign")]
    public enum DocumentInfoListErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_ACCESS_WITHOUT_CREDENTIAL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_CREDENTIAL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_EXTERNAL_ID = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentUrlResult", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentUrlResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DocumentUrlErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DocumentUrlErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentUrlErrorCode", Namespace="http://dto.api.echosign")]
    public enum DocumentUrlErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_VERSION_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_DELETED = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentUrlsOptions", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentUrlsOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool attachSupportingDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool auditReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool combineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string participantEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool attachSupportingDocuments {
            get {
                return this.attachSupportingDocumentsField;
            }
            set {
                if ((this.attachSupportingDocumentsField.Equals(value) != true)) {
                    this.attachSupportingDocumentsField = value;
                    this.RaisePropertyChanged("attachSupportingDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool auditReport {
            get {
                return this.auditReportField;
            }
            set {
                if ((this.auditReportField.Equals(value) != true)) {
                    this.auditReportField = value;
                    this.RaisePropertyChanged("auditReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool combine {
            get {
                return this.combineField;
            }
            set {
                if ((this.combineField.Equals(value) != true)) {
                    this.combineField = value;
                    this.RaisePropertyChanged("combine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.participantEmailField, value) != true)) {
                    this.participantEmailField = value;
                    this.RaisePropertyChanged("participantEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string versionKey {
            get {
                return this.versionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.versionKeyField, value) != true)) {
                    this.versionKeyField = value;
                    this.RaisePropertyChanged("versionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentUrlsResult", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentUrlsResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetDocumentUrlsErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SupportingDocumentUrl[] supportingDocumentUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentUrl[] urlsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetDocumentUrlsErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SupportingDocumentUrl[] supportingDocumentUrls {
            get {
                return this.supportingDocumentUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.supportingDocumentUrlsField, value) != true)) {
                    this.supportingDocumentUrlsField = value;
                    this.RaisePropertyChanged("supportingDocumentUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentUrl[] urls {
            get {
                return this.urlsField;
            }
            set {
                if ((object.ReferenceEquals(this.urlsField, value) != true)) {
                    this.urlsField = value;
                    this.RaisePropertyChanged("urls");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentUrlsErrorCode", Namespace="http://dto14.api.echosign")]
    public enum GetDocumentUrlsErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_VERSION_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_PARTICIPANT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_AVAILABLE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_EXPOSED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_REMOVED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_DELETED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INTERNAL_ERROR = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportingDocumentUrl", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SupportingDocumentUrl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fieldNameField, value) != true)) {
                    this.fieldNameField = value;
                    this.RaisePropertyChanged("fieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentUrl", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentUrl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentsOptions", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentsOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool attachSupportingDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool auditReportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool combineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string participantEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool attachSupportingDocuments {
            get {
                return this.attachSupportingDocumentsField;
            }
            set {
                if ((this.attachSupportingDocumentsField.Equals(value) != true)) {
                    this.attachSupportingDocumentsField = value;
                    this.RaisePropertyChanged("attachSupportingDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool auditReport {
            get {
                return this.auditReportField;
            }
            set {
                if ((this.auditReportField.Equals(value) != true)) {
                    this.auditReportField = value;
                    this.RaisePropertyChanged("auditReport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool combine {
            get {
                return this.combineField;
            }
            set {
                if ((this.combineField.Equals(value) != true)) {
                    this.combineField = value;
                    this.RaisePropertyChanged("combine");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string participantEmail {
            get {
                return this.participantEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.participantEmailField, value) != true)) {
                    this.participantEmailField = value;
                    this.RaisePropertyChanged("participantEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string versionKey {
            get {
                return this.versionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.versionKeyField, value) != true)) {
                    this.versionKeyField = value;
                    this.RaisePropertyChanged("versionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentsResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentsResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SupportingDocument[] supportingDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentContent[] documentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetDocumentsErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SupportingDocument[] supportingDocuments {
            get {
                return this.supportingDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.supportingDocumentsField, value) != true)) {
                    this.supportingDocumentsField = value;
                    this.RaisePropertyChanged("supportingDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public EchoSignLib.EchoSignService.DocumentContent[] documents {
            get {
                return this.documentsField;
            }
            set {
                if ((object.ReferenceEquals(this.documentsField, value) != true)) {
                    this.documentsField = value;
                    this.RaisePropertyChanged("documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.Nullable<EchoSignLib.EchoSignService.GetDocumentsErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportingDocument", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SupportingDocument : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string supportingDocumentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] contentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string displayLabelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fieldNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mimeTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string supportingDocumentKey {
            get {
                return this.supportingDocumentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.supportingDocumentKeyField, value) != true)) {
                    this.supportingDocumentKeyField = value;
                    this.RaisePropertyChanged("supportingDocumentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public byte[] content {
            get {
                return this.contentField;
            }
            set {
                if ((object.ReferenceEquals(this.contentField, value) != true)) {
                    this.contentField = value;
                    this.RaisePropertyChanged("content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string displayLabel {
            get {
                return this.displayLabelField;
            }
            set {
                if ((object.ReferenceEquals(this.displayLabelField, value) != true)) {
                    this.displayLabelField = value;
                    this.RaisePropertyChanged("displayLabel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fieldNameField, value) != true)) {
                    this.fieldNameField = value;
                    this.RaisePropertyChanged("fieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string mimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.mimeTypeField, value) != true)) {
                    this.mimeTypeField = value;
                    this.RaisePropertyChanged("mimeType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentContent", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentContent : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] bytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mimetypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] bytes {
            get {
                return this.bytesField;
            }
            set {
                if ((object.ReferenceEquals(this.bytesField, value) != true)) {
                    this.bytesField = value;
                    this.RaisePropertyChanged("bytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mimetype {
            get {
                return this.mimetypeField;
            }
            set {
                if ((object.ReferenceEquals(this.mimetypeField, value) != true)) {
                    this.mimetypeField = value;
                    this.RaisePropertyChanged("mimetype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentsErrorCode", Namespace="http://dto14.api.echosign")]
    public enum GetDocumentsErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_VERSION_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_PARTICIPANT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_AVAILABLE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_EXPOSED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_REMOVED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_DELETED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INTERNAL_ERROR = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentsForUserResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetDocumentsForUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentListItem[] documentListForUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetDocumentsForUserResultCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentListItem[] documentListForUser {
            get {
                return this.documentListForUserField;
            }
            set {
                if ((object.ReferenceEquals(this.documentListForUserField, value) != true)) {
                    this.documentListForUserField = value;
                    this.RaisePropertyChanged("documentListForUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetDocumentsForUserResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentListItem", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentListItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DocumentListItemUserDocumentStatus> userDocumentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string latestDocumentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime displayDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DisplayUserInfo displayUserInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool esignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool megaSignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DocumentListItemUserDocumentStatus> userDocumentStatus {
            get {
                return this.userDocumentStatusField;
            }
            set {
                if ((this.userDocumentStatusField.Equals(value) != true)) {
                    this.userDocumentStatusField = value;
                    this.RaisePropertyChanged("userDocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string latestDocumentKey {
            get {
                return this.latestDocumentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.latestDocumentKeyField, value) != true)) {
                    this.latestDocumentKeyField = value;
                    this.RaisePropertyChanged("latestDocumentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime displayDate {
            get {
                return this.displayDateField;
            }
            set {
                if ((this.displayDateField.Equals(value) != true)) {
                    this.displayDateField = value;
                    this.RaisePropertyChanged("displayDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public EchoSignLib.EchoSignService.DisplayUserInfo displayUserInfo {
            get {
                return this.displayUserInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.displayUserInfoField, value) != true)) {
                    this.displayUserInfoField = value;
                    this.RaisePropertyChanged("displayUserInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool esign {
            get {
                return this.esignField;
            }
            set {
                if ((this.esignField.Equals(value) != true)) {
                    this.esignField = value;
                    this.RaisePropertyChanged("esign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool megaSign {
            get {
                return this.megaSignField;
            }
            set {
                if ((this.megaSignField.Equals(value) != true)) {
                    this.megaSignField = value;
                    this.RaisePropertyChanged("megaSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetDocumentsForUserResultCode", Namespace="http://dto14.api.echosign")]
    public enum GetDocumentsForUserResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_USER_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_USER_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERMISSION_DENIED = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DisplayUserInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DisplayUserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fullNameOrEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fullNameOrEmail {
            get {
                return this.fullNameOrEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.fullNameOrEmailField, value) != true)) {
                    this.fullNameOrEmailField = value;
                    this.RaisePropertyChanged("fullNameOrEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentListItemUserDocumentStatus", Namespace="http://dto17.api.echosign")]
    public enum DocumentListItemUserDocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_MY_SIGNATURE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_MY_APPROVAL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OUT_FOR_SIGNATURE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OUT_FOR_APPROVAL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        APPROVED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RECALLED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_FAXIN = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ARCHIVED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FORM = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXPIRED = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WIDGET = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WAITING_FOR_AUTHORING = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED_IN_ADOBE_ACROBAT = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNED_IN_ADOBE_READER = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 15,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFormDataResult", Namespace="http://dto8.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetFormDataResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetFormDataResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string formDataCsvField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetFormDataResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string formDataCsv {
            get {
                return this.formDataCsvField;
            }
            set {
                if ((object.ReferenceEquals(this.formDataCsvField, value) != true)) {
                    this.formDataCsvField = value;
                    this.RaisePropertyChanged("formDataCsv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetFormDataResultErrorCode", Namespace="http://dto8.api.echosign")]
    public enum GetFormDataResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_DELETED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_FORM_DATA = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGroupsInAccountResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetGroupsInAccountResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.GroupInfo[] groupListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetGroupsInAccountResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.GroupInfo[] groupList {
            get {
                return this.groupListField;
            }
            set {
                if ((object.ReferenceEquals(this.groupListField, value) != true)) {
                    this.groupListField = value;
                    this.RaisePropertyChanged("groupList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.GetGroupsInAccountResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupInfo", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GroupInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.groupKeyField, value) != true)) {
                    this.groupKeyField = value;
                    this.RaisePropertyChanged("groupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.groupNameField, value) != true)) {
                    this.groupNameField = value;
                    this.RaisePropertyChanged("groupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetGroupsInAccountResultErrorCode", Namespace="http://dto15.api.echosign")]
    public enum GetGroupsInAccountResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_NOT_ACCEPTED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_IN_ACCOUNT = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 6,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentImageList", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentImageList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DocumentImageListErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentPageImages[] pageImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.DocumentImageListErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentPageImages[] pageImages {
            get {
                return this.pageImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.pageImagesField, value) != true)) {
                    this.pageImagesField = value;
                    this.RaisePropertyChanged("pageImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentImageListErrorCode", Namespace="http://dto.api.echosign")]
    public enum DocumentImageListErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_VERSION_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_DELETED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IMAGES_NOT_AVAILABLE = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentPageImages", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentPageImages : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string largeImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string mediumImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string smallImageUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string largeImageUrl {
            get {
                return this.largeImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.largeImageUrlField, value) != true)) {
                    this.largeImageUrlField = value;
                    this.RaisePropertyChanged("largeImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mediumImageUrl {
            get {
                return this.mediumImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.mediumImageUrlField, value) != true)) {
                    this.mediumImageUrlField = value;
                    this.RaisePropertyChanged("mediumImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string smallImageUrl {
            get {
                return this.smallImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.smallImageUrlField, value) != true)) {
                    this.smallImageUrlField = value;
                    this.RaisePropertyChanged("smallImageUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLibraryDocumentsForUserResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetLibraryDocumentsForUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentLibraryItem[] libraryDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetLibraryDocumentsForUserErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentLibraryItem[] libraryDocuments {
            get {
                return this.libraryDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.libraryDocumentsField, value) != true)) {
                    this.libraryDocumentsField = value;
                    this.RaisePropertyChanged("libraryDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.GetLibraryDocumentsForUserErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentLibraryItem", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentLibraryItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfLibraryTemplateType libraryTemplateTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime modifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.DocumentLibraryItemScope> scopeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfLibraryTemplateType libraryTemplateTypes {
            get {
                return this.libraryTemplateTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.libraryTemplateTypesField, value) != true)) {
                    this.libraryTemplateTypesField = value;
                    this.RaisePropertyChanged("libraryTemplateTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public System.DateTime modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                if ((this.modifiedDateField.Equals(value) != true)) {
                    this.modifiedDateField = value;
                    this.RaisePropertyChanged("modifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Nullable<EchoSignLib.EchoSignService.DocumentLibraryItemScope> scope {
            get {
                return this.scopeField;
            }
            set {
                if ((this.scopeField.Equals(value) != true)) {
                    this.scopeField = value;
                    this.RaisePropertyChanged("scope");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetLibraryDocumentsForUserErrorCode", Namespace="http://dto9.api.echosign")]
    public enum GetLibraryDocumentsForUserErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_USER_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERMISSION_DENIED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentLibraryItemScope", Namespace="http://dto9.api.echosign")]
    public enum DocumentLibraryItemScope : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERSONAL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SHARED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GLOBAL = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMegaSignDocumentResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetMegaSignDocumentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentListItem[] documentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetMegaSignDocumentResultCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentListItem[] documents {
            get {
                return this.documentsField;
            }
            set {
                if ((object.ReferenceEquals(this.documentsField, value) != true)) {
                    this.documentsField = value;
                    this.RaisePropertyChanged("documents");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetMegaSignDocumentResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetMegaSignDocumentResultCode", Namespace="http://dto.api.echosign")]
    public enum GetMegaSignDocumentResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERMISSION_DENIED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_MEGASIGN = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXPIRED = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWidgetsForUserResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetWidgetsForUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.WidgetItem[] widgetsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetWidgetsForUserErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.WidgetItem[] widgets {
            get {
                return this.widgetsField;
            }
            set {
                if ((object.ReferenceEquals(this.widgetsField, value) != true)) {
                    this.widgetsField = value;
                    this.RaisePropertyChanged("widgets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.GetWidgetsForUserErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WidgetItem", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class WidgetItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.ReusableDocumentStatus> reusableDocumentStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string javascriptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime modifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.ReusableDocumentStatus> reusableDocumentStatus {
            get {
                return this.reusableDocumentStatusField;
            }
            set {
                if ((this.reusableDocumentStatusField.Equals(value) != true)) {
                    this.reusableDocumentStatusField = value;
                    this.RaisePropertyChanged("reusableDocumentStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string javascript {
            get {
                return this.javascriptField;
            }
            set {
                if ((object.ReferenceEquals(this.javascriptField, value) != true)) {
                    this.javascriptField = value;
                    this.RaisePropertyChanged("javascript");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public System.DateTime modifiedDate {
            get {
                return this.modifiedDateField;
            }
            set {
                if ((this.modifiedDateField.Equals(value) != true)) {
                    this.modifiedDateField = value;
                    this.RaisePropertyChanged("modifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetWidgetsForUserErrorCode", Namespace="http://dto10.api.echosign")]
    public enum GetWidgetsForUserErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_USER_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PERMISSION_DENIED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReusableDocumentStatus", Namespace="http://dto16.api.echosign")]
    public enum ReusableDocumentStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ENABLED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DISABLED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SigningUrlResult", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SigningUrlResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SigningUrlResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SigningUrl[] signingUrlsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SigningUrlResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SigningUrl[] signingUrls {
            get {
                return this.signingUrlsField;
            }
            set {
                if ((object.ReferenceEquals(this.signingUrlsField, value) != true)) {
                    this.signingUrlsField = value;
                    this.RaisePropertyChanged("signingUrls");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SigningUrlResultErrorCode", Namespace="http://dto14.api.echosign")]
    public enum SigningUrlResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_DELETED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_SIGNABLE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_VISIBLE = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_EXPOSED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_ALREADY_SIGNED = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SigningUrl", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SigningUrl : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string esignUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string simpleEsignUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string esignUrl {
            get {
                return this.esignUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.esignUrlField, value) != true)) {
                    this.esignUrlField = value;
                    this.RaisePropertyChanged("esignUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string simpleEsignUrl {
            get {
                return this.simpleEsignUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.simpleEsignUrlField, value) != true)) {
                    this.simpleEsignUrlField = value;
                    this.RaisePropertyChanged("simpleEsignUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfString", Namespace="http://api.echosign", ItemName="string")]
    [System.SerializableAttribute()]
    public class ArrayOfString : System.Collections.Generic.List<string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSupportingDocumentsOptions", Namespace="http://dto14.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetSupportingDocumentsOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SupportingDocumentContentFormat> documentFormatRequestedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SupportingDocumentContentFormat> documentFormatRequested {
            get {
                return this.documentFormatRequestedField;
            }
            set {
                if ((this.documentFormatRequestedField.Equals(value) != true)) {
                    this.documentFormatRequestedField = value;
                    this.RaisePropertyChanged("documentFormatRequested");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SupportingDocumentContentFormat", Namespace="http://dto14.api.echosign")]
    public enum SupportingDocumentContentFormat : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NONE = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ORIGINAL = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CONVERTED_PDF = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSupportingDocumentsResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetSupportingDocumentsResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SupportingDocument[] supportingDocumentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetSupportingDocumentsResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SupportingDocument[] supportingDocuments {
            get {
                return this.supportingDocumentsField;
            }
            set {
                if ((object.ReferenceEquals(this.supportingDocumentsField, value) != true)) {
                    this.supportingDocumentsField = value;
                    this.RaisePropertyChanged("supportingDocuments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.GetSupportingDocumentsResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetSupportingDocumentsResultErrorCode", Namespace="http://dto14.api.echosign")]
    public enum GetSupportingDocumentsResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_DELETED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_AVAILABLE = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_ORIGINAL_FORMAT_NOT_ALLOWED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_OF_USE_NOT_ACCEPTED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 9,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserInfoOptions", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetUserInfoOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserInfoResult", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetUserInfoResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.UserData dataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetUserInfoResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.UserData data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.GetUserInfoResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserData", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UserData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.AccountType> accountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfUserCapabilityFlag capabilityFlagsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string channelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string initialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string localeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime passwordExpirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfUserRole rolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string titleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string account {
            get {
                return this.accountField;
            }
            set {
                if ((object.ReferenceEquals(this.accountField, value) != true)) {
                    this.accountField = value;
                    this.RaisePropertyChanged("account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.AccountType> accountType {
            get {
                return this.accountTypeField;
            }
            set {
                if ((this.accountTypeField.Equals(value) != true)) {
                    this.accountTypeField = value;
                    this.RaisePropertyChanged("accountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfUserCapabilityFlag capabilityFlags {
            get {
                return this.capabilityFlagsField;
            }
            set {
                if ((object.ReferenceEquals(this.capabilityFlagsField, value) != true)) {
                    this.capabilityFlagsField = value;
                    this.RaisePropertyChanged("capabilityFlags");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string channel {
            get {
                return this.channelField;
            }
            set {
                if ((object.ReferenceEquals(this.channelField, value) != true)) {
                    this.channelField = value;
                    this.RaisePropertyChanged("channel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstNameField, value) != true)) {
                    this.firstNameField = value;
                    this.RaisePropertyChanged("firstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string group {
            get {
                return this.groupField;
            }
            set {
                if ((object.ReferenceEquals(this.groupField, value) != true)) {
                    this.groupField = value;
                    this.RaisePropertyChanged("group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string initials {
            get {
                return this.initialsField;
            }
            set {
                if ((object.ReferenceEquals(this.initialsField, value) != true)) {
                    this.initialsField = value;
                    this.RaisePropertyChanged("initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastName {
            get {
                return this.lastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastNameField, value) != true)) {
                    this.lastNameField = value;
                    this.RaisePropertyChanged("lastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                if ((object.ReferenceEquals(this.localeField, value) != true)) {
                    this.localeField = value;
                    this.RaisePropertyChanged("locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime passwordExpiration {
            get {
                return this.passwordExpirationField;
            }
            set {
                if ((this.passwordExpirationField.Equals(value) != true)) {
                    this.passwordExpirationField = value;
                    this.RaisePropertyChanged("passwordExpiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfUserRole roles {
            get {
                return this.rolesField;
            }
            set {
                if ((object.ReferenceEquals(this.rolesField, value) != true)) {
                    this.rolesField = value;
                    this.RaisePropertyChanged("roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string title {
            get {
                return this.titleField;
            }
            set {
                if ((object.ReferenceEquals(this.titleField, value) != true)) {
                    this.titleField = value;
                    this.RaisePropertyChanged("title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUserInfoResultErrorCode", Namespace="http://dto18.api.echosign")]
    public enum GetUserInfoResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_EMAIL = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfUserCapabilityFlag", Namespace="http://dto18.api.echosign", ItemName="UserCapabilityFlag")]
    [System.SerializableAttribute()]
    public class ArrayOfUserCapabilityFlag : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.UserCapabilityFlag>> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="ArrayOfUserRole", Namespace="http://dto18.api.echosign", ItemName="UserRole")]
    [System.SerializableAttribute()]
    public class ArrayOfUserRole : System.Collections.Generic.List<System.Nullable<EchoSignLib.EchoSignService.UserRole>> {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCapabilityFlag", Namespace="http://dto18.api.echosign")]
    public enum UserCapabilityFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN_SEND = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN_SIGN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CAN_REPLACE_SIGNER = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VAULT_ENABLED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VAULT_PER_AGREEMENT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://dto18.api.echosign")]
    public enum UserRole : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        API = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GROUP_ADMIN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACCOUNT_ADMIN = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OTHER = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersInAccountResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetUsersInAccountResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.UserInfo[] userListForAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetUsersInAccountResultCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.UserInfo[] userListForAccount {
            get {
                return this.userListForAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.userListForAccountField, value) != true)) {
                    this.userListForAccountField = value;
                    this.RaisePropertyChanged("userListForAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.GetUsersInAccountResultCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserInfo", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UserInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string groupKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string companyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fullNameOrEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string groupKey {
            get {
                return this.groupKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.groupKeyField, value) != true)) {
                    this.groupKeyField = value;
                    this.RaisePropertyChanged("groupKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string company {
            get {
                return this.companyField;
            }
            set {
                if ((object.ReferenceEquals(this.companyField, value) != true)) {
                    this.companyField = value;
                    this.RaisePropertyChanged("company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string fullNameOrEmail {
            get {
                return this.fullNameOrEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.fullNameOrEmailField, value) != true)) {
                    this.fullNameOrEmailField = value;
                    this.RaisePropertyChanged("fullNameOrEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string userKey {
            get {
                return this.userKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.userKeyField, value) != true)) {
                    this.userKeyField = value;
                    this.RaisePropertyChanged("userKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersInAccountResultCode", Namespace="http://dto.api.echosign")]
    public enum GetUsersInAccountResultCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersInGroupResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class GetUsersInGroupResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.UserInfo[] userListForGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.GetUsersInGroupResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.UserInfo[] userListForGroup {
            get {
                return this.userListForGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.userListForGroupField, value) != true)) {
                    this.userListForGroupField = value;
                    this.RaisePropertyChanged("userListForGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public System.Nullable<EchoSignLib.EchoSignService.GetUsersInGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetUsersInGroupResultErrorCode", Namespace="http://dto15.api.echosign")]
    public enum GetUsersInGroupResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_GROUP_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_NOT_ACCEPTED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_IN_ACCOUNT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentCreationInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentCreationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.CallbackInfo callbackInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfString ccsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> daysUntilSigningDeadlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ExternalId externalIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.FileInfo[] fileInfosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.FileInfo[] formFieldLayerTemplatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string localeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.MergeFieldInfo mergeFieldInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] mergeFileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.RecipientInfo[] recipientsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.ReminderFrequency> reminderFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.SecurityOptions securityOptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SignatureFlow> signatureFlowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SignatureType> signatureTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfString tosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.VaultingInfo vaultingInfoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.CallbackInfo callbackInfo {
            get {
                return this.callbackInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.callbackInfoField, value) != true)) {
                    this.callbackInfoField = value;
                    this.RaisePropertyChanged("callbackInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfString ccs {
            get {
                return this.ccsField;
            }
            set {
                if ((object.ReferenceEquals(this.ccsField, value) != true)) {
                    this.ccsField = value;
                    this.RaisePropertyChanged("ccs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> daysUntilSigningDeadline {
            get {
                return this.daysUntilSigningDeadlineField;
            }
            set {
                if ((this.daysUntilSigningDeadlineField.Equals(value) != true)) {
                    this.daysUntilSigningDeadlineField = value;
                    this.RaisePropertyChanged("daysUntilSigningDeadline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ExternalId externalId {
            get {
                return this.externalIdField;
            }
            set {
                if ((object.ReferenceEquals(this.externalIdField, value) != true)) {
                    this.externalIdField = value;
                    this.RaisePropertyChanged("externalId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.FileInfo[] fileInfos {
            get {
                return this.fileInfosField;
            }
            set {
                if ((object.ReferenceEquals(this.fileInfosField, value) != true)) {
                    this.fileInfosField = value;
                    this.RaisePropertyChanged("fileInfos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.FileInfo[] formFieldLayerTemplates {
            get {
                return this.formFieldLayerTemplatesField;
            }
            set {
                if ((object.ReferenceEquals(this.formFieldLayerTemplatesField, value) != true)) {
                    this.formFieldLayerTemplatesField = value;
                    this.RaisePropertyChanged("formFieldLayerTemplates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string locale {
            get {
                return this.localeField;
            }
            set {
                if ((object.ReferenceEquals(this.localeField, value) != true)) {
                    this.localeField = value;
                    this.RaisePropertyChanged("locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.MergeFieldInfo mergeFieldInfo {
            get {
                return this.mergeFieldInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.mergeFieldInfoField, value) != true)) {
                    this.mergeFieldInfoField = value;
                    this.RaisePropertyChanged("mergeFieldInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] mergeFile {
            get {
                return this.mergeFileField;
            }
            set {
                if ((object.ReferenceEquals(this.mergeFileField, value) != true)) {
                    this.mergeFileField = value;
                    this.RaisePropertyChanged("mergeFile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.RecipientInfo[] recipients {
            get {
                return this.recipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientsField, value) != true)) {
                    this.recipientsField = value;
                    this.RaisePropertyChanged("recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.ReminderFrequency> reminderFrequency {
            get {
                return this.reminderFrequencyField;
            }
            set {
                if ((this.reminderFrequencyField.Equals(value) != true)) {
                    this.reminderFrequencyField = value;
                    this.RaisePropertyChanged("reminderFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.SecurityOptions securityOptions {
            get {
                return this.securityOptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.securityOptionsField, value) != true)) {
                    this.securityOptionsField = value;
                    this.RaisePropertyChanged("securityOptions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SignatureFlow> signatureFlow {
            get {
                return this.signatureFlowField;
            }
            set {
                if ((this.signatureFlowField.Equals(value) != true)) {
                    this.signatureFlowField = value;
                    this.RaisePropertyChanged("signatureFlow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SignatureType> signatureType {
            get {
                return this.signatureTypeField;
            }
            set {
                if ((this.signatureTypeField.Equals(value) != true)) {
                    this.signatureTypeField = value;
                    this.RaisePropertyChanged("signatureType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfString tos {
            get {
                return this.tosField;
            }
            set {
                if ((object.ReferenceEquals(this.tosField, value) != true)) {
                    this.tosField = value;
                    this.RaisePropertyChanged("tos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.VaultingInfo vaultingInfo {
            get {
                return this.vaultingInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.vaultingInfoField, value) != true)) {
                    this.vaultingInfoField = value;
                    this.RaisePropertyChanged("vaultingInfo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReminderFrequency", Namespace="http://dto.api.echosign")]
    public enum ReminderFrequency : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DAILY_UNTIL_SIGNED = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WEEKLY_UNTIL_SIGNED = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NEVER = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InitiateInteractiveSendDocumentResult", Namespace="http://dto9.api.echosign")]
    [System.SerializableAttribute()]
    public partial class InitiateInteractiveSendDocumentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentKey1 documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.InitiateInteractiveSendDocumentResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool needsInteractionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sendDocumentURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentKey1 documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.InitiateInteractiveSendDocumentResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool needsInteraction {
            get {
                return this.needsInteractionField;
            }
            set {
                if ((this.needsInteractionField.Equals(value) != true)) {
                    this.needsInteractionField = value;
                    this.RaisePropertyChanged("needsInteraction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sendDocumentURL {
            get {
                return this.sendDocumentURLField;
            }
            set {
                if ((object.ReferenceEquals(this.sendDocumentURLField, value) != true)) {
                    this.sendDocumentURLField = value;
                    this.RaisePropertyChanged("sendDocumentURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocumentKey", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class DocumentKey1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipientEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipientEmail {
            get {
                return this.recipientEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientEmailField, value) != true)) {
                    this.recipientEmailField = value;
                    this.RaisePropertyChanged("recipientEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InitiateInteractiveSendDocumentResultErrorCode", Namespace="http://dto9.api.echosign")]
    public enum InitiateInteractiveSendDocumentResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FILE_RETRIEVAL_ERROR = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UsersToMoveInfo", Namespace="http://dto15.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UsersToMoveInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool preserveGroupAdminsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.ArrayOfString userEmailsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool preserveGroupAdmins {
            get {
                return this.preserveGroupAdminsField;
            }
            set {
                if ((this.preserveGroupAdminsField.Equals(value) != true)) {
                    this.preserveGroupAdminsField = value;
                    this.RaisePropertyChanged("preserveGroupAdmins");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.ArrayOfString userEmails {
            get {
                return this.userEmailsField;
            }
            set {
                if ((object.ReferenceEquals(this.userEmailsField, value) != true)) {
                    this.userEmailsField = value;
                    this.RaisePropertyChanged("userEmails");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoveUsersToGroupResult", Namespace="http://dto15.api.echosign")]
    [System.SerializableAttribute()]
    public partial class MoveUsersToGroupResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.MoveUsersToGroupResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.MoveUsersToGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MoveUsersToGroupResultErrorCode", Namespace="http://dto15.api.echosign")]
    public enum MoveUsersToGroupResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_GROUP_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_USER_EMAIL = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_NOT_ACCEPTED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_IN_ACCOUNT = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VaultEventInfo", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class VaultEventInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vaultEventCommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string vaultEventIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vaultEventComment {
            get {
                return this.vaultEventCommentField;
            }
            set {
                if ((object.ReferenceEquals(this.vaultEventCommentField, value) != true)) {
                    this.vaultEventCommentField = value;
                    this.RaisePropertyChanged("vaultEventComment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string vaultEventId {
            get {
                return this.vaultEventIdField;
            }
            set {
                if ((object.ReferenceEquals(this.vaultEventIdField, value) != true)) {
                    this.vaultEventIdField = value;
                    this.RaisePropertyChanged("vaultEventId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotifyDocumentVaultedResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class NotifyDocumentVaultedResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.NotifyDocumentVaultedResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.NotifyDocumentVaultedResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NotifyDocumentVaultedResultErrorCode", Namespace="http://dto17.api.echosign")]
    public enum NotifyDocumentVaultedResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_ACCESS_TOKEN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_VAULT_ID = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_REMOVED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_DELETED = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_NOT_READY_TO_VAULT = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCMENT_VAULTED_ALREADY = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectDocumentOptions", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class RejectDocumentOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comment {
            get {
                return this.commentField;
            }
            set {
                if ((object.ReferenceEquals(this.commentField, value) != true)) {
                    this.commentField = value;
                    this.RaisePropertyChanged("comment");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectDocumentResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class RejectDocumentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.RejectDocumentResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.RejectDocumentResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RejectDocumentResultErrorCode", Namespace="http://dto17.api.echosign")]
    public enum RejectDocumentResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_COMMENT = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_REJECTION_NOT_ALLOWED = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoveDocumentResult", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class RemoveDocumentResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.RemoveDocumentErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.RemoveDocumentErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoveDocumentErrorCode", Namespace="http://dto.api.echosign")]
    public enum RemoveDocumentErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOCUMENT_HAS_BEEN_REMOVED = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DYNAMIC_DOCUMENT_EXPIRATION_NOT_ENABLED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        REMOVE_FAILED = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RenameGroupResult", Namespace="http://dto15.api.echosign")]
    [System.SerializableAttribute()]
    public partial class RenameGroupResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.RenameGroupResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.RenameGroupResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RenameGroupResultErrorCode", Namespace="http://dto15.api.echosign")]
    public enum RenameGroupResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_GROUP_KEY = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_GROUP_NAME = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TERMS_NOT_ACCEPTED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NOT_IN_ACCOUNT = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NO_PERMISSION_TO_EXECUTE_METHOD = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 8,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplaceSignerOptions", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class ReplaceSignerOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string newSignerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string originalSignerEmailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string newSignerEmail {
            get {
                return this.newSignerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.newSignerEmailField, value) != true)) {
                    this.newSignerEmailField = value;
                    this.RaisePropertyChanged("newSignerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string originalSignerEmail {
            get {
                return this.originalSignerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.originalSignerEmailField, value) != true)) {
                    this.originalSignerEmailField = value;
                    this.RaisePropertyChanged("originalSignerEmail");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplaceSignerResult", Namespace="http://dto17.api.echosign")]
    [System.SerializableAttribute()]
    public partial class ReplaceSignerResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.ReplaceSignerResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.ReplaceSignerResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReplaceSignerResultErrorCode", Namespace="http://dto17.api.echosign")]
    public enum ReplaceSignerResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_CREDENTIALS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_DOCUMENT_KEY = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_OPTIONS = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_ORIGINAL_SIGNER = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_NEW_SIGNER = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_MESSAGE = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SIGNER_REPLACEMENT_NOT_ALLOWED = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SearchUserDocumentsOptions", Namespace="http://dto18.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SearchUserDocumentsOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string queryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string query {
            get {
                return this.queryField;
            }
            set {
                if ((object.ReferenceEquals(this.queryField, value) != true)) {
                    this.queryField = value;
                    this.RaisePropertyChanged("query");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendDocumentInteractiveOptions", Namespace="http://dto12.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SendDocumentInteractiveOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool authoringRequestedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool autoLoginUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool noChromeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool authoringRequested {
            get {
                return this.authoringRequestedField;
            }
            set {
                if ((this.authoringRequestedField.Equals(value) != true)) {
                    this.authoringRequestedField = value;
                    this.RaisePropertyChanged("authoringRequested");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool autoLoginUser {
            get {
                return this.autoLoginUserField;
            }
            set {
                if ((this.autoLoginUserField.Equals(value) != true)) {
                    this.autoLoginUserField = value;
                    this.RaisePropertyChanged("autoLoginUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool noChrome {
            get {
                return this.noChromeField;
            }
            set {
                if ((this.noChromeField.Equals(value) != true)) {
                    this.noChromeField = value;
                    this.RaisePropertyChanged("noChrome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendDocumentInteractiveResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SendDocumentInteractiveResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentKey documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string embeddedCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SendDocumentInteractiveResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime expirationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string urlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentKey documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string embeddedCode {
            get {
                return this.embeddedCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.embeddedCodeField, value) != true)) {
                    this.embeddedCodeField = value;
                    this.RaisePropertyChanged("embeddedCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SendDocumentInteractiveResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime expiration {
            get {
                return this.expirationField;
            }
            set {
                if ((this.expirationField.Equals(value) != true)) {
                    this.expirationField = value;
                    this.RaisePropertyChanged("expiration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string url {
            get {
                return this.urlField;
            }
            set {
                if ((object.ReferenceEquals(this.urlField, value) != true)) {
                    this.urlField = value;
                    this.RaisePropertyChanged("url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendDocumentInteractiveResultErrorCode", Namespace="http://dto12.api.echosign")]
    public enum SendDocumentInteractiveResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OK = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_API_KEY = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_ARGUMENTS = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AUTOLOGIN_DENIED = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MISC_ERROR = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EXCEPTION = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendDocumentMegaSignResult", Namespace="http://dto16.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SendDocumentMegaSignResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentKey documentKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private EchoSignLib.EchoSignService.DocumentKey[] documentKeyArrayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.SendDocumentMegaSignResultErrorCode> errorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string errorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool successField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentKey documentKey {
            get {
                return this.documentKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyField, value) != true)) {
                    this.documentKeyField = value;
                    this.RaisePropertyChanged("documentKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public EchoSignLib.EchoSignService.DocumentKey[] documentKeyArray {
            get {
                return this.documentKeyArrayField;
            }
            set {
                if ((object.ReferenceEquals(this.documentKeyArrayField, value) != true)) {
                    this.documentKeyArrayField = value;
                    this.RaisePropertyChanged("documentKeyArray");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.SendDocumentMegaSignResultErrorCode> errorCode {
            get {
                return this.errorCodeField;
            }
            set {
                if ((this.errorCodeField.Equals(value) != true)) {
                    this.errorCodeField = value;
                    this.RaisePropertyChanged("errorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string errorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.errorMessageField, value) != true)) {
                    this.errorMessageField = value;
                    this.RaisePropertyChanged("errorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool success {
            get {
                return this.successField;
            }
            set {
                if ((this.successField.Equals(value) != true)) {
                    this.successField = value;
                    this.RaisePropertyChanged("success");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendDocumentMegaSignResultErrorCode", Namespace="http://dto.api.echosign")]
    public enum SendDocumentMegaSignResultErrorCode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ERROR = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SendReminderResult", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class SendReminderResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string recipientEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.Result> resultField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipientEmail {
            get {
                return this.recipientEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientEmailField, value) != true)) {
                    this.recipientEmailField = value;
                    this.RaisePropertyChanged("recipientEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.Result> result {
            get {
                return this.resultField;
            }
            set {
                if ((this.resultField.Equals(value) != true)) {
                    this.resultField = value;
                    this.RaisePropertyChanged("result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pong", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class Pong : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string messageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string message {
            get {
                return this.messageField;
            }
            set {
                if ((object.ReferenceEquals(this.messageField, value) != true)) {
                    this.messageField = value;
                    this.RaisePropertyChanged("message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserVerificationInfo", Namespace="http://dto.api.echosign")]
    [System.SerializableAttribute()]
    public partial class UserVerificationInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<EchoSignLib.EchoSignService.UserVerificationStatus> userVerificationStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<EchoSignLib.EchoSignService.UserVerificationStatus> userVerificationStatus {
            get {
                return this.userVerificationStatusField;
            }
            set {
                if ((this.userVerificationStatusField.Equals(value) != true)) {
                    this.userVerificationStatusField = value;
                    this.RaisePropertyChanged("userVerificationStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserVerificationStatus", Namespace="http://dto.api.echosign")]
    public enum UserVerificationStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VALID = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DOES_NOT_EXIST = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INVALID_PASSWORD = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UNVERIFIED = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://api.echosign", ConfigurationName="EchoSignService.EchoSignDocumentService18PortType")]
    public interface EchoSignDocumentService18PortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.CancelDocumentResult cancelDocument(string apiKey, string documentKey, string comment, bool notifySigner);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.CancelDocumentResult> cancelDocumentAsync(string apiKey, string documentKey, string comment, bool notifySigner);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.CreateAccountResult createAccount(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userCreationInfo, EchoSignLib.EchoSignService.AccountCreationInfo accountCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.CreateAccountResult> createAccountAsync(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userCreationInfo, EchoSignLib.EchoSignService.AccountCreationInfo accountCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="embeddedWidgetCreationResult")]
        EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult createEmbeddedWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="embeddedWidgetCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult> createEmbeddedWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="formCreationResult")]
        EchoSignLib.EchoSignService.FormCreationResult createForm(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.FormCreationInfo formInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="formCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.FormCreationResult> createFormAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.FormCreationInfo formInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.CreateGroupResult createGroup(string apiKey, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.CreateGroupResult> createGroupAsync(string apiKey, string groupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="libraryDocumentCreationResult")]
        EchoSignLib.EchoSignService.LibraryDocumentCreationResult createLibraryDocument(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.LibraryDocumentCreationInfo libraryDocumentCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="libraryDocumentCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.LibraryDocumentCreationResult> createLibraryDocumentAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.LibraryDocumentCreationInfo libraryDocumentCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="embeddedWidgetCreationResult")]
        EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult createPersonalEmbeddedWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="embeddedWidgetCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult> createPersonalEmbeddedWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="urlWidgetCreationResult")]
        EchoSignLib.EchoSignService.UrlWidgetCreationResult createPersonalUrlWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="urlWidgetCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UrlWidgetCreationResult> createPersonalUrlWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="urlWidgetCreationResult")]
        EchoSignLib.EchoSignService.UrlWidgetCreationResult createUrlWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="urlWidgetCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UrlWidgetCreationResult> createUrlWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="userKey")]
        string createUser(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="userKey")]
        System.Threading.Tasks.Task<string> createUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.DelegateSigningResult delegateSigning(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.DelegateSigningOptions delegateSigningOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DelegateSigningResult> delegateSigningAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.DelegateSigningOptions delegateSigningOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.DeleteGroupResult deleteGroup(string apiKey, string groupKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DeleteGroupResult> deleteGroupAsync(string apiKey, string groupKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DeliverDocumentResult")]
        EchoSignLib.EchoSignService.DeliverDocumentResult deliverDocument(string apiKey, EchoSignLib.EchoSignService.FileInfo fileInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="DeliverDocumentResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DeliverDocumentResult> deliverDocumentAsync(string apiKey, EchoSignLib.EchoSignService.FileInfo fileInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        EchoSignLib.EchoSignService.DisableWidgetResult disableWidget(string apiKey, string documentKey, EchoSignLib.EchoSignService.DisableWidgetOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DisableWidgetResult> disableWidgetAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.DisableWidgetOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        EchoSignLib.EchoSignService.EnableWidgetResult enableWidget(string apiKey, string documentKey, EchoSignLib.EchoSignService.EnableWidgetOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="out")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EnableWidgetResult> enableWidgetAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.EnableWidgetOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.AuditTrailResult getAuditTrail(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.AuditTrailResult> getAuditTrailAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetComposeDocumentUrlResult getComposeDocumentUrl(string accessToken, EchoSignLib.EchoSignService.ComposeDocumentInfo composeDocumentInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetComposeDocumentUrlResult> getComposeDocumentUrlAsync(string accessToken, EchoSignLib.EchoSignService.ComposeDocumentInfo composeDocumentInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdf")]
        byte[] getDocumentByVersion(string apiKey, string versionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdf")]
        System.Threading.Tasks.Task<byte[]> getDocumentByVersionAsync(string apiKey, string versionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentEventsForUserResult getDocumentEventsForUser(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.DocumentEventsForUserOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentEventsForUserResult> getDocumentEventsForUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.DocumentEventsForUserOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentImageUrlsResult getDocumentImageUrls(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentImageUrlsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentImageUrlsResult> getDocumentImageUrlsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentImageUrlsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentInfo")]
        EchoSignLib.EchoSignService.DocumentInfo getDocumentInfo(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentInfo")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentInfo> getDocumentInfoAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentInfoList")]
        EchoSignLib.EchoSignService.DocumentInfoList getDocumentInfosByExternalId(string apiKey, string email, string password, EchoSignLib.EchoSignService.ExternalId externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentInfoList")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentInfoList> getDocumentInfosByExternalIdAsync(string apiKey, string email, string password, EchoSignLib.EchoSignService.ExternalId externalId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentUrlResult")]
        EchoSignLib.EchoSignService.DocumentUrlResult getDocumentUrlByVersion(string apiKey, string versionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentUrlResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentUrlResult> getDocumentUrlByVersionAsync(string apiKey, string versionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentUrlsResult getDocumentUrls(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentUrlsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentUrlsResult> getDocumentUrlsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentUrlsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentsResult getDocuments(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsResult> getDocumentsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentsForUserResult getDocumentsForUser(string apiKey, string userKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> getDocumentsForUserAsync(string apiKey, string userKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetFormDataResult getFormData(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetFormDataResult> getFormDataAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetGroupsInAccountResult getGroupsInAccount(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetGroupsInAccountResult> getGroupsInAccountAsync(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentImageList")]
        EchoSignLib.EchoSignService.DocumentImageList getImagesByVersion(string apiKey, string versionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentImageList")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentImageList> getImagesByVersionAsync(string apiKey, string versionKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdf")]
        byte[] getLatestDocument(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pdf")]
        System.Threading.Tasks.Task<byte[]> getLatestDocumentAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentUrlResult")]
        EchoSignLib.EchoSignService.DocumentUrlResult getLatestDocumentUrl(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentUrlResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentUrlResult> getLatestDocumentUrlAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentImageList")]
        EchoSignLib.EchoSignService.DocumentImageList getLatestImages(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentImageList")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentImageList> getLatestImagesAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult getLibraryDocumentsForUser(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult> getLibraryDocumentsForUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetMegaSignDocumentResult getMegaSignDocument(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetMegaSignDocumentResult> getMegaSignDocumentAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentsForUserResult getMyDocuments(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> getMyDocumentsAsync(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult getMyLibraryDocuments(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult> getMyLibraryDocumentsAsync(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetWidgetsForUserResult getMyWidgets(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetWidgetsForUserResult> getMyWidgetsAsync(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.SigningUrlResult getSigningUrl(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SigningUrlResult> getSigningUrlAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetSupportingDocumentsResult getSupportingDocuments(string apiKey, string documentKey, EchoSignLib.EchoSignService.ArrayOfString supportingDocumentKeys, EchoSignLib.EchoSignService.GetSupportingDocumentsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetSupportingDocumentsResult> getSupportingDocumentsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.ArrayOfString supportingDocumentKeys, EchoSignLib.EchoSignService.GetSupportingDocumentsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDocumentsForUserResult")]
        EchoSignLib.EchoSignService.GetDocumentsForUserResult getUserDocuments(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="getDocumentsForUserResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> getUserDocumentsAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetUserInfoResult getUserInfo(string apiKey, EchoSignLib.EchoSignService.GetUserInfoOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetUserInfoResult> getUserInfoAsync(string apiKey, EchoSignLib.EchoSignService.GetUserInfoOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetUsersInAccountResult getUsersInAccount(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetUsersInAccountResult> getUsersInAccountAsync(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetUsersInGroupResult getUsersInGroup(string apiKey, string groupKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetUsersInGroupResult> getUsersInGroupAsync(string apiKey, string groupKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetWidgetsForUserResult getWidgetsForUser(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetWidgetsForUserResult> getWidgetsForUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.InitiateInteractiveSendDocumentResult initiateInteractiveSendDocument(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, System.Nullable<bool> authoringRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.InitiateInteractiveSendDocumentResult> initiateInteractiveSendDocumentAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, System.Nullable<bool> authoringRequested);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.MoveUsersToGroupResult moveUsersToGroup(string apiKey, string groupKey, EchoSignLib.EchoSignService.UsersToMoveInfo usersToMoveInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.MoveUsersToGroupResult> moveUsersToGroupAsync(string apiKey, string groupKey, EchoSignLib.EchoSignService.UsersToMoveInfo usersToMoveInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.NotifyDocumentVaultedResult notifyDocumentVaulted(string accessToken, string documentKey, EchoSignLib.EchoSignService.VaultEventInfo vaultEventInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.NotifyDocumentVaultedResult> notifyDocumentVaultedAsync(string accessToken, string documentKey, EchoSignLib.EchoSignService.VaultEventInfo vaultEventInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="embeddedWidgetCreationResult")]
        EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult personalizeEmbeddedWidget(string apiKey, string widgetJavascript, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="embeddedWidgetCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult> personalizeEmbeddedWidgetAsync(string apiKey, string widgetJavascript, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="urlWidgetCreationResult")]
        EchoSignLib.EchoSignService.UrlWidgetCreationResult personalizeUrlWidget(string apiKey, string widgetUrl, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="urlWidgetCreationResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UrlWidgetCreationResult> personalizeUrlWidgetAsync(string apiKey, string widgetUrl, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.RejectDocumentResult rejectDocument(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.RejectDocumentOptions rejectDocumentOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.RejectDocumentResult> rejectDocumentAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.RejectDocumentOptions rejectDocumentOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.RemoveDocumentResult removeDocument(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.RemoveDocumentResult> removeDocumentAsync(string apiKey, string documentKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.RenameGroupResult renameGroup(string apiKey, string groupKey, string newGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.RenameGroupResult> renameGroupAsync(string apiKey, string groupKey, string newGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.ReplaceSignerResult replaceSigner(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.ReplaceSignerOptions replaceSignerOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.ReplaceSignerResult> replaceSignerAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.ReplaceSignerOptions replaceSignerOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.GetDocumentsForUserResult searchUserDocuments(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.SearchUserDocumentsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> searchUserDocumentsAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.SearchUserDocumentsOptions options);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentKeys")]
        EchoSignLib.EchoSignService.DocumentKey[] sendDocument(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="documentKeys")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentKey[]> sendDocumentAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        EchoSignLib.EchoSignService.SendDocumentInteractiveResult sendDocumentInteractive(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, EchoSignLib.EchoSignService.SendDocumentInteractiveOptions sendDocumentInteractiveOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SendDocumentInteractiveResult> sendDocumentInteractiveAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, EchoSignLib.EchoSignService.SendDocumentInteractiveOptions sendDocumentInteractiveOptions);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendMegaSignDocumentResult")]
        EchoSignLib.EchoSignService.SendDocumentMegaSignResult sendDocumentMegaSign(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendMegaSignDocumentResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SendDocumentMegaSignResult> sendDocumentMegaSignAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendreminderResult")]
        EchoSignLib.EchoSignService.SendReminderResult sendReminder(string apiKey, string documentKey, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="sendreminderResult")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SendReminderResult> sendReminderAsync(string apiKey, string documentKey, string comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outFile")]
        byte[] testEchoFile(string apiKey, byte[] file);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="outFile")]
        System.Threading.Tasks.Task<byte[]> testEchoFileAsync(string apiKey, byte[] file);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pong")]
        EchoSignLib.EchoSignService.Pong testPing(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pong")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.Pong> testPingAsync(string apiKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="userVerificationInfo")]
        EchoSignLib.EchoSignService.UserVerificationInfo verifyUser(string apiKey, string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="userVerificationInfo")]
        System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UserVerificationInfo> verifyUserAsync(string apiKey, string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EchoSignDocumentService18PortTypeChannel : EchoSignLib.EchoSignService.EchoSignDocumentService18PortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EchoSignDocumentService18PortTypeClient : System.ServiceModel.ClientBase<EchoSignLib.EchoSignService.EchoSignDocumentService18PortType>, EchoSignLib.EchoSignService.EchoSignDocumentService18PortType {
        
        public EchoSignDocumentService18PortTypeClient() {
        }
        
        public EchoSignDocumentService18PortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EchoSignDocumentService18PortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EchoSignDocumentService18PortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EchoSignDocumentService18PortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EchoSignLib.EchoSignService.CancelDocumentResult cancelDocument(string apiKey, string documentKey, string comment, bool notifySigner) {
            return base.Channel.cancelDocument(apiKey, documentKey, comment, notifySigner);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.CancelDocumentResult> cancelDocumentAsync(string apiKey, string documentKey, string comment, bool notifySigner) {
            return base.Channel.cancelDocumentAsync(apiKey, documentKey, comment, notifySigner);
        }
        
        public EchoSignLib.EchoSignService.CreateAccountResult createAccount(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userCreationInfo, EchoSignLib.EchoSignService.AccountCreationInfo accountCreationInfo) {
            return base.Channel.createAccount(apiKey, userCreationInfo, accountCreationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.CreateAccountResult> createAccountAsync(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userCreationInfo, EchoSignLib.EchoSignService.AccountCreationInfo accountCreationInfo) {
            return base.Channel.createAccountAsync(apiKey, userCreationInfo, accountCreationInfo);
        }
        
        public EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult createEmbeddedWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo) {
            return base.Channel.createEmbeddedWidget(apiKey, senderInfo, widgetInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult> createEmbeddedWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo) {
            return base.Channel.createEmbeddedWidgetAsync(apiKey, senderInfo, widgetInfo);
        }
        
        public EchoSignLib.EchoSignService.FormCreationResult createForm(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.FormCreationInfo formInfo) {
            return base.Channel.createForm(apiKey, senderInfo, formInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.FormCreationResult> createFormAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.FormCreationInfo formInfo) {
            return base.Channel.createFormAsync(apiKey, senderInfo, formInfo);
        }
        
        public EchoSignLib.EchoSignService.CreateGroupResult createGroup(string apiKey, string groupName) {
            return base.Channel.createGroup(apiKey, groupName);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.CreateGroupResult> createGroupAsync(string apiKey, string groupName) {
            return base.Channel.createGroupAsync(apiKey, groupName);
        }
        
        public EchoSignLib.EchoSignService.LibraryDocumentCreationResult createLibraryDocument(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.LibraryDocumentCreationInfo libraryDocumentCreationInfo) {
            return base.Channel.createLibraryDocument(apiKey, senderInfo, libraryDocumentCreationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.LibraryDocumentCreationResult> createLibraryDocumentAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.LibraryDocumentCreationInfo libraryDocumentCreationInfo) {
            return base.Channel.createLibraryDocumentAsync(apiKey, senderInfo, libraryDocumentCreationInfo);
        }
        
        public EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult createPersonalEmbeddedWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.createPersonalEmbeddedWidget(apiKey, senderInfo, widgetInfo, personalizationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult> createPersonalEmbeddedWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.createPersonalEmbeddedWidgetAsync(apiKey, senderInfo, widgetInfo, personalizationInfo);
        }
        
        public EchoSignLib.EchoSignService.UrlWidgetCreationResult createPersonalUrlWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.createPersonalUrlWidget(apiKey, senderInfo, widgetInfo, personalizationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UrlWidgetCreationResult> createPersonalUrlWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.createPersonalUrlWidgetAsync(apiKey, senderInfo, widgetInfo, personalizationInfo);
        }
        
        public EchoSignLib.EchoSignService.UrlWidgetCreationResult createUrlWidget(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo) {
            return base.Channel.createUrlWidget(apiKey, senderInfo, widgetInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UrlWidgetCreationResult> createUrlWidgetAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.WidgetCreationInfo widgetInfo) {
            return base.Channel.createUrlWidgetAsync(apiKey, senderInfo, widgetInfo);
        }
        
        public string createUser(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userInfo) {
            return base.Channel.createUser(apiKey, userInfo);
        }
        
        public System.Threading.Tasks.Task<string> createUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCreationInfo userInfo) {
            return base.Channel.createUserAsync(apiKey, userInfo);
        }
        
        public EchoSignLib.EchoSignService.DelegateSigningResult delegateSigning(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.DelegateSigningOptions delegateSigningOptions) {
            return base.Channel.delegateSigning(apiKey, userCredentials, documentKey, delegateSigningOptions);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DelegateSigningResult> delegateSigningAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.DelegateSigningOptions delegateSigningOptions) {
            return base.Channel.delegateSigningAsync(apiKey, userCredentials, documentKey, delegateSigningOptions);
        }
        
        public EchoSignLib.EchoSignService.DeleteGroupResult deleteGroup(string apiKey, string groupKey) {
            return base.Channel.deleteGroup(apiKey, groupKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DeleteGroupResult> deleteGroupAsync(string apiKey, string groupKey) {
            return base.Channel.deleteGroupAsync(apiKey, groupKey);
        }
        
        public EchoSignLib.EchoSignService.DeliverDocumentResult deliverDocument(string apiKey, EchoSignLib.EchoSignService.FileInfo fileInfo) {
            return base.Channel.deliverDocument(apiKey, fileInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DeliverDocumentResult> deliverDocumentAsync(string apiKey, EchoSignLib.EchoSignService.FileInfo fileInfo) {
            return base.Channel.deliverDocumentAsync(apiKey, fileInfo);
        }
        
        public EchoSignLib.EchoSignService.DisableWidgetResult disableWidget(string apiKey, string documentKey, EchoSignLib.EchoSignService.DisableWidgetOptions options) {
            return base.Channel.disableWidget(apiKey, documentKey, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DisableWidgetResult> disableWidgetAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.DisableWidgetOptions options) {
            return base.Channel.disableWidgetAsync(apiKey, documentKey, options);
        }
        
        public EchoSignLib.EchoSignService.EnableWidgetResult enableWidget(string apiKey, string documentKey, EchoSignLib.EchoSignService.EnableWidgetOptions options) {
            return base.Channel.enableWidget(apiKey, documentKey, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EnableWidgetResult> enableWidgetAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.EnableWidgetOptions options) {
            return base.Channel.enableWidgetAsync(apiKey, documentKey, options);
        }
        
        public EchoSignLib.EchoSignService.AuditTrailResult getAuditTrail(string apiKey, string documentKey) {
            return base.Channel.getAuditTrail(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.AuditTrailResult> getAuditTrailAsync(string apiKey, string documentKey) {
            return base.Channel.getAuditTrailAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.GetComposeDocumentUrlResult getComposeDocumentUrl(string accessToken, EchoSignLib.EchoSignService.ComposeDocumentInfo composeDocumentInfo) {
            return base.Channel.getComposeDocumentUrl(accessToken, composeDocumentInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetComposeDocumentUrlResult> getComposeDocumentUrlAsync(string accessToken, EchoSignLib.EchoSignService.ComposeDocumentInfo composeDocumentInfo) {
            return base.Channel.getComposeDocumentUrlAsync(accessToken, composeDocumentInfo);
        }
        
        public byte[] getDocumentByVersion(string apiKey, string versionKey) {
            return base.Channel.getDocumentByVersion(apiKey, versionKey);
        }
        
        public System.Threading.Tasks.Task<byte[]> getDocumentByVersionAsync(string apiKey, string versionKey) {
            return base.Channel.getDocumentByVersionAsync(apiKey, versionKey);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentEventsForUserResult getDocumentEventsForUser(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.DocumentEventsForUserOptions options) {
            return base.Channel.getDocumentEventsForUser(apiKey, userCredentials, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentEventsForUserResult> getDocumentEventsForUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.DocumentEventsForUserOptions options) {
            return base.Channel.getDocumentEventsForUserAsync(apiKey, userCredentials, options);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentImageUrlsResult getDocumentImageUrls(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentImageUrlsOptions options) {
            return base.Channel.getDocumentImageUrls(apiKey, documentKey, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentImageUrlsResult> getDocumentImageUrlsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentImageUrlsOptions options) {
            return base.Channel.getDocumentImageUrlsAsync(apiKey, documentKey, options);
        }
        
        public EchoSignLib.EchoSignService.DocumentInfo getDocumentInfo(string apiKey, string documentKey) {
            return base.Channel.getDocumentInfo(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentInfo> getDocumentInfoAsync(string apiKey, string documentKey) {
            return base.Channel.getDocumentInfoAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.DocumentInfoList getDocumentInfosByExternalId(string apiKey, string email, string password, EchoSignLib.EchoSignService.ExternalId externalId) {
            return base.Channel.getDocumentInfosByExternalId(apiKey, email, password, externalId);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentInfoList> getDocumentInfosByExternalIdAsync(string apiKey, string email, string password, EchoSignLib.EchoSignService.ExternalId externalId) {
            return base.Channel.getDocumentInfosByExternalIdAsync(apiKey, email, password, externalId);
        }
        
        public EchoSignLib.EchoSignService.DocumentUrlResult getDocumentUrlByVersion(string apiKey, string versionKey) {
            return base.Channel.getDocumentUrlByVersion(apiKey, versionKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentUrlResult> getDocumentUrlByVersionAsync(string apiKey, string versionKey) {
            return base.Channel.getDocumentUrlByVersionAsync(apiKey, versionKey);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentUrlsResult getDocumentUrls(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentUrlsOptions options) {
            return base.Channel.getDocumentUrls(apiKey, documentKey, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentUrlsResult> getDocumentUrlsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentUrlsOptions options) {
            return base.Channel.getDocumentUrlsAsync(apiKey, documentKey, options);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentsResult getDocuments(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentsOptions options) {
            return base.Channel.getDocuments(apiKey, documentKey, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsResult> getDocumentsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.GetDocumentsOptions options) {
            return base.Channel.getDocumentsAsync(apiKey, documentKey, options);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentsForUserResult getDocumentsForUser(string apiKey, string userKey) {
            return base.Channel.getDocumentsForUser(apiKey, userKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> getDocumentsForUserAsync(string apiKey, string userKey) {
            return base.Channel.getDocumentsForUserAsync(apiKey, userKey);
        }
        
        public EchoSignLib.EchoSignService.GetFormDataResult getFormData(string apiKey, string documentKey) {
            return base.Channel.getFormData(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetFormDataResult> getFormDataAsync(string apiKey, string documentKey) {
            return base.Channel.getFormDataAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.GetGroupsInAccountResult getGroupsInAccount(string apiKey) {
            return base.Channel.getGroupsInAccount(apiKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetGroupsInAccountResult> getGroupsInAccountAsync(string apiKey) {
            return base.Channel.getGroupsInAccountAsync(apiKey);
        }
        
        public EchoSignLib.EchoSignService.DocumentImageList getImagesByVersion(string apiKey, string versionKey) {
            return base.Channel.getImagesByVersion(apiKey, versionKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentImageList> getImagesByVersionAsync(string apiKey, string versionKey) {
            return base.Channel.getImagesByVersionAsync(apiKey, versionKey);
        }
        
        public byte[] getLatestDocument(string apiKey, string documentKey) {
            return base.Channel.getLatestDocument(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<byte[]> getLatestDocumentAsync(string apiKey, string documentKey) {
            return base.Channel.getLatestDocumentAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.DocumentUrlResult getLatestDocumentUrl(string apiKey, string documentKey) {
            return base.Channel.getLatestDocumentUrl(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentUrlResult> getLatestDocumentUrlAsync(string apiKey, string documentKey) {
            return base.Channel.getLatestDocumentUrlAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.DocumentImageList getLatestImages(string apiKey, string documentKey) {
            return base.Channel.getLatestImages(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentImageList> getLatestImagesAsync(string apiKey, string documentKey) {
            return base.Channel.getLatestImagesAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult getLibraryDocumentsForUser(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials) {
            return base.Channel.getLibraryDocumentsForUser(apiKey, userCredentials);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult> getLibraryDocumentsForUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials) {
            return base.Channel.getLibraryDocumentsForUserAsync(apiKey, userCredentials);
        }
        
        public EchoSignLib.EchoSignService.GetMegaSignDocumentResult getMegaSignDocument(string apiKey, string documentKey) {
            return base.Channel.getMegaSignDocument(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetMegaSignDocumentResult> getMegaSignDocumentAsync(string apiKey, string documentKey) {
            return base.Channel.getMegaSignDocumentAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentsForUserResult getMyDocuments(string apiKey) {
            return base.Channel.getMyDocuments(apiKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> getMyDocumentsAsync(string apiKey) {
            return base.Channel.getMyDocumentsAsync(apiKey);
        }
        
        public EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult getMyLibraryDocuments(string apiKey) {
            return base.Channel.getMyLibraryDocuments(apiKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetLibraryDocumentsForUserResult> getMyLibraryDocumentsAsync(string apiKey) {
            return base.Channel.getMyLibraryDocumentsAsync(apiKey);
        }
        
        public EchoSignLib.EchoSignService.GetWidgetsForUserResult getMyWidgets(string apiKey) {
            return base.Channel.getMyWidgets(apiKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetWidgetsForUserResult> getMyWidgetsAsync(string apiKey) {
            return base.Channel.getMyWidgetsAsync(apiKey);
        }
        
        public EchoSignLib.EchoSignService.SigningUrlResult getSigningUrl(string apiKey, string documentKey) {
            return base.Channel.getSigningUrl(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SigningUrlResult> getSigningUrlAsync(string apiKey, string documentKey) {
            return base.Channel.getSigningUrlAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.GetSupportingDocumentsResult getSupportingDocuments(string apiKey, string documentKey, EchoSignLib.EchoSignService.ArrayOfString supportingDocumentKeys, EchoSignLib.EchoSignService.GetSupportingDocumentsOptions options) {
            return base.Channel.getSupportingDocuments(apiKey, documentKey, supportingDocumentKeys, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetSupportingDocumentsResult> getSupportingDocumentsAsync(string apiKey, string documentKey, EchoSignLib.EchoSignService.ArrayOfString supportingDocumentKeys, EchoSignLib.EchoSignService.GetSupportingDocumentsOptions options) {
            return base.Channel.getSupportingDocumentsAsync(apiKey, documentKey, supportingDocumentKeys, options);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentsForUserResult getUserDocuments(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials) {
            return base.Channel.getUserDocuments(apiKey, userCredentials);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> getUserDocumentsAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials) {
            return base.Channel.getUserDocumentsAsync(apiKey, userCredentials);
        }
        
        public EchoSignLib.EchoSignService.GetUserInfoResult getUserInfo(string apiKey, EchoSignLib.EchoSignService.GetUserInfoOptions options) {
            return base.Channel.getUserInfo(apiKey, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetUserInfoResult> getUserInfoAsync(string apiKey, EchoSignLib.EchoSignService.GetUserInfoOptions options) {
            return base.Channel.getUserInfoAsync(apiKey, options);
        }
        
        public EchoSignLib.EchoSignService.GetUsersInAccountResult getUsersInAccount(string apiKey) {
            return base.Channel.getUsersInAccount(apiKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetUsersInAccountResult> getUsersInAccountAsync(string apiKey) {
            return base.Channel.getUsersInAccountAsync(apiKey);
        }
        
        public EchoSignLib.EchoSignService.GetUsersInGroupResult getUsersInGroup(string apiKey, string groupKey) {
            return base.Channel.getUsersInGroup(apiKey, groupKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetUsersInGroupResult> getUsersInGroupAsync(string apiKey, string groupKey) {
            return base.Channel.getUsersInGroupAsync(apiKey, groupKey);
        }
        
        public EchoSignLib.EchoSignService.GetWidgetsForUserResult getWidgetsForUser(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials) {
            return base.Channel.getWidgetsForUser(apiKey, userCredentials);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetWidgetsForUserResult> getWidgetsForUserAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials) {
            return base.Channel.getWidgetsForUserAsync(apiKey, userCredentials);
        }
        
        public EchoSignLib.EchoSignService.InitiateInteractiveSendDocumentResult initiateInteractiveSendDocument(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, System.Nullable<bool> authoringRequested) {
            return base.Channel.initiateInteractiveSendDocument(apiKey, senderInfo, documentCreationInfo, forceSendConfirmation, authoringRequested);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.InitiateInteractiveSendDocumentResult> initiateInteractiveSendDocumentAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, bool forceSendConfirmation, System.Nullable<bool> authoringRequested) {
            return base.Channel.initiateInteractiveSendDocumentAsync(apiKey, senderInfo, documentCreationInfo, forceSendConfirmation, authoringRequested);
        }
        
        public EchoSignLib.EchoSignService.MoveUsersToGroupResult moveUsersToGroup(string apiKey, string groupKey, EchoSignLib.EchoSignService.UsersToMoveInfo usersToMoveInfo) {
            return base.Channel.moveUsersToGroup(apiKey, groupKey, usersToMoveInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.MoveUsersToGroupResult> moveUsersToGroupAsync(string apiKey, string groupKey, EchoSignLib.EchoSignService.UsersToMoveInfo usersToMoveInfo) {
            return base.Channel.moveUsersToGroupAsync(apiKey, groupKey, usersToMoveInfo);
        }
        
        public EchoSignLib.EchoSignService.NotifyDocumentVaultedResult notifyDocumentVaulted(string accessToken, string documentKey, EchoSignLib.EchoSignService.VaultEventInfo vaultEventInfo) {
            return base.Channel.notifyDocumentVaulted(accessToken, documentKey, vaultEventInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.NotifyDocumentVaultedResult> notifyDocumentVaultedAsync(string accessToken, string documentKey, EchoSignLib.EchoSignService.VaultEventInfo vaultEventInfo) {
            return base.Channel.notifyDocumentVaultedAsync(accessToken, documentKey, vaultEventInfo);
        }
        
        public EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult personalizeEmbeddedWidget(string apiKey, string widgetJavascript, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.personalizeEmbeddedWidget(apiKey, widgetJavascript, personalizationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.EmbeddedWidgetCreationResult> personalizeEmbeddedWidgetAsync(string apiKey, string widgetJavascript, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.personalizeEmbeddedWidgetAsync(apiKey, widgetJavascript, personalizationInfo);
        }
        
        public EchoSignLib.EchoSignService.UrlWidgetCreationResult personalizeUrlWidget(string apiKey, string widgetUrl, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.personalizeUrlWidget(apiKey, widgetUrl, personalizationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UrlWidgetCreationResult> personalizeUrlWidgetAsync(string apiKey, string widgetUrl, EchoSignLib.EchoSignService.WidgetPersonalizationInfo personalizationInfo) {
            return base.Channel.personalizeUrlWidgetAsync(apiKey, widgetUrl, personalizationInfo);
        }
        
        public EchoSignLib.EchoSignService.RejectDocumentResult rejectDocument(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.RejectDocumentOptions rejectDocumentOptions) {
            return base.Channel.rejectDocument(apiKey, userCredentials, documentKey, rejectDocumentOptions);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.RejectDocumentResult> rejectDocumentAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.RejectDocumentOptions rejectDocumentOptions) {
            return base.Channel.rejectDocumentAsync(apiKey, userCredentials, documentKey, rejectDocumentOptions);
        }
        
        public EchoSignLib.EchoSignService.RemoveDocumentResult removeDocument(string apiKey, string documentKey) {
            return base.Channel.removeDocument(apiKey, documentKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.RemoveDocumentResult> removeDocumentAsync(string apiKey, string documentKey) {
            return base.Channel.removeDocumentAsync(apiKey, documentKey);
        }
        
        public EchoSignLib.EchoSignService.RenameGroupResult renameGroup(string apiKey, string groupKey, string newGroupName) {
            return base.Channel.renameGroup(apiKey, groupKey, newGroupName);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.RenameGroupResult> renameGroupAsync(string apiKey, string groupKey, string newGroupName) {
            return base.Channel.renameGroupAsync(apiKey, groupKey, newGroupName);
        }
        
        public EchoSignLib.EchoSignService.ReplaceSignerResult replaceSigner(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.ReplaceSignerOptions replaceSignerOptions) {
            return base.Channel.replaceSigner(apiKey, userCredentials, documentKey, replaceSignerOptions);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.ReplaceSignerResult> replaceSignerAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, string documentKey, EchoSignLib.EchoSignService.ReplaceSignerOptions replaceSignerOptions) {
            return base.Channel.replaceSignerAsync(apiKey, userCredentials, documentKey, replaceSignerOptions);
        }
        
        public EchoSignLib.EchoSignService.GetDocumentsForUserResult searchUserDocuments(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.SearchUserDocumentsOptions options) {
            return base.Channel.searchUserDocuments(apiKey, userCredentials, options);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.GetDocumentsForUserResult> searchUserDocumentsAsync(string apiKey, EchoSignLib.EchoSignService.UserCredentials userCredentials, EchoSignLib.EchoSignService.SearchUserDocumentsOptions options) {
            return base.Channel.searchUserDocumentsAsync(apiKey, userCredentials, options);
        }
        
        public EchoSignLib.EchoSignService.DocumentKey[] sendDocument(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo) {
            return base.Channel.sendDocument(apiKey, senderInfo, documentCreationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.DocumentKey[]> sendDocumentAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo) {
            return base.Channel.sendDocumentAsync(apiKey, senderInfo, documentCreationInfo);
        }
        
        public EchoSignLib.EchoSignService.SendDocumentInteractiveResult sendDocumentInteractive(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, EchoSignLib.EchoSignService.SendDocumentInteractiveOptions sendDocumentInteractiveOptions) {
            return base.Channel.sendDocumentInteractive(apiKey, senderInfo, documentCreationInfo, sendDocumentInteractiveOptions);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SendDocumentInteractiveResult> sendDocumentInteractiveAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo, EchoSignLib.EchoSignService.SendDocumentInteractiveOptions sendDocumentInteractiveOptions) {
            return base.Channel.sendDocumentInteractiveAsync(apiKey, senderInfo, documentCreationInfo, sendDocumentInteractiveOptions);
        }
        
        public EchoSignLib.EchoSignService.SendDocumentMegaSignResult sendDocumentMegaSign(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo) {
            return base.Channel.sendDocumentMegaSign(apiKey, senderInfo, documentCreationInfo);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SendDocumentMegaSignResult> sendDocumentMegaSignAsync(string apiKey, EchoSignLib.EchoSignService.SenderInfo senderInfo, EchoSignLib.EchoSignService.DocumentCreationInfo documentCreationInfo) {
            return base.Channel.sendDocumentMegaSignAsync(apiKey, senderInfo, documentCreationInfo);
        }
        
        public EchoSignLib.EchoSignService.SendReminderResult sendReminder(string apiKey, string documentKey, string comment) {
            return base.Channel.sendReminder(apiKey, documentKey, comment);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.SendReminderResult> sendReminderAsync(string apiKey, string documentKey, string comment) {
            return base.Channel.sendReminderAsync(apiKey, documentKey, comment);
        }
        
        public byte[] testEchoFile(string apiKey, byte[] file) {
            return base.Channel.testEchoFile(apiKey, file);
        }
        
        public System.Threading.Tasks.Task<byte[]> testEchoFileAsync(string apiKey, byte[] file) {
            return base.Channel.testEchoFileAsync(apiKey, file);
        }
        
        public EchoSignLib.EchoSignService.Pong testPing(string apiKey) {
            return base.Channel.testPing(apiKey);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.Pong> testPingAsync(string apiKey) {
            return base.Channel.testPingAsync(apiKey);
        }
        
        public EchoSignLib.EchoSignService.UserVerificationInfo verifyUser(string apiKey, string email, string password) {
            return base.Channel.verifyUser(apiKey, email, password);
        }
        
        public System.Threading.Tasks.Task<EchoSignLib.EchoSignService.UserVerificationInfo> verifyUserAsync(string apiKey, string email, string password) {
            return base.Channel.verifyUserAsync(apiKey, email, password);
        }
    }
}
