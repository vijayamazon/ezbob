Данная утилита предназначена для автоматической загрузки сущностей в БД.

Принцип работы

1)Утилита считывает настройки для подключения к серверным частям приложений Patron и Maven из конфигурационного файла.
2)Утилита считывает список сущностей из Excel файла специального формата.
3)Утилита загружает в БД набор сущностей, указанных в Excel файле.
4)Порядок загрузки отображается на экране. Лог загрузки записывается в лог файл расположенный в директории с утилитой.

Настройка
 Настраивается утилита с помощью конфигурационного файла app.config
 Кодировка файла "Publisher.exe.config" должна соответствовать указаной в Publisher.exe.config (<?xml version="1.0" encoding="utf-8"?>), если небходимо задавать пути кирилическими символами.

1) Указывается логин и пароль пользователя, от которого будут запускаться сервисы приложений Master и Maven при работе Publisher. Если включена ЭЦП, то для этого пользователя должен быть сертификат на компьютере, с которого запускается Publisher.

            <setting name="Login" serializeAs="String">
                <value>User</value>
            </setting>
            <setting name="Password" serializeAs="String">
                <value>123456789</value>
            </setting>

 В данном случае будет выбран пользователь User с паролем 123456789. Необходимо убедиться в том, что такой пользователь есть в БД и у него есть роли Master и Maven.

2)Необходимо указать url-ы для сервисов Master и Maven и для сервиса Авторизации .

            <setting name="UrlPatronBase" serializeAs="String">
                <value>http://rd1:8005/PatronServer</value>
            </setting>

            <setting name="UrlMavenBase" serializeAs="String">
                <value>http://rd1:8005/MavenServer</value>
            </setting>

            <setting name="UrlAuthServiceBase" serializeAs="String">
                <value>http://rd1:8005/AuthenticationServer/</value>
            </setting>


 В данном случае для сервисов приложения Master указан url http://rd1:8005/PatronServer, а для сервисов приложения Maven - http://rd1:8005/MavenServer, для сервисов Авторизации http://rd1:8005/AuthenticationServer

3) Указывается Имя файла конфигурации. Файл может находиться в том же каталоге где и файл Publisher.exe, или в другом каталоге, для чего необходимо будет указать полный путь к Файлу.

            <setting name="xlsFileName" serializeAs="String">
                <value>TestData.xls</value>
            </setting>

 В данном случае указан файл TestData.xls, который расположен в том же каталоге, с которого запускается утилита.

4)Указывается способ выбора приложения приложения, которое обрабатывает узел. 
Если установлено AppId - выбираем по полю AppId, если установлено AppName - выбираем по полю ApplicationName (Данные поля присутствуют на вкладке NodeList в файле конфигурации)

            <setting name="SecurityApplicationIdentification" serializeAs="String">
                <value>AppId</value>
            </setting>

 В данном случае привязка к приложению, обрабатывающему узел, выбирается по полю AppId.

5) Указывается состояние оператора RollBack. Если установлено True - то, при возникновении ошибки, производится удаление загруженных сущностей. Если установлено False - то, при возникновении ошибки, сущности удаляться не будут.

            <setting name="Rollback" serializeAs="String">
                <value>True</value>
            </setting>

 В данном случае указано True. Значит при возникновении ошибки, во время работы утилиты будет осуществлен откат. Производиться физическое удаление сущностей, которые были загружены до возникновения ошибки.

6) Указываем способ загрузки стартегия. Если установлено StrategyAsyncUpload в False то используется синхронный вариант загрузки стартегий. В противном случае все стратегии загружаются асинхронно.

            <setting name="StrategyAsyncUpload" serializeAs="String">
                <value>False</value>
            </setting>

7) Опция BackupPath устанавливает пути для создания копии сущностей из БД. (Актуально только если Publisher.exe запущен с ключом --backup). Если Publisher запущен с ключом --backup, то вторым параметром мы можем задать путь для создания копии и именно этот тут путь будет приоритетным в выборе путей:
	
	Publisher.exe --backup "c:\backup_test"
Есди путь не задан среди аргументов командной строки, то Publisher пытается прочитать путь из конфигурационного файла из опции BackupPath. И соответственно делает копию сущностей по этому пути. Если эта опция пуста, то Publisher будет делать копию сущностей в том же каталоге где и находиться Publihser.exe (В корневом каталоге относительно Publisher.exe)

8)Опция CommonBackupFolder - общая папка куда будут складываться все копии сущностей из БД

пример формирования пути: <BackupPath>\<CommonBackupFolder>\<Имя сущности>

Пример задания опци:
            <setting name="BackupPath" serializeAs="String">
                <value>c:\backup_test\</value>
            </setting>

            <setting name="CommonBackupFolder" serializeAs="String">
                <value>Install</value>
            </setting>

 c:\
 |-backup_test
 |	|-Install
 |
 |- TestData.xls

 В данном случае папка Install является общей.
	
9) Опция BackupFileName задает имя выходного файла данных Excel в формате Excel2003.

            <setting name="BackupFileName" serializeAs="String">
                <value>TestData.xls</value>
            </setting>

Настройка списка загружаемых сущностей

Настройка списка загружаемых сущностей осуществляется в Excel файле. В файле есть следующие закладки

1) NodeList - укзываются загружаемые узлы
	- Id – уникальный числовой идентификатор
    	- Path - путь к каталогу, в котором расположен файл узла
	- Filename - имя файла узла. Указывается имя файла c расширением, например Node1.ndx
	- AppId - ID Приложения, обрабатывающего узел (1-Inspector Server (Human Nodes) ,8-SE (AutoNodes))
	- ApplicationName - Имя Приложения, обрабатывающего узел (1-Inspector Server (Human Nodes) ,8-SE (AutoNodes))
	- TimeSec - Время выполнения узла в секундах. Если не указывать, то выполнение узла безлимитное
	- IsHardReaction - устанавливается действие, выполняемое по таймауту. 1- запись в лог об истечении времени 
		           перевод заявки по ноге TimeOut, 0 - запись в лог об истечении времени, заявка остается на этом же узле
	- TerminationDate - устанавливается дата остановки сущности. Используется только для загрузки версионных сущностей. При начальной накатке данное поле можно оставить пустым (если нет версионных сущностей)

2) Strategies - указываются загружаемые стратегии
	- Id – уникальный числовой идентификатор
	- Path - путь каталогу, в котором расположен файл стратегии
	- Filename - имя файла стратегии. Указывается с расширением файла, например Strategy1.strat
	- Strategyname - Имя стратегии
	- PublishName - Имя под которым будет опубликована стратегия
	- TerminationDate - устанавливается дата остановки сущности. Используется только для загрузки версионных сущностей. При начальной накатке данное поле можно оставить пустым (если нет версионных сущностей)

3) DataSourceList - указываются имена Источников данных для публикации
	- Id – уникальный числовой идентификатор
	- Path - путь к файлу каталога, в котором расположен файл источника данных
	- Filename - имя файла с расширением, например DataSource1.dsweb
	- Name - имя Источника данных
	- Type - тип источника данных (ExternalDatabase,WebMethod,Warehouse,StoredProcedure,DataDestination,HttpWebMethod)
	- TerminationDate - устанавливается дата остановки сущности. Используется только для загрузки версионных сущностей. При начальной накатке данное поле можно оставить пустым (если нет версионных сущностей)

4) Templates - указываются загружаемые шаблоны документов
	- Id – уникальный числовой идентификатор
	- Path - путь к каталогу, в котором расположен файл шаблона документа
	- Filename - имя файла шаблона документа. Указывается с расширением, например Template1.doc
	- NodeName - Имена узлов, на которых будут отображаться отчеты. Указываются через точку с запятой (;).
	- Type - способ отображения отчета на рабочем месте (0-формат документа, 1- read only, в виде pdf). Указываются через пробел.
	- TerminationDate - устанавливается дата остановки сущности. Используется только для загрузки версионных сущностей. При начальной накатке данное поле можно оставить пустым (если нет версионных сущностей)

5) CreditProducts - указываются загружаемые кредитные продукты
	- Id – уникальный числовой идентификатор
	- Path - путь к каталогу, в котором расположен файл кредитного продукта
	- Filename - имя файла кредитного продукта. Указывается с расширением, например CredProd.prod


Запуск
 Запуск выполняется после того как осуществлена настройка конфигурационного файла и файла со списком публикуемых элементов.
Публикация сущностей осуществляется автоматичекси при запуске бинарного файла Publisher.exe
 Во время выполнения загрузки отображается информация о ходе загрузки. При возникновении ошибки, текст ошибки выводиться красным цветом, сразу же после записи о сущности, при загрузке которой возникла ошибка. после выполнения загрузки окно не закрывается и доступно для просмотра логов работы утилиты. Для закрытия окна пользователь должен нажать любую клавишу.
 При работе утилиты, создается файл логов Publisher.log в директории с утилитой. 

Удаление сущностей
 Утилита Publisher также может быть использована для автоматического удаления всех сущностей. Для этого необходимо запустить данную утилиту из командной строки с ключем -–delete. (Publisher.exe --delete)

Создании копии сущностей на жестком диске.
 Для выгрузки сущностей из БД необходимо запустить Publisher.exe с ключом --backup. Во время выполнения выгрузки отображается информации о ходе выгрузки. При возникновении ошибки, текст ошибки выводиться красным цветом, сразу же после записи о сущности, при загрузке которой возникла ошибка. после выполнения загрузки окно не закрывается и доступно для просмотра логов работы утилиты. Для закрытия окна пользователь должен нажать любую клавишу.
При работе утилиты, создается файл логов Publisher.log в директории с утилитой. 
Все данные сохраняются по путям <BackupPath>\<CommonBackupFolder>\<Имя сущности>\<имя файла.расширение>. 
Версионные сущности формируются по следующим путям: <BackupPath>\<CommonBackupFolder>\<Имя сущности>\<Termination Date (dd.MM.yyyy (hh.mm.ss))>\<имя файла.расширение>. 
После того как все сущности созранены, Publisher формирует файл данных в формате Excel 2003. 
При этом для всех версионных данных проставляется колонка TerminationDate соответствующая реальной TerminateDate. 
После загрузки данных из сформированного файла, всем версионным сущностям простявляется реальный TerminationDate.